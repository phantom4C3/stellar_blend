{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///D:/Coding/Hackathons/stellar_blend/frontend/lib/constants.js"],"sourcesContent":["export const API_CONFIG = {\r\n  BASE_URL: process.env.NEXT_PUBLIC_BACKEND_API_URL || 'http://localhost:3001/api',\r\n  TIMEOUT_MS: 30000,\r\n};\r\n\r\nexport const NETWORK = {\r\n  NETWORK_PASSPHRASE: 'Test SDF Network ; September 2015',\r\n  SOROBAN_RPC_URL: 'https://soroban-testnet.stellar.org',\r\n};\r\n\r\nexport const NOTIFICATION_TYPES = {\r\n  CUSTOM: 'custom',\r\n  RISK_ALERT: 'risk_alert',\r\n  DEPOSIT: 'deposit',\r\n  BORROW: 'borrow',\r\n  POOL_DEPLOYED: 'pool_deployed',\r\n};\r\n\r\nexport const NOTIFICATION_SEVERITIES = {\r\n  INFO: 'info',\r\n  WARNING: 'warning',\r\n  HIGH: 'high',\r\n};\r\n\r\nexport const NOTIFICATION_MAX_MESSAGE_LENGTH = 500;\r\n\r\nexport const DEFAULT_POOL_PARAMETERS = {\r\n  ASSETS: ['XLM', 'USDC', 'ZUSD', 'AUDD', 'MBRL', 'KES', 'RWF', 'NGNT', 'BTC', 'ETH', 'REToken', 'GOLD', 'SVLR', 'LiquidityPoolShares', 'Custom'],\r\n  DEFAULT_APY: 500,   DEFAULT_TVL: 100000,   DEFAULT_RISK_FACTOR: 'Low',\r\n  DEFAULT_RATE: 0,\r\n};\r\n\r\nexport const TEMPLATE_NAMES = [\r\n  'StableYield',\r\n  'GlobalFlow',\r\n  'AssetVault',\r\n  'CryptoBoost',\r\n  'InclusiveLend',\r\n  'Custom',\r\n];\r\n\r\nexport const WALLET_CONFIG = {\r\n  MIN_LENGTH_ADDRESS: 56,\r\n  MAX_LENGTH_ADDRESS: 56,\r\n};\r\n\r\nexport const CURRENT_DATE = new Date('2025-07-06T18:30:00+05:30'); export const TIMESTAMP_FORMAT = 'YYYY-MM-DD HH:mm:ss';\r\n\r\nexport const ERROR_MESSAGES = {\r\n  WALLET_NOT_CONNECTED: 'Wallet not connected',\r\n  NETWORK_ERROR: 'Network error occurred',\r\n  INVALID_INPUT: 'Invalid input provided',\r\n};\r\n\r\nexport const ASSET_DISPLAY = {\r\n  XLM: { symbol: 'XLM', decimals: 7 },\r\n  USDC: { symbol: 'USDC', decimals: 6 },\r\n  ZUSD: { symbol: 'ZUSD', decimals: 6 },\r\n  };\r\n\r\n  export  const TEMPLATE_OPTIONS = {\r\n  names: ['StableYield', 'GlobalFlow', 'AssetVault', 'CryptoBoost', 'InclusiveLend', 'Custom'],\r\n  imageTypes: ['PNG', 'SVG', 'JPEG', 'GIF', 'WebP'],\r\n  assets: ['XLM', 'USDC', 'ZUSD', 'AUDD', 'MBRL', 'KES', 'RWF', 'NGNT', 'BTC', 'ETH', 'REToken', 'GOLD', 'SVLR', 'LiquidityPoolShares', 'Custom'],\r\n  popularity: ['Low', 'Medium', 'High', 'Very High'],\r\n  apy: [0.02, 0.035, 0.05, 0.065, 0.078, 0.082, 0.1, 0.12],\r\n  tvl: [100000, 500000, 800000, 1000000, 2300000, 3500000, 5000000, 6000000],\r\n  riskFactors: ['Low', 'Medium', 'Medium-High', 'High', 'Very High'],\r\n  deploymentFrequencies: ['Weekly', 'Bi-weekly', 'Monthly', 'Quarterly', 'One-Time', 'Custom'],\r\n  interestPeriods: ['weekly', 'bi-weekly', 'monthly', 'quarterly'],\r\n  returnDurations: ['Daily', 'Weekly', 'Bi-weekly', 'Monthly', 'Quarterly', 'Custom'],\r\n  deposits: [10000, 100000, 500000, 700000, 1000000, 2000000, 3200000, 4800000, 5500000],\r\n  borrows: [5000, 50000, 200000, 400000, 1000000, 1400000, 1800000, 2100000, 3200000],\r\n  maxPositions: [1, 2, 3, 4, 5, 'Unlimited'],\r\n  oracleProviders: ['Chainlink', 'MINTX', 'Band Protocol', 'Custom'],\r\n  backstopModules: ['Enabled', 'Disabled'],\r\n  collateralizationRatios: [1, 1.25, 1.5, 2],\r\n  liquidationThresholds: [0.8, 0.85, 0.9],\r\n  anchorIntegrations: ['MoneyGram', 'Cowrie', 'Vibrant', 'None'],\r\n  poolTypes: ['Isolated', 'Cross-Pool'],\r\n  accessControls: ['Public', 'Whitelisted', 'KYC-Required'],\r\n  feeStructures: [0.001, 0.005, 0.01],\r\n  loopingStrategies: ['Enabled', 'Disabled'],\r\n  geographicFocuses: ['Global', 'Emerging Markets', 'Specific Region', 'Custom'],\r\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAO,MAAM,aAAa;IACxB,UAAU,wCAA2C;IACrD,YAAY;AACd;AAEO,MAAM,UAAU;IACrB,oBAAoB;IACpB,iBAAiB;AACnB;AAEO,MAAM,qBAAqB;IAChC,QAAQ;IACR,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,eAAe;AACjB;AAEO,MAAM,0BAA0B;IACrC,MAAM;IACN,SAAS;IACT,MAAM;AACR;AAEO,MAAM,kCAAkC;AAExC,MAAM,0BAA0B;IACrC,QAAQ;QAAC;QAAO;QAAQ;QAAQ;QAAQ;QAAQ;QAAO;QAAO;QAAQ;QAAO;QAAO;QAAW;QAAQ;QAAQ;QAAuB;KAAS;IAC/I,aAAa;IAAO,aAAa;IAAU,qBAAqB;IAChE,cAAc;AAChB;AAEO,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,gBAAgB;IAC3B,oBAAoB;IACpB,oBAAoB;AACtB;AAEO,MAAM,eAAe,IAAI,KAAK;AAAqC,MAAM,mBAAmB;AAE5F,MAAM,iBAAiB;IAC5B,sBAAsB;IACtB,eAAe;IACf,eAAe;AACjB;AAEO,MAAM,gBAAgB;IAC3B,KAAK;QAAE,QAAQ;QAAO,UAAU;IAAE;IAClC,MAAM;QAAE,QAAQ;QAAQ,UAAU;IAAE;IACpC,MAAM;QAAE,QAAQ;QAAQ,UAAU;IAAE;AACpC;AAEQ,MAAM,mBAAmB;IACjC,OAAO;QAAC;QAAe;QAAc;QAAc;QAAe;QAAiB;KAAS;IAC5F,YAAY;QAAC;QAAO;QAAO;QAAQ;QAAO;KAAO;IACjD,QAAQ;QAAC;QAAO;QAAQ;QAAQ;QAAQ;QAAQ;QAAO;QAAO;QAAQ;QAAO;QAAO;QAAW;QAAQ;QAAQ;QAAuB;KAAS;IAC/I,YAAY;QAAC;QAAO;QAAU;QAAQ;KAAY;IAClD,KAAK;QAAC;QAAM;QAAO;QAAM;QAAO;QAAO;QAAO;QAAK;KAAK;IACxD,KAAK;QAAC;QAAQ;QAAQ;QAAQ;QAAS;QAAS;QAAS;QAAS;KAAQ;IAC1E,aAAa;QAAC;QAAO;QAAU;QAAe;QAAQ;KAAY;IAClE,uBAAuB;QAAC;QAAU;QAAa;QAAW;QAAa;QAAY;KAAS;IAC5F,iBAAiB;QAAC;QAAU;QAAa;QAAW;KAAY;IAChE,iBAAiB;QAAC;QAAS;QAAU;QAAa;QAAW;QAAa;KAAS;IACnF,UAAU;QAAC;QAAO;QAAQ;QAAQ;QAAQ;QAAS;QAAS;QAAS;QAAS;KAAQ;IACtF,SAAS;QAAC;QAAM;QAAO;QAAQ;QAAQ;QAAS;QAAS;QAAS;QAAS;KAAQ;IACnF,cAAc;QAAC;QAAG;QAAG;QAAG;QAAG;QAAG;KAAY;IAC1C,iBAAiB;QAAC;QAAa;QAAS;QAAiB;KAAS;IAClE,iBAAiB;QAAC;QAAW;KAAW;IACxC,yBAAyB;QAAC;QAAG;QAAM;QAAK;KAAE;IAC1C,uBAAuB;QAAC;QAAK;QAAM;KAAI;IACvC,oBAAoB;QAAC;QAAa;QAAU;QAAW;KAAO;IAC9D,WAAW;QAAC;QAAY;KAAa;IACrC,gBAAgB;QAAC;QAAU;QAAe;KAAe;IACzD,eAAe;QAAC;QAAO;QAAO;KAAK;IACnC,mBAAmB;QAAC;QAAW;KAAW;IAC1C,mBAAmB;QAAC;QAAU;QAAoB;QAAmB;KAAS;AAChF","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///D:/Coding/Hackathons/stellar_blend/frontend/components/TemplateForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport { TEMPLATE_OPTIONS } from '../lib/constants.js'\r\n\r\ninterface TemplateFormProps {\r\n  initialValues?: {\r\n    name?: string;\r\n    description?: string;\r\n    content?: string;\r\n    imageType?: string;\r\n    asset?: string;\r\n    popularity?: string;\r\n    apy?: number;\r\n    tvl?: number;\r\n    riskFactor?: string;\r\n    deploymentFrequency?: string;\r\n    interestPeriod?: string;\r\n    returnDuration?: string;\r\n    deposit?: number;\r\n    borrow?: number;\r\n    maxPosition?: number | string;\r\n    oracleProvider?: string;\r\n    backstopModule?: string;\r\n    collateralizationRatio?: number;\r\n    liquidationThreshold?: number;\r\n    anchorIntegration?: string;\r\n    poolType?: string;\r\n    accessControl?: string;\r\n    feeStructure?: number;\r\n    loopingStrategy?: string;\r\n    geographicFocus?: string;\r\n  };\r\n  onSubmit: (formData: {\r\n    name: string;\r\n    description: string;\r\n    content: string;\r\n    imageType: string;\r\n    asset: string;\r\n    popularity: string;\r\n    apy: number;\r\n    tvl: number;\r\n    riskFactor: string;\r\n    deploymentFrequency: string;\r\n    interestPeriod: string;\r\n    returnDuration: string;\r\n    deposit: number;\r\n    borrow: number;\r\n    maxPosition: number | string;\r\n    oracleProvider: string;\r\n    backstopModule: string;\r\n    collateralizationRatio: number;\r\n    liquidationThreshold: number;\r\n    anchorIntegration: string;\r\n    poolType: string;\r\n    accessControl: string;\r\n    feeStructure: number;\r\n    loopingStrategy: string;\r\n    geographicFocus: string;\r\n  }) => void;\r\n}\r\n\r\nconst TemplateForm: React.FC<TemplateFormProps> = ({ initialValues = {}, onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: initialValues.name || '',\r\n    description: initialValues.description || '',\r\n    content: initialValues.content || '',\r\n    imageType: initialValues.imageType || 'PNG',\r\n    asset: initialValues.asset || 'XLM',\r\n    popularity: initialValues.popularity || 'Low',\r\n    apy: initialValues.apy || 0.02,\r\n    tvl: initialValues.tvl || 100000,\r\n    riskFactor: initialValues.riskFactor || 'Low',\r\n    deploymentFrequency: initialValues.deploymentFrequency || 'Monthly',\r\n    interestPeriod: initialValues.interestPeriod || 'monthly',\r\n    returnDuration: initialValues.returnDuration || 'Monthly',\r\n    deposit: initialValues.deposit || 10000,\r\n    borrow: initialValues.borrow || 5000,\r\n    maxPosition: initialValues.maxPosition || 1,\r\n    oracleProvider: initialValues.oracleProvider || 'Chainlink',\r\n    backstopModule: initialValues.backstopModule || 'Disabled',\r\n    collateralizationRatio: initialValues.collateralizationRatio || 1,\r\n    liquidationThreshold: initialValues.liquidationThreshold || 0.8,\r\n    anchorIntegration: initialValues.anchorIntegration || 'None',\r\n    poolType: initialValues.poolType || 'Isolated',\r\n    accessControl: initialValues.accessControl || 'Public',\r\n    feeStructure: initialValues.feeStructure || 0.001,\r\n    loopingStrategy: initialValues.loopingStrategy || 'Disabled',\r\n    geographicFocus: initialValues.geographicFocus || 'Global',\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: '',\r\n    description: '',\r\n    content: '',\r\n  });\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {\r\n      name: formData.name ? '' : 'Name is required',\r\n      description: formData.description ? '' : 'Description is required',\r\n      content: formData.content ? '' : 'Content is required',\r\n    };\r\n    setErrors(newErrors);\r\n    return !Object.values(newErrors).some((error) => error);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      onSubmit(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">Create New Template</h2>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\r\n        <select\r\n          id=\"name\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.names.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n        {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n        <textarea\r\n          id=\"description\"\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n          rows={3}\r\n        />\r\n        {errors.description && <p className=\"text-red-500 text-sm mt-1\">{errors.description}</p>}\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700\">Content</label>\r\n        <textarea\r\n          id=\"content\"\r\n          name=\"content\"\r\n          value={formData.content}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n          rows={4}\r\n        />\r\n        {errors.content && <p className=\"text-red-500 text-sm mt-1\">{errors.content}</p>}\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"imageType\" className=\"block text-sm font-medium text-gray-700\">Image Type</label>\r\n        <select\r\n          id=\"imageType\"\r\n          name=\"imageType\"\r\n          value={formData.imageType}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.imageTypes.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"asset\" className=\"block text-sm font-medium text-gray-700\">Asset</label>\r\n        <select\r\n          id=\"asset\"\r\n          name=\"asset\"\r\n          value={formData.asset}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.assets.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"popularity\" className=\"block text-sm font-medium text-gray-700\">Popularity</label>\r\n        <select\r\n          id=\"popularity\"\r\n          name=\"popularity\"\r\n          value={formData.popularity}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.popularity.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"apy\" className=\"block text-sm font-medium text-gray-700\">APY</label>\r\n        <select\r\n          id=\"apy\"\r\n          name=\"apy\"\r\n          value={formData.apy}\r\n          onChange={(e) => handleChange({ ...e, target: { ...e.target, value: Number(e.target.value) } } as any)}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.apy.map((option) => (\r\n            <option key={option} value={option}>{(option * 100).toFixed(2)}%</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"tvl\" className=\"block text-sm font-medium text-gray-700\">TVL</label>\r\n        <select\r\n          id=\"tvl\"\r\n          name=\"tvl\"\r\n          value={formData.tvl}\r\n          onChange={(e) => handleChange({ ...e, target: { ...e.target, value: Number(e.target.value) } } as any)}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.tvl.map((option) => (\r\n            <option key={option} value={option}>{option.toLocaleString()} XLM</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"riskFactor\" className=\"block text-sm font-medium text-gray-700\">Risk Factor</label>\r\n        <select\r\n          id=\"riskFactor\"\r\n          name=\"riskFactor\"\r\n          value={formData.riskFactor}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.riskFactors.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"deploymentFrequency\" className=\"block text-sm font-medium text-gray-700\">Deployment Frequency</label>\r\n        <select\r\n          id=\"deploymentFrequency\"\r\n          name=\"deploymentFrequency\"\r\n          value={formData.deploymentFrequency}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.deploymentFrequencies.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"interestPeriod\" className=\"block text-sm font-medium text-gray-700\">Interest Period</label>\r\n        <select\r\n          id=\"interestPeriod\"\r\n          name=\"interestPeriod\"\r\n          value={formData.interestPeriod}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.interestPeriods.map((option) => (\r\n            <option key={option} value={option}>{option.charAt(0).toUpperCase() + option.slice(1)}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"returnDuration\" className=\"block text-sm font-medium text-gray-700\">Return Duration</label>\r\n        <select\r\n          id=\"returnDuration\"\r\n          name=\"returnDuration\"\r\n          value={formData.returnDuration}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.returnDurations.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"deposit\" className=\"block text-sm font-medium text-gray-700\">Deposit</label>\r\n        <select\r\n          id=\"deposit\"\r\n          name=\"deposit\"\r\n          value={formData.deposit}\r\n          onChange={(e) => handleChange({ ...e, target: { ...e.target, value: Number(e.target.value) } } as any)}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.deposits.map((option) => (\r\n            <option key={option} value={option}>{option.toLocaleString()} XLM</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"borrow\" className=\"block text-sm font-medium text-gray-700\">Borrow</label>\r\n        <select\r\n          id=\"borrow\"\r\n          name=\"borrow\"\r\n          value={formData.borrow}\r\n          onChange={(e) => handleChange({ ...e, target: { ...e.target, value: Number(e.target.value) } } as any)}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.borrows.map((option) => (\r\n            <option key={option} value={option}>{option.toLocaleString()} XLM</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"maxPosition\" className=\"block text-sm font-medium text-gray-700\">Max Position</label>\r\n        <select\r\n          id=\"maxPosition\"\r\n          name=\"maxPosition\"\r\n          value={formData.maxPosition}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.maxPositions.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"oracleProvider\" className=\"block text-sm font-medium text-gray-700\">Oracle Provider</label>\r\n        <select\r\n          id=\"oracleProvider\"\r\n          name=\"oracleProvider\"\r\n          value={formData.oracleProvider}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.oracleProviders.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"backstopModule\" className=\"block text-sm font-medium text-gray-700\">Backstop Module</label>\r\n        <select\r\n          id=\"backstopModule\"\r\n          name=\"backstopModule\"\r\n          value={formData.backstopModule}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.backstopModules.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"collateralizationRatio\" className=\"block text-sm font-medium text-gray-700\">Collateralization Ratio</label>\r\n        <select\r\n          id=\"collateralizationRatio\"\r\n          name=\"collateralizationRatio\"\r\n          value={formData.collateralizationRatio}\r\n          onChange={(e) => handleChange({ ...e, target: { ...e.target, value: Number(e.target.value) } } as any)}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.collateralizationRatios.map((option) => (\r\n            <option key={option} value={option}>{option}:1</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"liquidationThreshold\" className=\"block text-sm font-medium text-gray-700\">Liquidation Threshold</label>\r\n        <select\r\n          id=\"liquidationThreshold\"\r\n          name=\"liquidationThreshold\"\r\n          value={formData.liquidationThreshold}\r\n          onChange={(e) => handleChange({ ...e, target: { ...e.target, value: Number(e.target.value) } } as any)}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.liquidationThresholds.map((option) => (\r\n            <option key={option} value={option}>{(option * 100).toFixed(0)}%</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"anchorIntegration\" className=\"block text-sm font-medium text-gray-700\">Anchor Integration</label>\r\n        <select\r\n          id=\"anchorIntegration\"\r\n          name=\"anchorIntegration\"\r\n          value={formData.anchorIntegration}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.anchorIntegrations.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"poolType\" className=\"block text-sm font-medium text-gray-700\">Pool Type</label>\r\n        <select\r\n          id=\"poolType\"\r\n          name=\"poolType\"\r\n          value={formData.poolType}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.poolTypes.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"accessControl\" className=\"block text-sm font-medium text-gray-700\">Access Control</label>\r\n        <select\r\n          id=\"accessControl\"\r\n          name=\"accessControl\"\r\n          value={formData.accessControl}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.accessControls.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"feeStructure\" className=\"block text-sm font-medium text-gray-700\">Fee Structure</label>\r\n        <select\r\n          id=\"feeStructure\"\r\n          name=\"feeStructure\"\r\n          value={formData.feeStructure}\r\n          onChange={(e) => handleChange({ ...e, target: { ...e.target, value: Number(e.target.value) } } as any)}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.feeStructures.map((option) => (\r\n            <option key={option} value={option}>{(option * 100).toFixed(2)}%</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"loopingStrategy\" className=\"block text-sm font-medium text-gray-700\">Looping Strategy</label>\r\n        <select\r\n          id=\"loopingStrategy\"\r\n          name=\"loopingStrategy\"\r\n          value={formData.loopingStrategy}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.loopingStrategies.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"geographicFocus\" className=\"block text-sm font-medium text-gray-700\">Geographic Focus</label>\r\n        <select\r\n          id=\"geographicFocus\"\r\n          name=\"geographicFocus\"\r\n          value={formData.geographicFocus}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md\"\r\n        >\r\n          {TEMPLATE_OPTIONS.geographicFocuses.map((option) => (\r\n            <option key={option} value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600 transition-colors\"\r\n      >\r\n        Submit Template\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TemplateForm;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AA8DA,MAAM,eAA4C,CAAC,EAAE,gBAAgB,CAAC,CAAC,EAAE,QAAQ,EAAE;IACjF,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,MAAM,cAAc,IAAI,IAAI;QAC5B,aAAa,cAAc,WAAW,IAAI;QAC1C,SAAS,cAAc,OAAO,IAAI;QAClC,WAAW,cAAc,SAAS,IAAI;QACtC,OAAO,cAAc,KAAK,IAAI;QAC9B,YAAY,cAAc,UAAU,IAAI;QACxC,KAAK,cAAc,GAAG,IAAI;QAC1B,KAAK,cAAc,GAAG,IAAI;QAC1B,YAAY,cAAc,UAAU,IAAI;QACxC,qBAAqB,cAAc,mBAAmB,IAAI;QAC1D,gBAAgB,cAAc,cAAc,IAAI;QAChD,gBAAgB,cAAc,cAAc,IAAI;QAChD,SAAS,cAAc,OAAO,IAAI;QAClC,QAAQ,cAAc,MAAM,IAAI;QAChC,aAAa,cAAc,WAAW,IAAI;QAC1C,gBAAgB,cAAc,cAAc,IAAI;QAChD,gBAAgB,cAAc,cAAc,IAAI;QAChD,wBAAwB,cAAc,sBAAsB,IAAI;QAChE,sBAAsB,cAAc,oBAAoB,IAAI;QAC5D,mBAAmB,cAAc,iBAAiB,IAAI;QACtD,UAAU,cAAc,QAAQ,IAAI;QACpC,eAAe,cAAc,aAAa,IAAI;QAC9C,cAAc,cAAc,YAAY,IAAI;QAC5C,iBAAiB,cAAc,eAAe,IAAI;QAClD,iBAAiB,cAAc,eAAe,IAAI;IACpD;IACA,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACnC,MAAM;QACN,aAAa;QACb,SAAS;IACX;IAEA,MAAM,eAAe;QACnB,MAAM,YAAY;YAChB,MAAM,SAAS,IAAI,GAAG,KAAK;YAC3B,aAAa,SAAS,WAAW,GAAG,KAAK;YACzC,SAAS,SAAS,OAAO,GAAG,KAAK;QACnC;QACA,UAAU;QACV,OAAO,CAAC,OAAO,MAAM,CAAC,WAAW,IAAI,CAAC,CAAC,QAAU;IACnD;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAC,OAAS,CAAC;gBACrB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACV,CAAC;IACH;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,gBAAgB;YAClB,SAAS;QACX;IACF;IAEA,qBACE,8OAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,8OAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAEpD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAO,WAAU;kCAA0C;;;;;;kCAC1E,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,IAAI;wBACpB,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,uBAC3B,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;oBAGhB,OAAO,IAAI,kBAAI,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,IAAI;;;;;;;;;;;;0BAGvE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAc,WAAU;kCAA0C;;;;;;kCACjF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,WAAW;wBAC3B,UAAU;wBACV,WAAU;wBACV,MAAM;;;;;;oBAEP,OAAO,WAAW,kBAAI,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,WAAW;;;;;;;;;;;;0BAGrF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAU,WAAU;kCAA0C;;;;;;kCAC7E,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,OAAO;wBACvB,UAAU;wBACV,WAAU;wBACV,MAAM;;;;;;oBAEP,OAAO,OAAO,kBAAI,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,OAAO;;;;;;;;;;;;0BAG7E,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAY,WAAU;kCAA0C;;;;;;kCAC/E,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,SAAS;wBACzB,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,uBAChC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAQ,WAAU;kCAA0C;;;;;;kCAC3E,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,KAAK;wBACrB,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,uBAC5B,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAa,WAAU;kCAA0C;;;;;;kCAChF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,UAAU;wBAC1B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,uBAChC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAM,WAAU;kCAA0C;;;;;;kCACzE,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,GAAG;wBACnB,UAAU,CAAC,IAAM,aAAa;gCAAE,GAAG,CAAC;gCAAE,QAAQ;oCAAE,GAAG,EAAE,MAAM;oCAAE,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gCAAE;4BAAE;wBAC7F,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,uBACzB,8OAAC;gCAAoB,OAAO;;oCAAS,CAAC,SAAS,GAAG,EAAE,OAAO,CAAC;oCAAG;;+BAAlD;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAM,WAAU;kCAA0C;;;;;;kCACzE,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,GAAG;wBACnB,UAAU,CAAC,IAAM,aAAa;gCAAE,GAAG,CAAC;gCAAE,QAAQ;oCAAE,GAAG,EAAE,MAAM;oCAAE,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gCAAE;4BAAE;wBAC7F,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,uBACzB,8OAAC;gCAAoB,OAAO;;oCAAS,OAAO,cAAc;oCAAG;;+BAAhD;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAa,WAAU;kCAA0C;;;;;;kCAChF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,UAAU;wBAC1B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,uBACjC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAsB,WAAU;kCAA0C;;;;;;kCACzF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,mBAAmB;wBACnC,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,uBAC3C,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAiB,WAAU;kCAA0C;;;;;;kCACpF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,cAAc;wBAC9B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,uBACrC,8OAAC;gCAAoB,OAAO;0CAAS,OAAO,MAAM,CAAC,GAAG,WAAW,KAAK,OAAO,KAAK,CAAC;+BAAtE;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAiB,WAAU;kCAA0C;;;;;;kCACpF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,cAAc;wBAC9B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,uBACrC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAU,WAAU;kCAA0C;;;;;;kCAC7E,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,OAAO;wBACvB,UAAU,CAAC,IAAM,aAAa;gCAAE,GAAG,CAAC;gCAAE,QAAQ;oCAAE,GAAG,EAAE,MAAM;oCAAE,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gCAAE;4BAAE;wBAC7F,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,uBAC9B,8OAAC;gCAAoB,OAAO;;oCAAS,OAAO,cAAc;oCAAG;;+BAAhD;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAS,WAAU;kCAA0C;;;;;;kCAC5E,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,MAAM;wBACtB,UAAU,CAAC,IAAM,aAAa;gCAAE,GAAG,CAAC;gCAAE,QAAQ;oCAAE,GAAG,EAAE,MAAM;oCAAE,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gCAAE;4BAAE;wBAC7F,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,uBAC7B,8OAAC;gCAAoB,OAAO;;oCAAS,OAAO,cAAc;oCAAG;;+BAAhD;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAc,WAAU;kCAA0C;;;;;;kCACjF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,WAAW;wBAC3B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,uBAClC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAiB,WAAU;kCAA0C;;;;;;kCACpF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,cAAc;wBAC9B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,uBACrC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAiB,WAAU;kCAA0C;;;;;;kCACpF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,cAAc;wBAC9B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,uBACrC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAyB,WAAU;kCAA0C;;;;;;kCAC5F,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,sBAAsB;wBACtC,UAAU,CAAC,IAAM,aAAa;gCAAE,GAAG,CAAC;gCAAE,QAAQ;oCAAE,GAAG,EAAE,MAAM;oCAAE,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gCAAE;4BAAE;wBAC7F,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,uBAC7C,8OAAC;gCAAoB,OAAO;;oCAAS;oCAAO;;+BAA/B;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAuB,WAAU;kCAA0C;;;;;;kCAC1F,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,oBAAoB;wBACpC,UAAU,CAAC,IAAM,aAAa;gCAAE,GAAG,CAAC;gCAAE,QAAQ;oCAAE,GAAG,EAAE,MAAM;oCAAE,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gCAAE;4BAAE;wBAC7F,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,uBAC3C,8OAAC;gCAAoB,OAAO;;oCAAS,CAAC,SAAS,GAAG,EAAE,OAAO,CAAC;oCAAG;;+BAAlD;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAoB,WAAU;kCAA0C;;;;;;kCACvF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,iBAAiB;wBACjC,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,uBACxC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAW,WAAU;kCAA0C;;;;;;kCAC9E,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,QAAQ;wBACxB,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,uBAC/B,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAgB,WAAU;kCAA0C;;;;;;kCACnF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,aAAa;wBAC7B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,uBACpC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAe,WAAU;kCAA0C;;;;;;kCAClF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,YAAY;wBAC5B,UAAU,CAAC,IAAM,aAAa;gCAAE,GAAG,CAAC;gCAAE,QAAQ;oCAAE,GAAG,EAAE,MAAM;oCAAE,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gCAAE;4BAAE;wBAC7F,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,uBACnC,8OAAC;gCAAoB,OAAO;;oCAAS,CAAC,SAAS,GAAG,EAAE,OAAO,CAAC;oCAAG;;+BAAlD;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAkB,WAAU;kCAA0C;;;;;;kCACrF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,eAAe;wBAC/B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,uBACvC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,SAAQ;wBAAkB,WAAU;kCAA0C;;;;;;kCACrF,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,eAAe;wBAC/B,UAAU;wBACV,WAAU;kCAET,gHAAA,CAAA,mBAAgB,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,uBACvC,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;;;;;;;;0BAKnB,8OAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP;uCAEe","debugId":null}},
    {"offset": {"line": 1485, "column": 0}, "map": {"version":3,"sources":["file:///D:/Coding/Hackathons/stellar_blend/frontend/stores/walletStore.js"],"sourcesContent":["import { create } from \"zustand\";\r\nimport {\r\n  getPublicKey,\r\n  signTransaction,\r\n  isConnected,\r\n} from \"@stellar/freighter-api\"; \r\nimport {NETWORK} from '@/lib/constants.js'\r\nimport { Server } from \"@stellar/stellar-sdk/rpc\";\r\n\r\nconst sorobanClient = new Server(NETWORK.SOROBAN_RPC_URL, {\r\n  allowHttp: true,\r\n});\r\n\r\nconst useWalletStore = create((set, get) => ({\r\n  accountDetails: null,\r\n  publicKey: null,\r\n  secretKey: null,\r\n  loading: false,\r\n  error: null,\r\n  wallet: null,\r\n  signature: null,\r\n\r\n  setPublicKey: (publicKey) => set({ publicKey }),\r\n  setSecretKey: (secretKey) => set({ secretKey }),\r\n\r\n  connectWallet: async () => {\r\n    try {\r\n      const publicKey = await getPublicKey();\r\n      const challenge = \"default-challenge\";\r\n      const signedChallenge = await signTransaction(challenge);\r\n\r\n      setSignature(signedChallenge);\r\n      setWallet({ address: publicKey, signature: signedChallenge });\r\n\r\n      if (!(await isConnected())) {\r\n        throw new Error(\"Freighter wallet is not installed or not connected\");\r\n      }\r\n\r\n      set({ isLoading: false });\r\n      return wallet;\r\n    } catch (error) {\r\n      alert(\"Failed to connect wallet.\");\r\n      console.error(\"Failed to connect Wallet\", error);\r\n    }\r\n  },\r\n\r\n  disconnectWallet: () => set({ wallet: null }),\r\n\r\n  getAuthHeaders: () => {\r\n    const { wallet } = useWalletStore.getState();\r\n    return wallet\r\n      ? {\r\n          \"x-stellar-address\": wallet.address,\r\n          \"x-stellar-signature\": wallet.signature,\r\n        }\r\n      : {};\r\n  },\r\n\r\n  resetError: () => set({ error: null }),\r\n\r\n  getAccountDetails: async () => {\r\n    const publicKey = get().publicKey;\r\n    if (!publicKey) return;\r\n\r\n    set({ loading: true });\r\n    try {\r\n    } catch (error) {\r\n      console.error(\"Error loading Account\");\r\n      set({ error: \"Error loading account\" });\r\n    } finally {\r\n      set({ loading: false });\r\n    }\r\n  },\r\n\r\n  submitTransaction: async (transaction) => {\r\n    try {\r\n      const result = await server.submitTransaction(transaction);\r\n      return result;\r\n    } catch (error) {\r\n      console.error(\"Error submitting Transaction\");\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  signTransaction: async (transaction) => {\r\n    const secretKey = get().secretKey;\r\n    if (!secretKey) return;\r\n\r\n    try {\r\n      const keyPair = StellarSdk.KeyPair.fromSecretKey(secretKey);\r\n      transaction.sign(keyPair);\r\n      return transaction;\r\n    } catch (error) {\r\n      console.error(\"Error signing Transaction\");\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  buildTransaction: async (operation) => {\r\n    const accountDetails = get().accountDetails;\r\n    if (!accountDetails) return;\r\n\r\n    try {\r\n      const transaction = StellarSdk.TransactionBuilder(accountDetails)\r\n        .addOperation(operation)\r\n        .setTimeOut(30)\r\n        .build();\r\n      return transaction;\r\n    } catch (error) {\r\n      console.error(\"Error buiding Transaction\", error);\r\n      throw error;\r\n    }\r\n  },\r\n}));\r\n\r\nexport default useWalletStore;\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAKA;AACA;;;;;AAEA,MAAM,gBAAgB,IAAI,kKAAA,CAAA,SAAM,CAAC,gHAAA,CAAA,UAAO,CAAC,eAAe,EAAE;IACxD,WAAW;AACb;AAEA,MAAM,iBAAiB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAE,CAAC,KAAK,MAAQ,CAAC;QAC3C,gBAAgB;QAChB,WAAW;QACX,WAAW;QACX,SAAS;QACT,OAAO;QACP,QAAQ;QACR,WAAW;QAEX,cAAc,CAAC,YAAc,IAAI;gBAAE;YAAU;QAC7C,cAAc,CAAC,YAAc,IAAI;gBAAE;YAAU;QAE7C,eAAe;YACb,IAAI;gBACF,MAAM,YAAY,MAAM,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD;gBACnC,MAAM,YAAY;gBAClB,MAAM,kBAAkB,MAAM,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD,EAAE;gBAE9C,aAAa;gBACb,UAAU;oBAAE,SAAS;oBAAW,WAAW;gBAAgB;gBAE3D,IAAI,CAAE,MAAM,CAAA,GAAA,sKAAA,CAAA,cAAW,AAAD,KAAM;oBAC1B,MAAM,IAAI,MAAM;gBAClB;gBAEA,IAAI;oBAAE,WAAW;gBAAM;gBACvB,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,MAAM;gBACN,QAAQ,KAAK,CAAC,4BAA4B;YAC5C;QACF;QAEA,kBAAkB,IAAM,IAAI;gBAAE,QAAQ;YAAK;QAE3C,gBAAgB;YACd,MAAM,EAAE,QAAA,OAAM,EAAE,GAAG,eAAe,QAAQ;YAC1C,OAAO,UACH;gBACE,qBAAqB,QAAO,OAAO;gBACnC,uBAAuB,QAAO,SAAS;YACzC,IACA,CAAC;QACP;QAEA,YAAY,IAAM,IAAI;gBAAE,OAAO;YAAK;QAEpC,mBAAmB;YACjB,MAAM,YAAY,MAAM,SAAS;YACjC,IAAI,CAAC,WAAW;YAEhB,IAAI;gBAAE,SAAS;YAAK;YACpB,IAAI,CACJ,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC;gBACd,IAAI;oBAAE,OAAO;gBAAwB;YACvC,SAAU;gBACR,IAAI;oBAAE,SAAS;gBAAM;YACvB;QACF;QAEA,mBAAmB,OAAO;YACxB,IAAI;gBACF,MAAM,SAAS,MAAM,OAAO,iBAAiB,CAAC;gBAC9C,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC;gBACd,MAAM;YACR;QACF;QAEA,iBAAiB,OAAO;YACtB,MAAM,YAAY,MAAM,SAAS;YACjC,IAAI,CAAC,WAAW;YAEhB,IAAI;gBACF,MAAM,UAAU,WAAW,OAAO,CAAC,aAAa,CAAC;gBACjD,YAAY,IAAI,CAAC;gBACjB,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC;gBACd,MAAM;YACR;QACF;QAEA,kBAAkB,OAAO;YACvB,MAAM,iBAAiB,MAAM,cAAc;YAC3C,IAAI,CAAC,gBAAgB;YAErB,IAAI;gBACF,MAAM,cAAc,WAAW,kBAAkB,CAAC,gBAC/C,YAAY,CAAC,WACb,UAAU,CAAC,IACX,KAAK;gBACR,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,MAAM;YACR;QACF;IACF,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 1605, "column": 0}, "map": {"version":3,"sources":["file:///D:/Coding/Hackathons/stellar_blend/frontend/lib/soroban.js"],"sourcesContent":["import {\r\n  Contract,\r\n  TransactionBuilder,\r\n  xdr,\r\n} from \"@stellar/stellar-sdk\";\r\nimport  useWalletStore  from \"../stores/walletStore\";\r\nimport { NETWORK, CURRENT_DATE } from \"./constants\";\r\n\r\nimport { Server } from \"@stellar/stellar-sdk/rpc\";\r\n\r\nconst sorobanClient = new Server(NETWORK.SOROBAN_RPC_URL, {\r\n  allowHttp: true,\r\n});\r\n\r\nconst CONTRACT_ADDRESSES = {\r\n  BLEND_CONTRACT:\r\n    process.env.NEXT_PUBLIC_BLEND_CONTRACT_ADDRESS ||\r\n    \"CBTEST Blend Contract Address\",\r\n  NOTIFICATION_CONTRACT:\r\n    process.env.NEXT_PUBLIC_NOTIFICATION_CONTRACT_ADDRESS ||\r\n    \"CBTEST Notification Contract Address\",\r\n};\r\n\r\nconst getAccount = async () => {\r\n  const wallet = useWalletStore.getState().wallet;\r\n  if (!wallet?.address) throw new Error(\"Wallet not connected\");\r\n  return await sorobanClient.getAccount(wallet.address);\r\n};\r\n\r\nexport const fetchPoolsFromContract = async () => {\r\n  try {\r\n    const account = await getAccount();\r\n    const contract = new Contract(CONTRACT_ADDRESSES.BLEND_CONTRACT);\r\n    const txBuilder = new TransactionBuilder(account, {\r\n      fee: \"100\",\r\n      networkPassphrase: NETWORK.NETWORK_PASSPHRASE,\r\n    });\r\n\r\n    const tx = txBuilder\r\n      .addOperation(contract.call(\"get_all_pools\"))\r\n      .setTimeout(30)\r\n      .build();\r\n\r\n    const response = await sorobanClient.simulateTransaction(tx);\r\n    if (response.results && response.results.length > 0) {\r\n      const result = xdr.ScVal.fromXDR(\r\n        response.results[0].xdr,\r\n        \"base64\"\r\n      ).toObject();\r\n      return result.map((pool) => ({\r\n        id: pool.id.toString(\"hex\"),\r\n        template_id: pool.template_id.toString(\"hex\"),\r\n        creator: pool.creator.toString(),\r\n        parameters: {\r\n          assets: pool.parameters.assets,\r\n          apy: pool.parameters.apy,\r\n          tvl: pool.parameters.tvl,\r\n          risk_factor: pool.parameters.risk_factor,\r\n        },\r\n        default_rate: pool.default_rate,\r\n        created_at: CURRENT_DATE.getTime() / 1000,\r\n        updated_at: CURRENT_DATE.getTime() / 1000,\r\n      }));\r\n    }\r\n    return [];\r\n  } catch (error) {\r\n    throw new Error(`Failed to fetch pools: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const deployPoolToContract = async (templateId, parameters) => {\r\n  try {\r\n    const account = await getAccount();\r\n    const contract = new Contract(CONTRACT_ADDRESSES.BLEND_CONTRACT);\r\n    const txBuilder = new TransactionBuilder(account, {\r\n      fee: \"100\",\r\n      networkPassphrase: NETWORK.NETWORK_PASSPHRASE,\r\n    });\r\n\r\n    const tx = txBuilder\r\n      .addOperation(\r\n        contract.call(\r\n          \"deploy_pool\",\r\n          xdr.ScVal.scvBytes(Buffer.from(templateId, \"hex\")),\r\n          account.accountId(),\r\n          xdr.ScVal.scvObject({\r\n            assets: parameters.assets || [],\r\n            apy: parameters.apy || 500,\r\n            tvl: parameters.tvl || 100000,\r\n            risk_factor: parameters.risk_factor || \"Low\",\r\n          })\r\n        )\r\n      )\r\n      .setTimeout(30)\r\n      .build();\r\n\r\n    const preparedTx = await sorobanClient.prepareTransaction(tx);\r\n    const signedTx = await useWalletStore\r\n      .getState()\r\n      .wallet.signTransaction(preparedTx);\r\n    const result = await sorobanClient.sendTransaction(signedTx);\r\n\r\n    return {\r\n      id: result.hash.toString(\"hex\"),\r\n      template_id: templateId,\r\n      creator: account.accountId().toString(),\r\n      parameters,\r\n      default_rate: 0,\r\n      created_at: CURRENT_DATE.getTime() / 1000,\r\n      updated_at: CURRENT_DATE.getTime() / 1000,\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`Failed to deploy pool: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const addNotificationToContract = async (\r\n  type,\r\n  severity,\r\n  message,\r\n  templateId = null,\r\n  poolId = null\r\n) => {\r\n  try {\r\n    const account = await getAccount();\r\n    const contract = new Contract(CONTRACT_ADDRESSES.NOTIFICATION_CONTRACT);\r\n    const txBuilder = new TransactionBuilder(account, {\r\n      fee: \"100\",\r\n      networkPassphrase: NETWORK.NETWORK_PASSPHRASE,\r\n    });\r\n\r\n    const tx = txBuilder\r\n      .addOperation(\r\n        contract.call(\r\n          \"add_notification\",\r\n          account.accountId(),\r\n          type,\r\n          severity,\r\n          message,\r\n          templateId\r\n            ? xdr.ScVal.scvBytes(Buffer.from(templateId, \"hex\"))\r\n            : xdr.ScVal.scvVoid(),\r\n          poolId\r\n            ? xdr.ScVal.scvBytes(Buffer.from(poolId, \"hex\"))\r\n            : xdr.ScVal.scvVoid()\r\n        )\r\n      )\r\n      .setTimeout(30)\r\n      .build();\r\n\r\n    const preparedTx = await sorobanClient.prepareTransaction(tx);\r\n    const signedTx = await useWalletStore\r\n      .getState()\r\n      .wallet.signTransaction(preparedTx);\r\n    const result = await sorobanClient.sendTransaction(signedTx);\r\n\r\n    return {\r\n      id: result.hash.toString(\"hex\"),\r\n      user: account.accountId().toString(),\r\n      type,\r\n      severity,\r\n      message,\r\n      template_id: templateId,\r\n      pool_id: poolId,\r\n      timestamp: CURRENT_DATE.getTime() / 1000,\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`Failed to add notification: ${error.message}`);\r\n  }\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1724, "column": 0}, "map": {"version":3,"sources":["file:///D:/Coding/Hackathons/stellar_blend/frontend/app/%28home%29/templates/%5Bid%5D/deploy/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react'; \r\nimport { useRouter } from 'next/router';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { Contract, TransactionBuilder, xdr } from '@stellar/stellar-sdk';\r\nimport SorobanClient from '@stellar/stellar-sdk'\r\nimport TemplateForm from '@/components/TemplateForm';\r\nimport  useWalletStore  from '@/stores/walletStore';\r\nimport { CURRENT_DATE, NETWORK, TEMPLATE_OPTIONS } from '@/lib/constants';\r\nimport { fetchPoolsFromContract } from '@/lib/soroban';\r\nimport Image from 'next/image';\r\n\r\ninterface Template {\r\n  id: string;\r\n  template_id: string;\r\n  creator: string;\r\n  parameters: {\r\n    assets: string[];\r\n    apy: number;\r\n    tvl: number;\r\n    risk_factor: string;\r\n  };\r\n  default_rate: number;\r\n  created_at: number;\r\n  updated_at: number;\r\n  deployment_frequency?: number;\r\n  deposits?: number;\r\n  borrows?: number;\r\n}\r\n\r\nconst CommunityReview = ({ template }: { template: Template }) => {\r\n  const reviews = useMemo(() => [\r\n    { id: '1', user: 'User1', rating: 4, comment: 'Great APY!', date: CURRENT_DATE.toISOString().split('T')[0] },\r\n    { id: '2', user: 'User2', rating: 3, comment: 'Stable but risky.', date: CURRENT_DATE.toISOString().split('T')[0] },\r\n  ], []);\r\n\r\n  return (\r\n    <div className=\"mt-6\">\r\n      <h3 className=\"text-xl font-semibold mb-2\">Community Reviews</h3>\r\n      {reviews.length > 0 ? (\r\n        <ul className=\"list-disc pl-5\">\r\n          {reviews.map((review) => (\r\n            <li key={review.id} className=\"mb-2\">\r\n              <p><strong>{review.user}</strong> - {review.rating}/5</p>\r\n              <p>{review.comment} (Date: {review.date})</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"text-gray-500\">No reviews yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Deploy() {\r\n  const router = useRouter();\r\n  const [template, setTemplate] = useState<Template | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { wallet } = useWalletStore();\r\n  const sorobanClient = new SorobanClient.Server(NETWORK.SOROBAN_RPC_URL, { allowHttp: true });\r\n  const CONTRACT_ADDRESSES = {\r\n    BLEND_CONTRACT: process.env.NEXT_PUBLIC_BLEND_CONTRACT_ADDRESS || 'CBTEST Blend Contract Address',\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTemplate = async () => {\r\n      if (!wallet?.address) {\r\n        setError('Wallet not connected');\r\n        setIsLoading(false);\r\n        toast.error('Wallet not connected. Please connect your wallet.');\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const pools = await fetchPoolsFromContract();\r\n                const defaultTemplate = pools[0] || {\r\n          id: 'default',\r\n          template_id: 'PreviewTemplate',\r\n          creator: wallet.address,\r\n          parameters: { assets: ['XLM'], apy: 0.05, tvl: 100000, risk_factor: 'Low' },\r\n          default_rate: 5,\r\n          created_at: CURRENT_DATE.getTime() / 1000,\r\n          updated_at: CURRENT_DATE.getTime() / 1000,\r\n        };\r\n        setTemplate(defaultTemplate);\r\n      } catch (err) {\r\n        setError(err.message || 'Failed to fetch template');\r\n        toast.error(`Error fetching template: ${err.message || 'Unknown error'}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTemplate();\r\n  }, [wallet]);\r\n\r\n  const handleDeploy = async (formData: any) => {\r\n    if (!wallet?.address) {\r\n      toast.error('Wallet not connected. Please connect your wallet.');\r\n      router.push('/auth');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const account = await sorobanClient.getAccount(wallet.address);\r\n      const contract = new Contract(CONTRACT_ADDRESSES.BLEND_CONTRACT);\r\n      const txBuilder = new TransactionBuilder(account, {\r\n        fee: '100',\r\n        networkPassphrase: NETWORK.NETWORK_PASSPHRASE,\r\n      });\r\n\r\n            const deployOp = contract.call('deploy_template', \r\n        xdr.ScVal.scvString(formData.name),\r\n        xdr.ScVal.scvString(formData.description),\r\n        xdr.ScVal.scvString(formData.content),\r\n        ...formData.parameters.assets.map((asset: string) => xdr.ScVal.scvString(asset)),         xdr.ScVal.scvI128(xdr.Int128.fromString((formData.apy * 100).toString())),         xdr.ScVal.scvI128(xdr.Int128.fromString(formData.tvl.toString())),\r\n        xdr.ScVal.scvString(formData.riskFactor),\r\n        xdr.ScVal.scvI128(xdr.Int128.fromString(formData.default_rate.toString())),\r\n        xdr.ScVal.scvU64(xdr.Uint64.fromString(Math.floor(CURRENT_DATE.getTime() / 1000).toString()))       );\r\n\r\n      const tx = txBuilder.addOperation(deployOp).setTimeout(30).build();\r\n      const preparedTx = await sorobanClient.prepareTransaction(tx, CONTRACT_ADDRESSES.BLEND_CONTRACT);\r\n      const signedTx = await wallet.signTransaction(preparedTx.toXDR(), { network: 'TESTNET' });\r\n      const result = await sorobanClient.sendTransaction(signedTx);\r\n\r\n      if (result.status === 'SUCCESS') {\r\n        toast.success('Template deployed successfully!');\r\n        router.push('/');\r\n      } else {\r\n        throw new Error('Deployment failed');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to deploy template');\r\n      toast.error(`Deployment error: ${err.message || 'Unknown error'}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <div className=\"text-center text-gray-600\">Loading deploy details...</div>;\r\n  if (error) return <div className=\"text-red-500 text-center\">{error}</div>;\r\n  if (!template) return <div className=\"text-center text-gray-600\">Template not available for deployment</div>;\r\n\r\n  const photoUrl = `/api/image?template=${template.template_id}&type=${TEMPLATE_OPTIONS.imageTypes[0]}`;   const createdDate = new Date(template.created_at * 1000).toLocaleDateString();\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col\">\r\n      <Toaster position=\"top-right\" />\r\n      <main className=\"flex-grow\">\r\n        <div className=\"container mx-auto p-4\">\r\n          <h1 className=\"text-3xl font-bold mb-4 text-center\">Deploy Template</h1>\r\n          <div className=\"mb-6\">\r\n            <Image\r\n              src={photoUrl}\r\n              alt={`${template.template_id} photo`}\r\n              className=\"w-full h-64 object-cover rounded-lg mb-4\"\r\n              onError={(e) => (e.currentTarget.src = '/placeholder-image.jpg')}\r\n            />\r\n            <p className=\"text-sm text-gray-600\">Created: {createdDate}</p>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n            <div>\r\n              <p><strong>Assets:</strong> {template.parameters.assets.join(', ')}</p>\r\n              <p><strong>APY:</strong> {(template.parameters.apy / 100).toFixed(2)}%</p>\r\n              <p><strong>TVL:</strong> {template.parameters.tvl.toLocaleString()} XLM</p>\r\n              <p><strong>Risk Factor:</strong> {template.parameters.risk_factor}</p>\r\n              <p><strong>Default Rate:</strong> {template.default_rate}%</p>\r\n              <p><strong>Deployment Frequency:</strong> {template.deployment_frequency || 'N/A'} months</p>\r\n              <p><strong>Deposits:</strong> {template.deposits?.toLocaleString() || 'N/A'} XLM</p>\r\n              <p><strong>Borrows:</strong> {template.borrows?.toLocaleString() || 'N/A'} XLM</p>\r\n            </div>\r\n            <div>\r\n              <p><strong>Popularity:</strong> {TEMPLATE_OPTIONS.popularity[Math.floor(Math.random() * TEMPLATE_OPTIONS.popularity.length)]}</p>\r\n              <p><strong>Interest Period:</strong> {TEMPLATE_OPTIONS.interestPeriods[Math.floor(Math.random() * TEMPLATE_OPTIONS.interestPeriods.length)]}</p>\r\n              <p><strong>Return Duration:</strong> {TEMPLATE_OPTIONS.returnDurations[Math.floor(Math.random() * TEMPLATE_OPTIONS.returnDurations.length)]}</p>\r\n              <p><strong>Max Position:</strong> {TEMPLATE_OPTIONS.maxPositions[Math.floor(Math.random() * TEMPLATE_OPTIONS.maxPositions.length)]}</p>\r\n              <p><strong>Oracle Provider:</strong> {TEMPLATE_OPTIONS.oracleProviders[Math.floor(Math.random() * TEMPLATE_OPTIONS.oracleProviders.length)]}</p>\r\n              <p><strong>Backstop Module:</strong> {TEMPLATE_OPTIONS.backstopModules[Math.floor(Math.random() * TEMPLATE_OPTIONS.backstopModules.length)]}</p>\r\n              <p><strong>Collateralization Ratio:</strong> {TEMPLATE_OPTIONS.collateralizationRatios[Math.floor(Math.random() * TEMPLATE_OPTIONS.collateralizationRatios.length)]}:1</p>\r\n              <p><strong>Liquidation Threshold:</strong> {(TEMPLATE_OPTIONS.liquidationThresholds[Math.floor(Math.random() * TEMPLATE_OPTIONS.liquidationThresholds.length)] * 100).toFixed(0)}%</p>\r\n              <p><strong>Anchor Integration:</strong> {TEMPLATE_OPTIONS.anchorIntegrations[Math.floor(Math.random() * TEMPLATE_OPTIONS.anchorIntegrations.length)]}</p>\r\n              <p><strong>Pool Type:</strong> {TEMPLATE_OPTIONS.poolTypes[Math.floor(Math.random() * TEMPLATE_OPTIONS.poolTypes.length)]}</p>\r\n              <p><strong>Access Control:</strong> {TEMPLATE_OPTIONS.accessControls[Math.floor(Math.random() * TEMPLATE_OPTIONS.accessControls.length)]}</p>\r\n              <p><strong>Fee Structure:</strong> {(TEMPLATE_OPTIONS.feeStructures[Math.floor(Math.random() * TEMPLATE_OPTIONS.feeStructures.length)] * 100).toFixed(2)}%</p>\r\n              <p><strong>Looping Strategy:</strong> {TEMPLATE_OPTIONS.loopingStrategies[Math.floor(Math.random() * TEMPLATE_OPTIONS.loopingStrategies.length)]}</p>\r\n              <p><strong>Geographic Focus:</strong> {TEMPLATE_OPTIONS.geographicFocuses[Math.floor(Math.random() * TEMPLATE_OPTIONS.geographicFocuses.length)]}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <CommunityReview template={template} />\r\n\r\n          <TemplateForm\r\n            initialValues={{\r\n              name: template.template_id,\r\n              description: 'Deploy a new lending pool template.',\r\n              content: 'Custom template content.',\r\n              imageType: TEMPLATE_OPTIONS.imageTypes[0],\r\n              asset: template.parameters.assets[0],\r\n              popularity: TEMPLATE_OPTIONS.popularity[0],\r\n              apy: template.parameters.apy / 100,\r\n              tvl: template.parameters.tvl,\r\n              riskFactor: template.parameters.risk_factor,\r\n              deploymentFrequency: TEMPLATE_OPTIONS.deploymentFrequencies[0],\r\n              interestPeriod: TEMPLATE_OPTIONS.interestPeriods[0],\r\n              returnDuration: TEMPLATE_OPTIONS.returnDurations[0],\r\n              deposit: template.deposits || TEMPLATE_OPTIONS.deposits[0],\r\n              borrow: template.borrows || TEMPLATE_OPTIONS.borrows[0],\r\n              maxPosition: TEMPLATE_OPTIONS.maxPositions[0],\r\n              oracleProvider: TEMPLATE_OPTIONS.oracleProviders[0],\r\n              backstopModule: TEMPLATE_OPTIONS.backstopModules[0],\r\n              collateralizationRatio: TEMPLATE_OPTIONS.collateralizationRatios[0],\r\n              liquidationThreshold: TEMPLATE_OPTIONS.liquidationThresholds[0],\r\n              anchorIntegration: TEMPLATE_OPTIONS.anchorIntegrations[0],\r\n              poolType: TEMPLATE_OPTIONS.poolTypes[0],\r\n              accessControl: TEMPLATE_OPTIONS.accessControls[0],\r\n              feeStructure: TEMPLATE_OPTIONS.feeStructures[0],\r\n              loopingStrategy: TEMPLATE_OPTIONS.loopingStrategies[0],\r\n              geographicFocus: TEMPLATE_OPTIONS.geographicFocuses[0],\r\n            }}\r\n            onSubmit={handleDeploy}\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}