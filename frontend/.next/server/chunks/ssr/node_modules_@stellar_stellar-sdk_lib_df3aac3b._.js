module.exports = {

"[project]/node_modules/@stellar/stellar-sdk/lib/errors/network.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NetworkError = void 0;
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _wrapNativeSuper(t) {
    var r = "function" == typeof Map ? new Map() : void 0;
    return _wrapNativeSuper = function _wrapNativeSuper(t) {
        if (null === t || !_isNativeFunction(t)) return t;
        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r) {
            if (r.has(t)) return r.get(t);
            r.set(t, Wrapper);
        }
        function Wrapper() {
            return _construct(t, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), _setPrototypeOf(Wrapper, t);
    }, _wrapNativeSuper(t);
}
function _construct(t, e, r) {
    if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
    var o = [
        null
    ];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o))();
    return r && _setPrototypeOf(p, r.prototype), p;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _isNativeFunction(t) {
    try {
        return -1 !== Function.toString.call(t).indexOf("[native code]");
    } catch (n) {
        return "function" == typeof t;
    }
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
var NetworkError = exports.NetworkError = function(_Error) {
    function NetworkError(message, response) {
        var _this;
        _classCallCheck(this, NetworkError);
        var trueProto = (this instanceof NetworkError ? this.constructor : void 0).prototype;
        _this = _callSuper(this, NetworkError, [
            message
        ]);
        _this.__proto__ = trueProto;
        _this.constructor = NetworkError;
        _this.response = response;
        return _this;
    }
    _inherits(NetworkError, _Error);
    return _createClass(NetworkError, [
        {
            key: "getResponse",
            value: function getResponse() {
                return this.response;
            }
        }
    ]);
}(_wrapNativeSuper(Error));
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/errors/not_found.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NotFoundError = void 0;
var _network = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/network.js [app-ssr] (ecmascript)");
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var NotFoundError = exports.NotFoundError = function(_NetworkError) {
    function NotFoundError(message, response) {
        var _this;
        _classCallCheck(this, NotFoundError);
        var trueProto = (this instanceof NotFoundError ? this.constructor : void 0).prototype;
        _this = _callSuper(this, NotFoundError, [
            message,
            response
        ]);
        _this.__proto__ = trueProto;
        _this.constructor = NotFoundError;
        _this.name = "NotFoundError";
        return _this;
    }
    _inherits(NotFoundError, _NetworkError);
    return _createClass(NotFoundError);
}(_network.NetworkError);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/errors/bad_request.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BadRequestError = void 0;
var _network = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/network.js [app-ssr] (ecmascript)");
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var BadRequestError = exports.BadRequestError = function(_NetworkError) {
    function BadRequestError(message, response) {
        var _this;
        _classCallCheck(this, BadRequestError);
        var trueProto = (this instanceof BadRequestError ? this.constructor : void 0).prototype;
        _this = _callSuper(this, BadRequestError, [
            message,
            response
        ]);
        _this.__proto__ = trueProto;
        _this.constructor = BadRequestError;
        _this.name = "BadRequestError";
        return _this;
    }
    _inherits(BadRequestError, _NetworkError);
    return _createClass(BadRequestError);
}(_network.NetworkError);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/errors/bad_response.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BadResponseError = void 0;
var _network = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/network.js [app-ssr] (ecmascript)");
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var BadResponseError = exports.BadResponseError = function(_NetworkError) {
    function BadResponseError(message, response) {
        var _this;
        _classCallCheck(this, BadResponseError);
        var trueProto = (this instanceof BadResponseError ? this.constructor : void 0).prototype;
        _this = _callSuper(this, BadResponseError, [
            message,
            response
        ]);
        _this.__proto__ = trueProto;
        _this.constructor = BadResponseError;
        _this.name = "BadResponseError";
        return _this;
    }
    _inherits(BadResponseError, _NetworkError);
    return _createClass(BadResponseError);
}(_network.NetworkError);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/errors/account_requires_memo.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AccountRequiresMemoError = void 0;
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _wrapNativeSuper(t) {
    var r = "function" == typeof Map ? new Map() : void 0;
    return _wrapNativeSuper = function _wrapNativeSuper(t) {
        if (null === t || !_isNativeFunction(t)) return t;
        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r) {
            if (r.has(t)) return r.get(t);
            r.set(t, Wrapper);
        }
        function Wrapper() {
            return _construct(t, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), _setPrototypeOf(Wrapper, t);
    }, _wrapNativeSuper(t);
}
function _construct(t, e, r) {
    if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
    var o = [
        null
    ];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o))();
    return r && _setPrototypeOf(p, r.prototype), p;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _isNativeFunction(t) {
    try {
        return -1 !== Function.toString.call(t).indexOf("[native code]");
    } catch (n) {
        return "function" == typeof t;
    }
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
var AccountRequiresMemoError = exports.AccountRequiresMemoError = function(_Error) {
    function AccountRequiresMemoError(message, accountId, operationIndex) {
        var _this;
        _classCallCheck(this, AccountRequiresMemoError);
        var trueProto = (this instanceof AccountRequiresMemoError ? this.constructor : void 0).prototype;
        _this = _callSuper(this, AccountRequiresMemoError, [
            message
        ]);
        _this.__proto__ = trueProto;
        _this.constructor = AccountRequiresMemoError;
        _this.name = "AccountRequiresMemoError";
        _this.accountId = accountId;
        _this.operationIndex = operationIndex;
        return _this;
    }
    _inherits(AccountRequiresMemoError, _Error);
    return _createClass(AccountRequiresMemoError);
}(_wrapNativeSuper(Error));
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/errors/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _network = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/network.js [app-ssr] (ecmascript)");
Object.keys(_network).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _network[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _network[key];
        }
    });
});
var _not_found = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/not_found.js [app-ssr] (ecmascript)");
Object.keys(_not_found).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _not_found[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _not_found[key];
        }
    });
});
var _bad_request = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/bad_request.js [app-ssr] (ecmascript)");
Object.keys(_bad_request).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _bad_request[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _bad_request[key];
        }
    });
});
var _bad_response = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/bad_response.js [app-ssr] (ecmascript)");
Object.keys(_bad_response).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _bad_response[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _bad_response[key];
        }
    });
});
var _account_requires_memo = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/account_requires_memo.js [app-ssr] (ecmascript)");
Object.keys(_account_requires_memo).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _account_requires_memo[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _account_requires_memo[key];
        }
    });
});
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/config.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Config = void 0;
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var defaultConfig = {
    allowHttp: false,
    timeout: 0
};
var config = _objectSpread({}, defaultConfig);
var Config = exports.Config = function() {
    function Config() {
        _classCallCheck(this, Config);
    }
    return _createClass(Config, null, [
        {
            key: "setAllowHttp",
            value: function setAllowHttp(value) {
                config.allowHttp = value;
            }
        },
        {
            key: "setTimeout",
            value: function setTimeout(value) {
                config.timeout = value;
            }
        },
        {
            key: "isAllowHttp",
            value: function isAllowHttp() {
                return config.allowHttp;
            }
        },
        {
            key: "getTimeout",
            value: function getTimeout() {
                return config.timeout;
            }
        },
        {
            key: "setDefault",
            value: function setDefault() {
                config = _objectSpread({}, defaultConfig);
            }
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/utils.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Utils = void 0;
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var Utils = exports.Utils = function() {
    function Utils() {
        _classCallCheck(this, Utils);
    }
    return _createClass(Utils, null, [
        {
            key: "validateTimebounds",
            value: function validateTimebounds(transaction) {
                var gracePeriod = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                if (!transaction.timeBounds) {
                    return false;
                }
                var now = Math.floor(Date.now() / 1000);
                var _transaction$timeBoun = transaction.timeBounds, minTime = _transaction$timeBoun.minTime, maxTime = _transaction$timeBoun.maxTime;
                return now >= Number.parseInt(minTime, 10) - gracePeriod && now <= Number.parseInt(maxTime, 10) + gracePeriod;
            }
        },
        {
            key: "sleep",
            value: function sleep(ms) {
                return new Promise(function(resolve) {
                    return setTimeout(resolve, ms);
                });
            }
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/http-client/types.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CancelToken = void 0;
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var CancelToken = exports.CancelToken = function() {
    function CancelToken(executor) {
        var _this = this;
        _classCallCheck(this, CancelToken);
        var resolvePromise;
        this.promise = new Promise(function(resolve) {
            resolvePromise = resolve;
        });
        executor(function(reason) {
            _this.reason = reason;
            resolvePromise();
        });
    }
    return _createClass(CancelToken, [
        {
            key: "throwIfRequested",
            value: function throwIfRequested() {
                if (this.reason) {
                    throw new Error(this.reason);
                }
            }
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/http-client/axios-client.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.create = exports.axiosClient = void 0;
var _axios = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/axios/dist/node/axios.cjs [app-ssr] (ecmascript)"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var axiosClient = exports.axiosClient = _axios.default;
var create = exports.create = _axios.default.create;
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/http-client/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    httpClient: true,
    create: true
};
exports.httpClient = exports.create = void 0;
var _types = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/http-client/types.js [app-ssr] (ecmascript)");
Object.keys(_types).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _types[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _types[key];
        }
    });
});
var httpClient;
var create;
if ("TURBOPACK compile-time truthy", 1) {
    var axiosModule = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/http-client/axios-client.js [app-ssr] (ecmascript)");
    exports.httpClient = httpClient = axiosModule.axiosClient;
    exports.create = create = axiosModule.create;
} else {
    "TURBOPACK unreachable";
    var fetchModule;
}
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/stellartoml/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.STELLAR_TOML_MAX_SIZE = exports.Resolver = exports.Api = void 0;
var _toml = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/toml/index.js [app-ssr] (ecmascript)"));
var _httpClient = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/http-client/index.js [app-ssr] (ecmascript)");
var _config = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/config.js [app-ssr] (ecmascript)");
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var STELLAR_TOML_MAX_SIZE = exports.STELLAR_TOML_MAX_SIZE = 100 * 1024;
var CancelToken = _httpClient.httpClient.CancelToken;
var Resolver = exports.Resolver = function() {
    function Resolver() {
        _classCallCheck(this, Resolver);
    }
    return _createClass(Resolver, null, [
        {
            key: "resolve",
            value: function() {
                var _resolve = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(domain) {
                    var _opts$allowedRedirect;
                    var opts, allowHttp, timeout, protocol, _args = arguments;
                    return _regeneratorRuntime().wrap(function _callee$(_context) {
                        while(1)switch(_context.prev = _context.next){
                            case 0:
                                opts = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
                                allowHttp = typeof opts.allowHttp === "undefined" ? _config.Config.isAllowHttp() : opts.allowHttp;
                                timeout = typeof opts.timeout === "undefined" ? _config.Config.getTimeout() : opts.timeout;
                                protocol = allowHttp ? "http" : "https";
                                return _context.abrupt("return", _httpClient.httpClient.get("".concat(protocol, "://").concat(domain, "/.well-known/stellar.toml"), {
                                    maxRedirects: (_opts$allowedRedirect = opts.allowedRedirects) !== null && _opts$allowedRedirect !== void 0 ? _opts$allowedRedirect : 0,
                                    maxContentLength: STELLAR_TOML_MAX_SIZE,
                                    cancelToken: timeout ? new CancelToken(function(cancel) {
                                        return setTimeout(function() {
                                            return cancel("timeout of ".concat(timeout, "ms exceeded"));
                                        }, timeout);
                                    }) : undefined,
                                    timeout: timeout
                                }).then(function(response) {
                                    try {
                                        var tomlObject = _toml.default.parse(response.data);
                                        return Promise.resolve(tomlObject);
                                    } catch (e) {
                                        return Promise.reject(new Error("stellar.toml is invalid - Parsing error on line ".concat(e.line, ", column ").concat(e.column, ": ").concat(e.message)));
                                    }
                                }).catch(function(err) {
                                    if (err.message.match(/^maxContentLength size/)) {
                                        throw new Error("stellar.toml file exceeds allowed size of ".concat(STELLAR_TOML_MAX_SIZE));
                                    } else {
                                        throw err;
                                    }
                                }));
                            case 5:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee);
                }));
                function resolve(_x) {
                    return _resolve.apply(this, arguments);
                }
                return resolve;
            }()
        }
    ]);
}();
var Api;
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/federation/server.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FederationServer = exports.FEDERATION_RESPONSE_MAX_SIZE = void 0;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _urijs = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/urijs/src/URI.js [app-ssr] (ecmascript)"));
var _config = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/config.js [app-ssr] (ecmascript)");
var _errors = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/index.js [app-ssr] (ecmascript)");
var _stellartoml = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/stellartoml/index.js [app-ssr] (ecmascript)");
var _httpClient = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/http-client/index.js [app-ssr] (ecmascript)");
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _slicedToArray(r, e) {
    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var FEDERATION_RESPONSE_MAX_SIZE = exports.FEDERATION_RESPONSE_MAX_SIZE = 100 * 1024;
var FederationServer = exports.FederationServer = function() {
    function FederationServer(serverURL, domain) {
        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        _classCallCheck(this, FederationServer);
        this.serverURL = (0, _urijs.default)(serverURL);
        this.domain = domain;
        var allowHttp = typeof opts.allowHttp === "undefined" ? _config.Config.isAllowHttp() : opts.allowHttp;
        this.timeout = typeof opts.timeout === "undefined" ? _config.Config.getTimeout() : opts.timeout;
        if (this.serverURL.protocol() !== "https" && !allowHttp) {
            throw new Error("Cannot connect to insecure federation server");
        }
    }
    return _createClass(FederationServer, [
        {
            key: "resolveAddress",
            value: function() {
                var _resolveAddress = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(address) {
                    var stellarAddress, url;
                    return _regeneratorRuntime().wrap(function _callee$(_context) {
                        while(1)switch(_context.prev = _context.next){
                            case 0:
                                stellarAddress = address;
                                if (!(address.indexOf("*") < 0)) {
                                    _context.next = 5;
                                    break;
                                }
                                if (this.domain) {
                                    _context.next = 4;
                                    break;
                                }
                                return _context.abrupt("return", Promise.reject(new Error("Unknown domain. Make sure `address` contains a domain (ex. `bob*stellar.org`) or pass `domain` parameter when instantiating the server object.")));
                            case 4:
                                stellarAddress = "".concat(address, "*").concat(this.domain);
                            case 5:
                                url = this.serverURL.query({
                                    type: "name",
                                    q: stellarAddress
                                });
                                return _context.abrupt("return", this._sendRequest(url));
                            case 7:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee, this);
                }));
                function resolveAddress(_x) {
                    return _resolveAddress.apply(this, arguments);
                }
                return resolveAddress;
            }()
        },
        {
            key: "resolveAccountId",
            value: function() {
                var _resolveAccountId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(accountId) {
                    var url;
                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                        while(1)switch(_context2.prev = _context2.next){
                            case 0:
                                url = this.serverURL.query({
                                    type: "id",
                                    q: accountId
                                });
                                return _context2.abrupt("return", this._sendRequest(url));
                            case 2:
                            case "end":
                                return _context2.stop();
                        }
                    }, _callee2, this);
                }));
                function resolveAccountId(_x2) {
                    return _resolveAccountId.apply(this, arguments);
                }
                return resolveAccountId;
            }()
        },
        {
            key: "resolveTransactionId",
            value: function() {
                var _resolveTransactionId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(transactionId) {
                    var url;
                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                        while(1)switch(_context3.prev = _context3.next){
                            case 0:
                                url = this.serverURL.query({
                                    type: "txid",
                                    q: transactionId
                                });
                                return _context3.abrupt("return", this._sendRequest(url));
                            case 2:
                            case "end":
                                return _context3.stop();
                        }
                    }, _callee3, this);
                }));
                function resolveTransactionId(_x3) {
                    return _resolveTransactionId.apply(this, arguments);
                }
                return resolveTransactionId;
            }()
        },
        {
            key: "_sendRequest",
            value: function() {
                var _sendRequest2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(url) {
                    var timeout;
                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                        while(1)switch(_context4.prev = _context4.next){
                            case 0:
                                timeout = this.timeout;
                                return _context4.abrupt("return", _httpClient.httpClient.get(url.toString(), {
                                    maxContentLength: FEDERATION_RESPONSE_MAX_SIZE,
                                    timeout: timeout
                                }).then(function(response) {
                                    if (typeof response.data.memo !== "undefined" && typeof response.data.memo !== "string") {
                                        throw new Error("memo value should be of type string");
                                    }
                                    return response.data;
                                }).catch(function(response) {
                                    if (response instanceof Error) {
                                        if (response.message.match(/^maxContentLength size/)) {
                                            throw new Error("federation response exceeds allowed size of ".concat(FEDERATION_RESPONSE_MAX_SIZE));
                                        } else {
                                            return Promise.reject(response);
                                        }
                                    } else {
                                        return Promise.reject(new _errors.BadResponseError("Server query failed. Server responded: ".concat(response.status, " ").concat(response.statusText), response.data));
                                    }
                                }));
                            case 2:
                            case "end":
                                return _context4.stop();
                        }
                    }, _callee4, this);
                }));
                function _sendRequest(_x4) {
                    return _sendRequest2.apply(this, arguments);
                }
                return _sendRequest;
            }()
        }
    ], [
        {
            key: "resolve",
            value: function() {
                var _resolve = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(value) {
                    var opts, addressParts, _addressParts, domain, federationServer, _args5 = arguments;
                    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                        while(1)switch(_context5.prev = _context5.next){
                            case 0:
                                opts = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};
                                if (!(value.indexOf("*") < 0)) {
                                    _context5.next = 5;
                                    break;
                                }
                                if (_stellarBase.StrKey.isValidEd25519PublicKey(value)) {
                                    _context5.next = 4;
                                    break;
                                }
                                return _context5.abrupt("return", Promise.reject(new Error("Invalid Account ID")));
                            case 4:
                                return _context5.abrupt("return", Promise.resolve({
                                    account_id: value
                                }));
                            case 5:
                                addressParts = value.split("*");
                                _addressParts = _slicedToArray(addressParts, 2), domain = _addressParts[1];
                                if (!(addressParts.length !== 2 || !domain)) {
                                    _context5.next = 9;
                                    break;
                                }
                                return _context5.abrupt("return", Promise.reject(new Error("Invalid Stellar address")));
                            case 9:
                                _context5.next = 11;
                                return FederationServer.createForDomain(domain, opts);
                            case 11:
                                federationServer = _context5.sent;
                                return _context5.abrupt("return", federationServer.resolveAddress(value));
                            case 13:
                            case "end":
                                return _context5.stop();
                        }
                    }, _callee5);
                }));
                function resolve(_x5) {
                    return _resolve.apply(this, arguments);
                }
                return resolve;
            }()
        },
        {
            key: "createForDomain",
            value: function() {
                var _createForDomain = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(domain) {
                    var opts, tomlObject, _args6 = arguments;
                    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                        while(1)switch(_context6.prev = _context6.next){
                            case 0:
                                opts = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};
                                _context6.next = 3;
                                return _stellartoml.Resolver.resolve(domain, opts);
                            case 3:
                                tomlObject = _context6.sent;
                                if (tomlObject.FEDERATION_SERVER) {
                                    _context6.next = 6;
                                    break;
                                }
                                return _context6.abrupt("return", Promise.reject(new Error("stellar.toml does not contain FEDERATION_SERVER field")));
                            case 6:
                                return _context6.abrupt("return", new FederationServer(tomlObject.FEDERATION_SERVER, domain, opts));
                            case 7:
                            case "end":
                                return _context6.stop();
                        }
                    }, _callee6);
                }));
                function createForDomain(_x6) {
                    return _createForDomain.apply(this, arguments);
                }
                return createForDomain;
            }()
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/federation/api.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Api = void 0;
var Api;
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/federation/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    Server: true,
    FEDERATION_RESPONSE_MAX_SIZE: true
};
Object.defineProperty(exports, "FEDERATION_RESPONSE_MAX_SIZE", {
    enumerable: true,
    get: function get() {
        return _server.FEDERATION_RESPONSE_MAX_SIZE;
    }
});
Object.defineProperty(exports, "Server", {
    enumerable: true,
    get: function get() {
        return _server.FederationServer;
    }
});
var _server = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/federation/server.js [app-ssr] (ecmascript)");
var _api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/federation/api.js [app-ssr] (ecmascript)");
Object.keys(_api).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _api[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _api[key];
        }
    });
});
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/webauth/errors.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InvalidChallengeError = void 0;
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _wrapNativeSuper(t) {
    var r = "function" == typeof Map ? new Map() : void 0;
    return _wrapNativeSuper = function _wrapNativeSuper(t) {
        if (null === t || !_isNativeFunction(t)) return t;
        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r) {
            if (r.has(t)) return r.get(t);
            r.set(t, Wrapper);
        }
        function Wrapper() {
            return _construct(t, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), _setPrototypeOf(Wrapper, t);
    }, _wrapNativeSuper(t);
}
function _construct(t, e, r) {
    if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
    var o = [
        null
    ];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o))();
    return r && _setPrototypeOf(p, r.prototype), p;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _isNativeFunction(t) {
    try {
        return -1 !== Function.toString.call(t).indexOf("[native code]");
    } catch (n) {
        return "function" == typeof t;
    }
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
var InvalidChallengeError = exports.InvalidChallengeError = function(_Error) {
    function InvalidChallengeError(message) {
        var _this;
        _classCallCheck(this, InvalidChallengeError);
        var trueProto = (this instanceof InvalidChallengeError ? this.constructor : void 0).prototype;
        _this = _callSuper(this, InvalidChallengeError, [
            message
        ]);
        _this.__proto__ = trueProto;
        _this.constructor = InvalidChallengeError;
        _this.name = "InvalidChallengeError";
        return _this;
    }
    _inherits(InvalidChallengeError, _Error);
    return _createClass(InvalidChallengeError);
}(_wrapNativeSuper(Error));
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/webauth/utils.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.buildChallengeTx = buildChallengeTx;
exports.gatherTxSigners = gatherTxSigners;
exports.readChallengeTx = readChallengeTx;
exports.verifyChallengeTxSigners = verifyChallengeTxSigners;
exports.verifyChallengeTxThreshold = verifyChallengeTxThreshold;
exports.verifyTxSignedBy = verifyTxSignedBy;
var _randombytes = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/randombytes/index.js [app-ssr] (ecmascript)"));
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _utils = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/utils.js [app-ssr] (ecmascript)");
var _errors = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/webauth/errors.js [app-ssr] (ecmascript)");
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function _toConsumableArray(r) {
    return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _arrayWithoutHoles(r) {
    if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function _createForOfIteratorHelper(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
            t && (r = t);
            var _n = 0, F = function F() {};
            return {
                s: F,
                n: function n() {
                    return _n >= r.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: r[_n++]
                    };
                },
                e: function e(r) {
                    throw r;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = !0, u = !1;
    return {
        s: function s() {
            t = t.call(r);
        },
        n: function n() {
            var r = t.next();
            return a = r.done, r;
        },
        e: function e(r) {
            u = !0, o = r;
        },
        f: function f() {
            try {
                a || null == t.return || t.return();
            } finally{
                if (u) throw o;
            }
        }
    };
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _toArray(r) {
    return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function _iterableToArray(r) {
    if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
function buildChallengeTx(serverKeypair, clientAccountID, homeDomain) {
    var timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 300;
    var networkPassphrase = arguments.length > 4 ? arguments[4] : undefined;
    var webAuthDomain = arguments.length > 5 ? arguments[5] : undefined;
    var memo = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;
    var clientDomain = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;
    var clientSigningKey = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;
    if (clientAccountID.startsWith("M") && memo) {
        throw Error("memo cannot be used if clientAccountID is a muxed account");
    }
    var account = new _stellarBase.Account(serverKeypair.publicKey(), "-1");
    var now = Math.floor(Date.now() / 1000);
    var value = (0, _randombytes.default)(48).toString("base64");
    var builder = new _stellarBase.TransactionBuilder(account, {
        fee: _stellarBase.BASE_FEE,
        networkPassphrase: networkPassphrase,
        timebounds: {
            minTime: now,
            maxTime: now + timeout
        }
    }).addOperation(_stellarBase.Operation.manageData({
        name: "".concat(homeDomain, " auth"),
        value: value,
        source: clientAccountID
    })).addOperation(_stellarBase.Operation.manageData({
        name: "web_auth_domain",
        value: webAuthDomain,
        source: account.accountId()
    }));
    if (clientDomain) {
        if (!clientSigningKey) {
            throw Error("clientSigningKey is required if clientDomain is provided");
        }
        builder.addOperation(_stellarBase.Operation.manageData({
            name: "client_domain",
            value: clientDomain,
            source: clientSigningKey
        }));
    }
    if (memo) {
        builder.addMemo(_stellarBase.Memo.id(memo));
    }
    var transaction = builder.build();
    transaction.sign(serverKeypair);
    return transaction.toEnvelope().toXDR("base64").toString();
}
function readChallengeTx(challengeTx, serverAccountID, networkPassphrase, homeDomains, webAuthDomain) {
    var _transaction$timeBoun;
    if (serverAccountID.startsWith("M")) {
        throw Error("Invalid serverAccountID: multiplexed accounts are not supported.");
    }
    var transaction;
    try {
        transaction = new _stellarBase.Transaction(challengeTx, networkPassphrase);
    } catch (_unused) {
        try {
            transaction = new _stellarBase.FeeBumpTransaction(challengeTx, networkPassphrase);
        } catch (_unused2) {
            throw new _errors.InvalidChallengeError("Invalid challenge: unable to deserialize challengeTx transaction string");
        }
        throw new _errors.InvalidChallengeError("Invalid challenge: expected a Transaction but received a FeeBumpTransaction");
    }
    var sequence = Number.parseInt(transaction.sequence, 10);
    if (sequence !== 0) {
        throw new _errors.InvalidChallengeError("The transaction sequence number should be zero");
    }
    if (transaction.source !== serverAccountID) {
        throw new _errors.InvalidChallengeError("The transaction source account is not equal to the server's account");
    }
    if (transaction.operations.length < 1) {
        throw new _errors.InvalidChallengeError("The transaction should contain at least one operation");
    }
    var _transaction$operatio = _toArray(transaction.operations), operation = _transaction$operatio[0], subsequentOperations = _transaction$operatio.slice(1);
    if (!operation.source) {
        throw new _errors.InvalidChallengeError("The transaction's operation should contain a source account");
    }
    var clientAccountID = operation.source;
    var memo = null;
    if (transaction.memo.type !== _stellarBase.MemoNone) {
        if (clientAccountID.startsWith("M")) {
            throw new _errors.InvalidChallengeError("The transaction has a memo but the client account ID is a muxed account");
        }
        if (transaction.memo.type !== _stellarBase.MemoID) {
            throw new _errors.InvalidChallengeError("The transaction's memo must be of type `id`");
        }
        memo = transaction.memo.value;
    }
    if (operation.type !== "manageData") {
        throw new _errors.InvalidChallengeError("The transaction's operation type should be 'manageData'");
    }
    if (transaction.timeBounds && Number.parseInt((_transaction$timeBoun = transaction.timeBounds) === null || _transaction$timeBoun === void 0 ? void 0 : _transaction$timeBoun.maxTime, 10) === _stellarBase.TimeoutInfinite) {
        throw new _errors.InvalidChallengeError("The transaction requires non-infinite timebounds");
    }
    if (!_utils.Utils.validateTimebounds(transaction, 60 * 5)) {
        throw new _errors.InvalidChallengeError("The transaction has expired");
    }
    if (operation.value === undefined) {
        throw new _errors.InvalidChallengeError("The transaction's operation values should not be null");
    }
    if (!operation.value) {
        throw new _errors.InvalidChallengeError("The transaction's operation value should not be null");
    }
    if (Buffer.from(operation.value.toString(), "base64").length !== 48) {
        throw new _errors.InvalidChallengeError("The transaction's operation value should be a 64 bytes base64 random string");
    }
    if (!homeDomains) {
        throw new _errors.InvalidChallengeError("Invalid homeDomains: a home domain must be provided for verification");
    }
    var matchedHomeDomain;
    if (typeof homeDomains === "string") {
        if ("".concat(homeDomains, " auth") === operation.name) {
            matchedHomeDomain = homeDomains;
        }
    } else if (Array.isArray(homeDomains)) {
        matchedHomeDomain = homeDomains.find(function(domain) {
            return "".concat(domain, " auth") === operation.name;
        });
    } else {
        throw new _errors.InvalidChallengeError("Invalid homeDomains: homeDomains type is ".concat(_typeof(homeDomains), " but should be a string or an array"));
    }
    if (!matchedHomeDomain) {
        throw new _errors.InvalidChallengeError("Invalid homeDomains: the transaction's operation key name does not match the expected home domain");
    }
    var _iterator = _createForOfIteratorHelper(subsequentOperations), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var op = _step.value;
            if (op.type !== "manageData") {
                throw new _errors.InvalidChallengeError("The transaction has operations that are not of type 'manageData'");
            }
            if (op.source !== serverAccountID && op.name !== "client_domain") {
                throw new _errors.InvalidChallengeError("The transaction has operations that are unrecognized");
            }
            if (op.name === "web_auth_domain") {
                if (op.value === undefined) {
                    throw new _errors.InvalidChallengeError("'web_auth_domain' operation value should not be null");
                }
                if (op.value.compare(Buffer.from(webAuthDomain))) {
                    throw new _errors.InvalidChallengeError("'web_auth_domain' operation value does not match ".concat(webAuthDomain));
                }
            }
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    if (!verifyTxSignedBy(transaction, serverAccountID)) {
        throw new _errors.InvalidChallengeError("Transaction not signed by server: '".concat(serverAccountID, "'"));
    }
    return {
        tx: transaction,
        clientAccountID: clientAccountID,
        matchedHomeDomain: matchedHomeDomain,
        memo: memo
    };
}
function verifyChallengeTxThreshold(challengeTx, serverAccountID, networkPassphrase, threshold, signerSummary, homeDomains, webAuthDomain) {
    var signers = signerSummary.map(function(signer) {
        return signer.key;
    });
    var signersFound = verifyChallengeTxSigners(challengeTx, serverAccountID, networkPassphrase, signers, homeDomains, webAuthDomain);
    var weight = 0;
    var _loop = function _loop() {
        var _signerSummary$find;
        var signer = _signersFound[_i];
        var sigWeight = ((_signerSummary$find = signerSummary.find(function(s) {
            return s.key === signer;
        })) === null || _signerSummary$find === void 0 ? void 0 : _signerSummary$find.weight) || 0;
        weight += sigWeight;
    };
    for(var _i = 0, _signersFound = signersFound; _i < _signersFound.length; _i++){
        _loop();
    }
    if (weight < threshold) {
        throw new _errors.InvalidChallengeError("signers with weight ".concat(weight, " do not meet threshold ").concat(threshold, "\""));
    }
    return signersFound;
}
function verifyChallengeTxSigners(challengeTx, serverAccountID, networkPassphrase, signers, homeDomains, webAuthDomain) {
    var _readChallengeTx = readChallengeTx(challengeTx, serverAccountID, networkPassphrase, homeDomains, webAuthDomain), tx = _readChallengeTx.tx;
    var serverKP;
    try {
        serverKP = _stellarBase.Keypair.fromPublicKey(serverAccountID);
    } catch (err) {
        throw new Error("Couldn't infer keypair from the provided 'serverAccountID': ".concat(err.message));
    }
    var clientSigners = new Set();
    var _iterator2 = _createForOfIteratorHelper(signers), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var _signer = _step2.value;
            if (_signer === serverKP.publicKey()) {
                continue;
            }
            if (_signer.charAt(0) !== "G") {
                continue;
            }
            clientSigners.add(_signer);
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    if (clientSigners.size === 0) {
        throw new _errors.InvalidChallengeError("No verifiable client signers provided, at least one G... address must be provided");
    }
    var clientSigningKey;
    var _iterator3 = _createForOfIteratorHelper(tx.operations), _step3;
    try {
        for(_iterator3.s(); !(_step3 = _iterator3.n()).done;){
            var op = _step3.value;
            if (op.type === "manageData" && op.name === "client_domain") {
                if (clientSigningKey) {
                    throw new _errors.InvalidChallengeError("Found more than one client_domain operation");
                }
                clientSigningKey = op.source;
            }
        }
    } catch (err) {
        _iterator3.e(err);
    } finally{
        _iterator3.f();
    }
    var allSigners = [
        serverKP.publicKey()
    ].concat(_toConsumableArray(Array.from(clientSigners)));
    if (clientSigningKey) {
        allSigners.push(clientSigningKey);
    }
    var signersFound = gatherTxSigners(tx, allSigners);
    var serverSignatureFound = false;
    var clientSigningKeySignatureFound = false;
    for(var _i2 = 0, _signersFound2 = signersFound; _i2 < _signersFound2.length; _i2++){
        var signer = _signersFound2[_i2];
        if (signer === serverKP.publicKey()) {
            serverSignatureFound = true;
        }
        if (signer === clientSigningKey) {
            clientSigningKeySignatureFound = true;
        }
    }
    if (!serverSignatureFound) {
        throw new _errors.InvalidChallengeError("Transaction not signed by server: '".concat(serverKP.publicKey(), "'"));
    }
    if (clientSigningKey && !clientSigningKeySignatureFound) {
        throw new _errors.InvalidChallengeError("Transaction not signed by the source account of the 'client_domain' " + "ManageData operation");
    }
    if (signersFound.length === 1) {
        throw new _errors.InvalidChallengeError("None of the given signers match the transaction signatures");
    }
    if (signersFound.length !== tx.signatures.length) {
        throw new _errors.InvalidChallengeError("Transaction has unrecognized signatures");
    }
    signersFound.splice(signersFound.indexOf(serverKP.publicKey()), 1);
    if (clientSigningKey) {
        signersFound.splice(signersFound.indexOf(clientSigningKey), 1);
    }
    return signersFound;
}
function verifyTxSignedBy(transaction, accountID) {
    return gatherTxSigners(transaction, [
        accountID
    ]).length !== 0;
}
function gatherTxSigners(transaction, signers) {
    var hashedSignatureBase = transaction.hash();
    var txSignatures = _toConsumableArray(transaction.signatures);
    var signersFound = new Set();
    var _iterator4 = _createForOfIteratorHelper(signers), _step4;
    try {
        for(_iterator4.s(); !(_step4 = _iterator4.n()).done;){
            var signer = _step4.value;
            if (txSignatures.length === 0) {
                break;
            }
            var keypair = void 0;
            try {
                keypair = _stellarBase.Keypair.fromPublicKey(signer);
            } catch (err) {
                throw new _errors.InvalidChallengeError("Signer is not a valid address: ".concat(err.message));
            }
            for(var i = 0; i < txSignatures.length; i++){
                var decSig = txSignatures[i];
                if (!decSig.hint().equals(keypair.signatureHint())) {
                    continue;
                }
                if (keypair.verify(hashedSignatureBase, decSig.signature())) {
                    signersFound.add(signer);
                    txSignatures.splice(i, 1);
                    break;
                }
            }
        }
    } catch (err) {
        _iterator4.e(err);
    } finally{
        _iterator4.f();
    }
    return Array.from(signersFound);
}
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/webauth/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    InvalidChallengeError: true
};
Object.defineProperty(exports, "InvalidChallengeError", {
    enumerable: true,
    get: function get() {
        return _errors.InvalidChallengeError;
    }
});
var _utils = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/webauth/utils.js [app-ssr] (ecmascript)");
Object.keys(_utils).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _utils[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _utils[key];
        }
    });
});
var _errors = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/webauth/errors.js [app-ssr] (ecmascript)");
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/friendbot/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Api = void 0;
var Api;
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/horizon_api.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HorizonApi = void 0;
var HorizonApi;
(function(_HorizonApi) {
    var LiquidityPoolType = function(LiquidityPoolType) {
        LiquidityPoolType["constantProduct"] = "constant_product";
        return LiquidityPoolType;
    }({});
    _HorizonApi.LiquidityPoolType = LiquidityPoolType;
    var OperationResponseType = function(OperationResponseType) {
        OperationResponseType["createAccount"] = "create_account";
        OperationResponseType["payment"] = "payment";
        OperationResponseType["pathPayment"] = "path_payment_strict_receive";
        OperationResponseType["createPassiveOffer"] = "create_passive_sell_offer";
        OperationResponseType["manageOffer"] = "manage_sell_offer";
        OperationResponseType["setOptions"] = "set_options";
        OperationResponseType["changeTrust"] = "change_trust";
        OperationResponseType["allowTrust"] = "allow_trust";
        OperationResponseType["accountMerge"] = "account_merge";
        OperationResponseType["inflation"] = "inflation";
        OperationResponseType["manageData"] = "manage_data";
        OperationResponseType["bumpSequence"] = "bump_sequence";
        OperationResponseType["manageBuyOffer"] = "manage_buy_offer";
        OperationResponseType["pathPaymentStrictSend"] = "path_payment_strict_send";
        OperationResponseType["createClaimableBalance"] = "create_claimable_balance";
        OperationResponseType["claimClaimableBalance"] = "claim_claimable_balance";
        OperationResponseType["beginSponsoringFutureReserves"] = "begin_sponsoring_future_reserves";
        OperationResponseType["endSponsoringFutureReserves"] = "end_sponsoring_future_reserves";
        OperationResponseType["revokeSponsorship"] = "revoke_sponsorship";
        OperationResponseType["clawback"] = "clawback";
        OperationResponseType["clawbackClaimableBalance"] = "clawback_claimable_balance";
        OperationResponseType["setTrustLineFlags"] = "set_trust_line_flags";
        OperationResponseType["liquidityPoolDeposit"] = "liquidity_pool_deposit";
        OperationResponseType["liquidityPoolWithdraw"] = "liquidity_pool_withdraw";
        OperationResponseType["invokeHostFunction"] = "invoke_host_function";
        OperationResponseType["bumpFootprintExpiration"] = "bump_footprint_expiration";
        OperationResponseType["restoreFootprint"] = "restore_footprint";
        return OperationResponseType;
    }({});
    _HorizonApi.OperationResponseType = OperationResponseType;
    var OperationResponseTypeI = function(OperationResponseTypeI) {
        OperationResponseTypeI[OperationResponseTypeI["createAccount"] = 0] = "createAccount";
        OperationResponseTypeI[OperationResponseTypeI["payment"] = 1] = "payment";
        OperationResponseTypeI[OperationResponseTypeI["pathPayment"] = 2] = "pathPayment";
        OperationResponseTypeI[OperationResponseTypeI["createPassiveOffer"] = 3] = "createPassiveOffer";
        OperationResponseTypeI[OperationResponseTypeI["manageOffer"] = 4] = "manageOffer";
        OperationResponseTypeI[OperationResponseTypeI["setOptions"] = 5] = "setOptions";
        OperationResponseTypeI[OperationResponseTypeI["changeTrust"] = 6] = "changeTrust";
        OperationResponseTypeI[OperationResponseTypeI["allowTrust"] = 7] = "allowTrust";
        OperationResponseTypeI[OperationResponseTypeI["accountMerge"] = 8] = "accountMerge";
        OperationResponseTypeI[OperationResponseTypeI["inflation"] = 9] = "inflation";
        OperationResponseTypeI[OperationResponseTypeI["manageData"] = 10] = "manageData";
        OperationResponseTypeI[OperationResponseTypeI["bumpSequence"] = 11] = "bumpSequence";
        OperationResponseTypeI[OperationResponseTypeI["manageBuyOffer"] = 12] = "manageBuyOffer";
        OperationResponseTypeI[OperationResponseTypeI["pathPaymentStrictSend"] = 13] = "pathPaymentStrictSend";
        OperationResponseTypeI[OperationResponseTypeI["createClaimableBalance"] = 14] = "createClaimableBalance";
        OperationResponseTypeI[OperationResponseTypeI["claimClaimableBalance"] = 15] = "claimClaimableBalance";
        OperationResponseTypeI[OperationResponseTypeI["beginSponsoringFutureReserves"] = 16] = "beginSponsoringFutureReserves";
        OperationResponseTypeI[OperationResponseTypeI["endSponsoringFutureReserves"] = 17] = "endSponsoringFutureReserves";
        OperationResponseTypeI[OperationResponseTypeI["revokeSponsorship"] = 18] = "revokeSponsorship";
        OperationResponseTypeI[OperationResponseTypeI["clawback"] = 19] = "clawback";
        OperationResponseTypeI[OperationResponseTypeI["clawbackClaimableBalance"] = 20] = "clawbackClaimableBalance";
        OperationResponseTypeI[OperationResponseTypeI["setTrustLineFlags"] = 21] = "setTrustLineFlags";
        OperationResponseTypeI[OperationResponseTypeI["liquidityPoolDeposit"] = 22] = "liquidityPoolDeposit";
        OperationResponseTypeI[OperationResponseTypeI["liquidityPoolWithdraw"] = 23] = "liquidityPoolWithdraw";
        OperationResponseTypeI[OperationResponseTypeI["invokeHostFunction"] = 24] = "invokeHostFunction";
        OperationResponseTypeI[OperationResponseTypeI["bumpFootprintExpiration"] = 25] = "bumpFootprintExpiration";
        OperationResponseTypeI[OperationResponseTypeI["restoreFootprint"] = 26] = "restoreFootprint";
        return OperationResponseTypeI;
    }({});
    _HorizonApi.OperationResponseTypeI = OperationResponseTypeI;
    ;
    var TransactionFailedResultCodes = function(TransactionFailedResultCodes) {
        TransactionFailedResultCodes["TX_FAILED"] = "tx_failed";
        TransactionFailedResultCodes["TX_BAD_SEQ"] = "tx_bad_seq";
        TransactionFailedResultCodes["TX_BAD_AUTH"] = "tx_bad_auth";
        TransactionFailedResultCodes["TX_BAD_AUTH_EXTRA"] = "tx_bad_auth_extra";
        TransactionFailedResultCodes["TX_FEE_BUMP_INNER_SUCCESS"] = "tx_fee_bump_inner_success";
        TransactionFailedResultCodes["TX_FEE_BUMP_INNER_FAILED"] = "tx_fee_bump_inner_failed";
        TransactionFailedResultCodes["TX_NOT_SUPPORTED"] = "tx_not_supported";
        TransactionFailedResultCodes["TX_SUCCESS"] = "tx_success";
        TransactionFailedResultCodes["TX_TOO_EARLY"] = "tx_too_early";
        TransactionFailedResultCodes["TX_TOO_LATE"] = "tx_too_late";
        TransactionFailedResultCodes["TX_MISSING_OPERATION"] = "tx_missing_operation";
        TransactionFailedResultCodes["TX_INSUFFICIENT_BALANCE"] = "tx_insufficient_balance";
        TransactionFailedResultCodes["TX_NO_SOURCE_ACCOUNT"] = "tx_no_source_account";
        TransactionFailedResultCodes["TX_INSUFFICIENT_FEE"] = "tx_insufficient_fee";
        TransactionFailedResultCodes["TX_INTERNAL_ERROR"] = "tx_internal_error";
        return TransactionFailedResultCodes;
    }({});
    _HorizonApi.TransactionFailedResultCodes = TransactionFailedResultCodes;
})(HorizonApi || (exports.HorizonApi = HorizonApi = {}));
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/types/effects.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EffectType = void 0;
var EffectType = exports.EffectType = function(EffectType) {
    EffectType[EffectType["account_created"] = 0] = "account_created";
    EffectType[EffectType["account_removed"] = 1] = "account_removed";
    EffectType[EffectType["account_credited"] = 2] = "account_credited";
    EffectType[EffectType["account_debited"] = 3] = "account_debited";
    EffectType[EffectType["account_thresholds_updated"] = 4] = "account_thresholds_updated";
    EffectType[EffectType["account_home_domain_updated"] = 5] = "account_home_domain_updated";
    EffectType[EffectType["account_flags_updated"] = 6] = "account_flags_updated";
    EffectType[EffectType["account_inflation_destination_updated"] = 7] = "account_inflation_destination_updated";
    EffectType[EffectType["signer_created"] = 10] = "signer_created";
    EffectType[EffectType["signer_removed"] = 11] = "signer_removed";
    EffectType[EffectType["signer_updated"] = 12] = "signer_updated";
    EffectType[EffectType["trustline_created"] = 20] = "trustline_created";
    EffectType[EffectType["trustline_removed"] = 21] = "trustline_removed";
    EffectType[EffectType["trustline_updated"] = 22] = "trustline_updated";
    EffectType[EffectType["trustline_authorized"] = 23] = "trustline_authorized";
    EffectType[EffectType["trustline_deauthorized"] = 24] = "trustline_deauthorized";
    EffectType[EffectType["trustline_authorized_to_maintain_liabilities"] = 25] = "trustline_authorized_to_maintain_liabilities";
    EffectType[EffectType["trustline_flags_updated"] = 26] = "trustline_flags_updated";
    EffectType[EffectType["offer_created"] = 30] = "offer_created";
    EffectType[EffectType["offer_removed"] = 31] = "offer_removed";
    EffectType[EffectType["offer_updated"] = 32] = "offer_updated";
    EffectType[EffectType["trade"] = 33] = "trade";
    EffectType[EffectType["data_created"] = 40] = "data_created";
    EffectType[EffectType["data_removed"] = 41] = "data_removed";
    EffectType[EffectType["data_updated"] = 42] = "data_updated";
    EffectType[EffectType["sequence_bumped"] = 43] = "sequence_bumped";
    EffectType[EffectType["claimable_balance_created"] = 50] = "claimable_balance_created";
    EffectType[EffectType["claimable_balance_claimant_created"] = 51] = "claimable_balance_claimant_created";
    EffectType[EffectType["claimable_balance_claimed"] = 52] = "claimable_balance_claimed";
    EffectType[EffectType["account_sponsorship_created"] = 60] = "account_sponsorship_created";
    EffectType[EffectType["account_sponsorship_updated"] = 61] = "account_sponsorship_updated";
    EffectType[EffectType["account_sponsorship_removed"] = 62] = "account_sponsorship_removed";
    EffectType[EffectType["trustline_sponsorship_created"] = 63] = "trustline_sponsorship_created";
    EffectType[EffectType["trustline_sponsorship_updated"] = 64] = "trustline_sponsorship_updated";
    EffectType[EffectType["trustline_sponsorship_removed"] = 65] = "trustline_sponsorship_removed";
    EffectType[EffectType["data_sponsorship_created"] = 66] = "data_sponsorship_created";
    EffectType[EffectType["data_sponsorship_updated"] = 67] = "data_sponsorship_updated";
    EffectType[EffectType["data_sponsorship_removed"] = 68] = "data_sponsorship_removed";
    EffectType[EffectType["claimable_balance_sponsorship_created"] = 69] = "claimable_balance_sponsorship_created";
    EffectType[EffectType["claimable_balance_sponsorship_updated"] = 70] = "claimable_balance_sponsorship_updated";
    EffectType[EffectType["claimable_balance_sponsorship_removed"] = 71] = "claimable_balance_sponsorship_removed";
    EffectType[EffectType["signer_sponsorship_created"] = 72] = "signer_sponsorship_created";
    EffectType[EffectType["signer_sponsorship_updated"] = 73] = "signer_sponsorship_updated";
    EffectType[EffectType["signer_sponsorship_removed"] = 74] = "signer_sponsorship_removed";
    EffectType[EffectType["claimable_balance_clawed_back"] = 80] = "claimable_balance_clawed_back";
    EffectType[EffectType["liquidity_pool_deposited"] = 90] = "liquidity_pool_deposited";
    EffectType[EffectType["liquidity_pool_withdrew"] = 91] = "liquidity_pool_withdrew";
    EffectType[EffectType["liquidity_pool_trade"] = 92] = "liquidity_pool_trade";
    EffectType[EffectType["liquidity_pool_created"] = 93] = "liquidity_pool_created";
    EffectType[EffectType["liquidity_pool_removed"] = 94] = "liquidity_pool_removed";
    EffectType[EffectType["liquidity_pool_revoked"] = 95] = "liquidity_pool_revoked";
    EffectType[EffectType["contract_credited"] = 96] = "contract_credited";
    EffectType[EffectType["contract_debited"] = 97] = "contract_debited";
    return EffectType;
}({});
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/server_api.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ServerApi = void 0;
var _horizon_api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/horizon_api.js [app-ssr] (ecmascript)");
var Effects = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/types/effects.js [app-ssr] (ecmascript)"));
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var ServerApi;
(function(_ServerApi) {
    var EffectType = _ServerApi.EffectType = Effects.EffectType;
    var TradeType = function(TradeType) {
        TradeType["all"] = "all";
        TradeType["liquidityPools"] = "liquidity_pool";
        TradeType["orderbook"] = "orderbook";
        return TradeType;
    }({});
    _ServerApi.TradeType = TradeType;
    var OperationResponseType = _horizon_api.HorizonApi.OperationResponseType;
    var OperationResponseTypeI = _horizon_api.HorizonApi.OperationResponseTypeI;
})(ServerApi || (exports.ServerApi = ServerApi = {}));
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/account_response.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AccountResponse = void 0;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _slicedToArray(r, e) {
    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var AccountResponse = exports.AccountResponse = function() {
    function AccountResponse(response) {
        var _this = this;
        _classCallCheck(this, AccountResponse);
        this._baseAccount = new _stellarBase.Account(response.account_id, response.sequence);
        Object.entries(response).forEach(function(_ref) {
            var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
            _this[key] = value;
        });
    }
    return _createClass(AccountResponse, [
        {
            key: "accountId",
            value: function accountId() {
                return this._baseAccount.accountId();
            }
        },
        {
            key: "sequenceNumber",
            value: function sequenceNumber() {
                return this._baseAccount.sequenceNumber();
            }
        },
        {
            key: "incrementSequenceNumber",
            value: function incrementSequenceNumber() {
                this._baseAccount.incrementSequenceNumber();
                this.sequence = this._baseAccount.sequenceNumber();
            }
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/horizon_axios_client.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.SERVER_TIME_MAP = exports.AxiosClient = void 0;
exports.getCurrentServerTime = getCurrentServerTime;
exports.version = void 0;
var _urijs = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/urijs/src/URI.js [app-ssr] (ecmascript)"));
var _httpClient = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/http-client/index.js [app-ssr] (ecmascript)");
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var version = exports.version = "13.3.0";
var SERVER_TIME_MAP = exports.SERVER_TIME_MAP = {};
var AxiosClient = exports.AxiosClient = (0, _httpClient.create)({
    headers: {
        "X-Client-Name": "js-stellar-sdk",
        "X-Client-Version": version
    }
});
function toSeconds(ms) {
    return Math.floor(ms / 1000);
}
AxiosClient.interceptors.response.use(function(response) {
    var hostname = (0, _urijs.default)(response.config.url).hostname();
    var serverTime = 0;
    if (response.headers instanceof Headers) {
        var dateHeader = response.headers.get('date');
        if (dateHeader) {
            serverTime = toSeconds(Date.parse(dateHeader));
        }
    } else if (_typeof(response.headers) === 'object' && 'date' in response.headers) {
        var headers = response.headers;
        if (typeof headers.date === 'string') {
            serverTime = toSeconds(Date.parse(headers.date));
        }
    }
    var localTimeRecorded = toSeconds(new Date().getTime());
    if (!Number.isNaN(serverTime)) {
        SERVER_TIME_MAP[hostname] = {
            serverTime: serverTime,
            localTimeRecorded: localTimeRecorded
        };
    }
    return response;
});
var _default = exports.default = AxiosClient;
function getCurrentServerTime(hostname) {
    var entry = SERVER_TIME_MAP[hostname];
    if (!entry || !entry.localTimeRecorded || !entry.serverTime) {
        return null;
    }
    var serverTime = entry.serverTime, localTimeRecorded = entry.localTimeRecorded;
    var currentTime = toSeconds(new Date().getTime());
    if (currentTime - localTimeRecorded > 60 * 5) {
        return null;
    }
    return currentTime - localTimeRecorded + serverTime;
}
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CallBuilder = void 0;
var _urijs = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/urijs/src/URI.js [app-ssr] (ecmascript)"));
var _URITemplate = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/urijs/src/URITemplate.js [app-ssr] (ecmascript)"));
var _errors = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/index.js [app-ssr] (ecmascript)");
var _horizon_axios_client = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/horizon_axios_client.js [app-ssr] (ecmascript)");
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var JOINABLE = [
    "transaction"
];
var anyGlobal = global;
var EventSource;
if (typeof true !== 'undefined' && true) {
    var _ref, _anyGlobal$EventSourc, _anyGlobal$window;
    EventSource = (_ref = (_anyGlobal$EventSourc = anyGlobal.EventSource) !== null && _anyGlobal$EventSourc !== void 0 ? _anyGlobal$EventSourc : (_anyGlobal$window = anyGlobal.window) === null || _anyGlobal$window === void 0 ? void 0 : _anyGlobal$window.EventSource) !== null && _ref !== void 0 ? _ref : __turbopack_context__.r("[project]/node_modules/eventsource/lib/eventsource.js [app-ssr] (ecmascript)");
}
var CallBuilder = exports.CallBuilder = function() {
    function CallBuilder(serverUrl) {
        var neighborRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
        _classCallCheck(this, CallBuilder);
        this.url = serverUrl.clone();
        this.filter = [];
        this.originalSegments = this.url.segment() || [];
        this.neighborRoot = neighborRoot;
    }
    return _createClass(CallBuilder, [
        {
            key: "call",
            value: function call() {
                var _this = this;
                this.checkFilter();
                return this._sendNormalRequest(this.url).then(function(r) {
                    return _this._parseResponse(r);
                });
            }
        },
        {
            key: "stream",
            value: function stream() {
                var _this2 = this;
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                if (EventSource === undefined) {
                    throw new Error("Streaming requires eventsource to be enabled. If you need this functionality, compile with USE_EVENTSOURCE=true.");
                }
                this.checkFilter();
                this.url.setQuery("X-Client-Name", "js-stellar-sdk");
                this.url.setQuery("X-Client-Version", _horizon_axios_client.version);
                var es;
                var timeout;
                var createTimeout = function createTimeout() {
                    timeout = setTimeout(function() {
                        var _es;
                        (_es = es) === null || _es === void 0 || _es.close();
                        es = _createEventSource();
                    }, options.reconnectTimeout || 15 * 1000);
                };
                var _createEventSource = function createEventSource() {
                    try {
                        es = new EventSource(_this2.url.toString());
                    } catch (err) {
                        if (options.onerror) {
                            options.onerror(err);
                        }
                    }
                    createTimeout();
                    if (!es) {
                        return es;
                    }
                    var closed = false;
                    var onClose = function onClose() {
                        if (closed) {
                            return;
                        }
                        clearTimeout(timeout);
                        es.close();
                        _createEventSource();
                        closed = true;
                    };
                    var onMessage = function onMessage(message) {
                        if (message.type === "close") {
                            onClose();
                            return;
                        }
                        var result = message.data ? _this2._parseRecord(JSON.parse(message.data)) : message;
                        if (result.paging_token) {
                            _this2.url.setQuery("cursor", result.paging_token);
                        }
                        clearTimeout(timeout);
                        createTimeout();
                        if (typeof options.onmessage !== "undefined") {
                            options.onmessage(result);
                        }
                    };
                    var onError = function onError(error) {
                        if (options.onerror) {
                            options.onerror(error);
                        }
                    };
                    if (es.addEventListener) {
                        es.addEventListener("message", onMessage.bind(_this2));
                        es.addEventListener("error", onError.bind(_this2));
                        es.addEventListener("close", onClose.bind(_this2));
                    } else {
                        es.onmessage = onMessage.bind(_this2);
                        es.onerror = onError.bind(_this2);
                    }
                    return es;
                };
                _createEventSource();
                return function() {
                    var _es2;
                    clearTimeout(timeout);
                    (_es2 = es) === null || _es2 === void 0 || _es2.close();
                };
            }
        },
        {
            key: "cursor",
            value: function cursor(_cursor) {
                this.url.setQuery("cursor", _cursor);
                return this;
            }
        },
        {
            key: "limit",
            value: function limit(recordsNumber) {
                this.url.setQuery("limit", recordsNumber.toString());
                return this;
            }
        },
        {
            key: "order",
            value: function order(direction) {
                this.url.setQuery("order", direction);
                return this;
            }
        },
        {
            key: "join",
            value: function join(include) {
                this.url.setQuery("join", include);
                return this;
            }
        },
        {
            key: "forEndpoint",
            value: function forEndpoint(endpoint, param) {
                if (this.neighborRoot === "") {
                    throw new Error("Invalid usage: neighborRoot not set in constructor");
                }
                this.filter.push([
                    endpoint,
                    param,
                    this.neighborRoot
                ]);
                return this;
            }
        },
        {
            key: "checkFilter",
            value: function checkFilter() {
                if (this.filter.length >= 2) {
                    throw new _errors.BadRequestError("Too many filters specified", this.filter);
                }
                if (this.filter.length === 1) {
                    var newSegment = this.originalSegments.concat(this.filter[0]);
                    this.url.segment(newSegment);
                }
            }
        },
        {
            key: "_requestFnForLink",
            value: function _requestFnForLink(link) {
                var _this3 = this;
                return _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
                    var opts, uri, template, r, _args = arguments;
                    return _regeneratorRuntime().wrap(function _callee$(_context) {
                        while(1)switch(_context.prev = _context.next){
                            case 0:
                                opts = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                                if (link.templated) {
                                    template = (0, _URITemplate.default)(link.href);
                                    uri = (0, _urijs.default)(template.expand(opts));
                                } else {
                                    uri = (0, _urijs.default)(link.href);
                                }
                                _context.next = 4;
                                return _this3._sendNormalRequest(uri);
                            case 4:
                                r = _context.sent;
                                return _context.abrupt("return", _this3._parseResponse(r));
                            case 6:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee);
                }));
            }
        },
        {
            key: "_parseRecord",
            value: function _parseRecord(json) {
                var _this4 = this;
                if (!json._links) {
                    return json;
                }
                Object.keys(json._links).forEach(function(key) {
                    var n = json._links[key];
                    var included = false;
                    if (typeof json[key] !== "undefined") {
                        json["".concat(key, "_attr")] = json[key];
                        included = true;
                    }
                    if (included && JOINABLE.indexOf(key) >= 0) {
                        var record = _this4._parseRecord(json[key]);
                        json[key] = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
                            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                                while(1)switch(_context2.prev = _context2.next){
                                    case 0:
                                        return _context2.abrupt("return", record);
                                    case 1:
                                    case "end":
                                        return _context2.stop();
                                }
                            }, _callee2);
                        }));
                    } else {
                        json[key] = _this4._requestFnForLink(n);
                    }
                });
                return json;
            }
        },
        {
            key: "_sendNormalRequest",
            value: function() {
                var _sendNormalRequest2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(initialUrl) {
                    var url;
                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                        while(1)switch(_context3.prev = _context3.next){
                            case 0:
                                url = initialUrl;
                                if (url.authority() === "") {
                                    url = url.authority(this.url.authority());
                                }
                                if (url.protocol() === "") {
                                    url = url.protocol(this.url.protocol());
                                }
                                return _context3.abrupt("return", _horizon_axios_client.AxiosClient.get(url.toString()).then(function(response) {
                                    return response.data;
                                }).catch(this._handleNetworkError));
                            case 4:
                            case "end":
                                return _context3.stop();
                        }
                    }, _callee3, this);
                }));
                function _sendNormalRequest(_x) {
                    return _sendNormalRequest2.apply(this, arguments);
                }
                return _sendNormalRequest;
            }()
        },
        {
            key: "_parseResponse",
            value: function _parseResponse(json) {
                if (json._embedded && json._embedded.records) {
                    return this._toCollectionPage(json);
                }
                return this._parseRecord(json);
            }
        },
        {
            key: "_toCollectionPage",
            value: function _toCollectionPage(json) {
                var _this5 = this;
                for(var i = 0; i < json._embedded.records.length; i += 1){
                    json._embedded.records[i] = this._parseRecord(json._embedded.records[i]);
                }
                return {
                    records: json._embedded.records,
                    next: function() {
                        var _next2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {
                            var r;
                            return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                                while(1)switch(_context4.prev = _context4.next){
                                    case 0:
                                        _context4.next = 2;
                                        return _this5._sendNormalRequest((0, _urijs.default)(json._links.next.href));
                                    case 2:
                                        r = _context4.sent;
                                        return _context4.abrupt("return", _this5._toCollectionPage(r));
                                    case 4:
                                    case "end":
                                        return _context4.stop();
                                }
                            }, _callee4);
                        }));
                        function next() {
                            return _next2.apply(this, arguments);
                        }
                        return next;
                    }(),
                    prev: function() {
                        var _prev = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5() {
                            var r;
                            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                                while(1)switch(_context5.prev = _context5.next){
                                    case 0:
                                        _context5.next = 2;
                                        return _this5._sendNormalRequest((0, _urijs.default)(json._links.prev.href));
                                    case 2:
                                        r = _context5.sent;
                                        return _context5.abrupt("return", _this5._toCollectionPage(r));
                                    case 4:
                                    case "end":
                                        return _context5.stop();
                                }
                            }, _callee5);
                        }));
                        function prev() {
                            return _prev.apply(this, arguments);
                        }
                        return prev;
                    }()
                };
            }
        },
        {
            key: "_handleNetworkError",
            value: function() {
                var _handleNetworkError2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(error) {
                    var _error$response$statu, _error$response$statu2;
                    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                        while(1)switch(_context6.prev = _context6.next){
                            case 0:
                                if (!(error.response && error.response.status)) {
                                    _context6.next = 8;
                                    break;
                                }
                                _context6.t0 = error.response.status;
                                _context6.next = _context6.t0 === 404 ? 4 : 5;
                                break;
                            case 4:
                                return _context6.abrupt("return", Promise.reject(new _errors.NotFoundError((_error$response$statu = error.response.statusText) !== null && _error$response$statu !== void 0 ? _error$response$statu : "Not Found", error.response.data)));
                            case 5:
                                return _context6.abrupt("return", Promise.reject(new _errors.NetworkError((_error$response$statu2 = error.response.statusText) !== null && _error$response$statu2 !== void 0 ? _error$response$statu2 : "Unknown", error.response.data)));
                            case 6:
                                _context6.next = 9;
                                break;
                            case 8:
                                return _context6.abrupt("return", Promise.reject(new Error(error.message)));
                            case 9:
                            case "end":
                                return _context6.stop();
                        }
                    }, _callee6);
                }));
                function _handleNetworkError(_x2) {
                    return _handleNetworkError2.apply(this, arguments);
                }
                return _handleNetworkError;
            }()
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/account_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AccountCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var AccountCallBuilder = exports.AccountCallBuilder = function(_CallBuilder) {
    function AccountCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, AccountCallBuilder);
        _this = _callSuper(this, AccountCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("accounts");
        return _this;
    }
    _inherits(AccountCallBuilder, _CallBuilder);
    return _createClass(AccountCallBuilder, [
        {
            key: "accountId",
            value: function accountId(id) {
                var builder = new _call_builder.CallBuilder(this.url.clone());
                builder.filter.push([
                    id
                ]);
                return builder;
            }
        },
        {
            key: "forSigner",
            value: function forSigner(id) {
                this.url.setQuery("signer", id);
                return this;
            }
        },
        {
            key: "forAsset",
            value: function forAsset(asset) {
                this.url.setQuery("asset", "".concat(asset));
                return this;
            }
        },
        {
            key: "sponsor",
            value: function sponsor(id) {
                this.url.setQuery("sponsor", id);
                return this;
            }
        },
        {
            key: "forLiquidityPool",
            value: function forLiquidityPool(id) {
                this.url.setQuery("liquidity_pool", id);
                return this;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/assets_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AssetsCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var AssetsCallBuilder = exports.AssetsCallBuilder = function(_CallBuilder) {
    function AssetsCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, AssetsCallBuilder);
        _this = _callSuper(this, AssetsCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("assets");
        return _this;
    }
    _inherits(AssetsCallBuilder, _CallBuilder);
    return _createClass(AssetsCallBuilder, [
        {
            key: "forCode",
            value: function forCode(value) {
                this.url.setQuery("asset_code", value);
                return this;
            }
        },
        {
            key: "forIssuer",
            value: function forIssuer(value) {
                this.url.setQuery("asset_issuer", value);
                return this;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/claimable_balances_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ClaimableBalanceCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var ClaimableBalanceCallBuilder = exports.ClaimableBalanceCallBuilder = function(_CallBuilder) {
    function ClaimableBalanceCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, ClaimableBalanceCallBuilder);
        _this = _callSuper(this, ClaimableBalanceCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("claimable_balances");
        return _this;
    }
    _inherits(ClaimableBalanceCallBuilder, _CallBuilder);
    return _createClass(ClaimableBalanceCallBuilder, [
        {
            key: "claimableBalance",
            value: function claimableBalance(claimableBalanceId) {
                var builder = new _call_builder.CallBuilder(this.url.clone());
                builder.filter.push([
                    claimableBalanceId
                ]);
                return builder;
            }
        },
        {
            key: "sponsor",
            value: function sponsor(_sponsor) {
                this.url.setQuery("sponsor", _sponsor);
                return this;
            }
        },
        {
            key: "claimant",
            value: function claimant(_claimant) {
                this.url.setQuery("claimant", _claimant);
                return this;
            }
        },
        {
            key: "asset",
            value: function asset(_asset) {
                this.url.setQuery("asset", _asset.toString());
                return this;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/effect_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EffectCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var EffectCallBuilder = exports.EffectCallBuilder = function(_CallBuilder) {
    function EffectCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, EffectCallBuilder);
        _this = _callSuper(this, EffectCallBuilder, [
            serverUrl,
            "effects"
        ]);
        _this.url.segment("effects");
        return _this;
    }
    _inherits(EffectCallBuilder, _CallBuilder);
    return _createClass(EffectCallBuilder, [
        {
            key: "forAccount",
            value: function forAccount(accountId) {
                return this.forEndpoint("accounts", accountId);
            }
        },
        {
            key: "forLedger",
            value: function forLedger(sequence) {
                return this.forEndpoint("ledgers", sequence.toString());
            }
        },
        {
            key: "forTransaction",
            value: function forTransaction(transactionId) {
                return this.forEndpoint("transactions", transactionId);
            }
        },
        {
            key: "forOperation",
            value: function forOperation(operationId) {
                return this.forEndpoint("operations", operationId);
            }
        },
        {
            key: "forLiquidityPool",
            value: function forLiquidityPool(poolId) {
                return this.forEndpoint("liquidity_pools", poolId);
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/friendbot_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FriendbotBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var FriendbotBuilder = exports.FriendbotBuilder = function(_CallBuilder) {
    function FriendbotBuilder(serverUrl, address) {
        var _this;
        _classCallCheck(this, FriendbotBuilder);
        _this = _callSuper(this, FriendbotBuilder, [
            serverUrl
        ]);
        _this.url.segment("friendbot");
        _this.url.setQuery("addr", address);
        return _this;
    }
    _inherits(FriendbotBuilder, _CallBuilder);
    return _createClass(FriendbotBuilder);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/ledger_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LedgerCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var LedgerCallBuilder = exports.LedgerCallBuilder = function(_CallBuilder) {
    function LedgerCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, LedgerCallBuilder);
        _this = _callSuper(this, LedgerCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("ledgers");
        return _this;
    }
    _inherits(LedgerCallBuilder, _CallBuilder);
    return _createClass(LedgerCallBuilder, [
        {
            key: "ledger",
            value: function ledger(sequence) {
                this.filter.push([
                    "ledgers",
                    sequence.toString()
                ]);
                return this;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiquidityPoolCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var LiquidityPoolCallBuilder = exports.LiquidityPoolCallBuilder = function(_CallBuilder) {
    function LiquidityPoolCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, LiquidityPoolCallBuilder);
        _this = _callSuper(this, LiquidityPoolCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("liquidity_pools");
        return _this;
    }
    _inherits(LiquidityPoolCallBuilder, _CallBuilder);
    return _createClass(LiquidityPoolCallBuilder, [
        {
            key: "forAssets",
            value: function forAssets() {
                for(var _len = arguments.length, assets = new Array(_len), _key = 0; _key < _len; _key++){
                    assets[_key] = arguments[_key];
                }
                var assetList = assets.map(function(asset) {
                    return asset.toString();
                }).join(",");
                this.url.setQuery("reserves", assetList);
                return this;
            }
        },
        {
            key: "forAccount",
            value: function forAccount(id) {
                this.url.setQuery("account", id);
                return this;
            }
        },
        {
            key: "liquidityPoolId",
            value: function liquidityPoolId(id) {
                if (!id.match(/[a-fA-F0-9]{64}/)) {
                    throw new TypeError("".concat(id, " does not look like a liquidity pool ID"));
                }
                var builder = new _call_builder.CallBuilder(this.url.clone());
                builder.filter.push([
                    id.toLowerCase()
                ]);
                return builder;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/offer_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OfferCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var OfferCallBuilder = exports.OfferCallBuilder = function(_CallBuilder) {
    function OfferCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, OfferCallBuilder);
        _this = _callSuper(this, OfferCallBuilder, [
            serverUrl,
            "offers"
        ]);
        _this.url.segment("offers");
        return _this;
    }
    _inherits(OfferCallBuilder, _CallBuilder);
    return _createClass(OfferCallBuilder, [
        {
            key: "offer",
            value: function offer(offerId) {
                var builder = new _call_builder.CallBuilder(this.url.clone());
                builder.filter.push([
                    offerId
                ]);
                return builder;
            }
        },
        {
            key: "forAccount",
            value: function forAccount(id) {
                return this.forEndpoint("accounts", id);
            }
        },
        {
            key: "buying",
            value: function buying(asset) {
                if (!asset.isNative()) {
                    this.url.setQuery("buying_asset_type", asset.getAssetType());
                    this.url.setQuery("buying_asset_code", asset.getCode());
                    this.url.setQuery("buying_asset_issuer", asset.getIssuer());
                } else {
                    this.url.setQuery("buying_asset_type", "native");
                }
                return this;
            }
        },
        {
            key: "selling",
            value: function selling(asset) {
                if (!asset.isNative()) {
                    this.url.setQuery("selling_asset_type", asset.getAssetType());
                    this.url.setQuery("selling_asset_code", asset.getCode());
                    this.url.setQuery("selling_asset_issuer", asset.getIssuer());
                } else {
                    this.url.setQuery("selling_asset_type", "native");
                }
                return this;
            }
        },
        {
            key: "sponsor",
            value: function sponsor(id) {
                this.url.setQuery("sponsor", id);
                return this;
            }
        },
        {
            key: "seller",
            value: function seller(_seller) {
                this.url.setQuery("seller", _seller);
                return this;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/operation_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OperationCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var OperationCallBuilder = exports.OperationCallBuilder = function(_CallBuilder) {
    function OperationCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, OperationCallBuilder);
        _this = _callSuper(this, OperationCallBuilder, [
            serverUrl,
            "operations"
        ]);
        _this.url.segment("operations");
        return _this;
    }
    _inherits(OperationCallBuilder, _CallBuilder);
    return _createClass(OperationCallBuilder, [
        {
            key: "operation",
            value: function operation(operationId) {
                var builder = new _call_builder.CallBuilder(this.url.clone());
                builder.filter.push([
                    operationId
                ]);
                return builder;
            }
        },
        {
            key: "forAccount",
            value: function forAccount(accountId) {
                return this.forEndpoint("accounts", accountId);
            }
        },
        {
            key: "forClaimableBalance",
            value: function forClaimableBalance(claimableBalanceId) {
                return this.forEndpoint("claimable_balances", claimableBalanceId);
            }
        },
        {
            key: "forLedger",
            value: function forLedger(sequence) {
                return this.forEndpoint("ledgers", sequence.toString());
            }
        },
        {
            key: "forTransaction",
            value: function forTransaction(transactionId) {
                return this.forEndpoint("transactions", transactionId);
            }
        },
        {
            key: "forLiquidityPool",
            value: function forLiquidityPool(poolId) {
                return this.forEndpoint("liquidity_pools", poolId);
            }
        },
        {
            key: "includeFailed",
            value: function includeFailed(value) {
                this.url.setQuery("include_failed", value.toString());
                return this;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/orderbook_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OrderbookCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var OrderbookCallBuilder = exports.OrderbookCallBuilder = function(_CallBuilder) {
    function OrderbookCallBuilder(serverUrl, selling, buying) {
        var _this;
        _classCallCheck(this, OrderbookCallBuilder);
        _this = _callSuper(this, OrderbookCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("order_book");
        if (!selling.isNative()) {
            _this.url.setQuery("selling_asset_type", selling.getAssetType());
            _this.url.setQuery("selling_asset_code", selling.getCode());
            _this.url.setQuery("selling_asset_issuer", selling.getIssuer());
        } else {
            _this.url.setQuery("selling_asset_type", "native");
        }
        if (!buying.isNative()) {
            _this.url.setQuery("buying_asset_type", buying.getAssetType());
            _this.url.setQuery("buying_asset_code", buying.getCode());
            _this.url.setQuery("buying_asset_issuer", buying.getIssuer());
        } else {
            _this.url.setQuery("buying_asset_type", "native");
        }
        return _this;
    }
    _inherits(OrderbookCallBuilder, _CallBuilder);
    return _createClass(OrderbookCallBuilder);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/payment_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PaymentCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var PaymentCallBuilder = exports.PaymentCallBuilder = function(_CallBuilder) {
    function PaymentCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, PaymentCallBuilder);
        _this = _callSuper(this, PaymentCallBuilder, [
            serverUrl,
            "payments"
        ]);
        _this.url.segment("payments");
        return _this;
    }
    _inherits(PaymentCallBuilder, _CallBuilder);
    return _createClass(PaymentCallBuilder, [
        {
            key: "forAccount",
            value: function forAccount(accountId) {
                return this.forEndpoint("accounts", accountId);
            }
        },
        {
            key: "forLedger",
            value: function forLedger(sequence) {
                return this.forEndpoint("ledgers", sequence.toString());
            }
        },
        {
            key: "forTransaction",
            value: function forTransaction(transactionId) {
                return this.forEndpoint("transactions", transactionId);
            }
        },
        {
            key: "includeFailed",
            value: function includeFailed(value) {
                this.url.setQuery("include_failed", value.toString());
                return this;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StrictReceivePathCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var StrictReceivePathCallBuilder = exports.StrictReceivePathCallBuilder = function(_CallBuilder) {
    function StrictReceivePathCallBuilder(serverUrl, source, destinationAsset, destinationAmount) {
        var _this;
        _classCallCheck(this, StrictReceivePathCallBuilder);
        _this = _callSuper(this, StrictReceivePathCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("paths/strict-receive");
        if (typeof source === "string") {
            _this.url.setQuery("source_account", source);
        } else {
            var assets = source.map(function(asset) {
                if (asset.isNative()) {
                    return "native";
                }
                return "".concat(asset.getCode(), ":").concat(asset.getIssuer());
            }).join(",");
            _this.url.setQuery("source_assets", assets);
        }
        _this.url.setQuery("destination_amount", destinationAmount);
        if (!destinationAsset.isNative()) {
            _this.url.setQuery("destination_asset_type", destinationAsset.getAssetType());
            _this.url.setQuery("destination_asset_code", destinationAsset.getCode());
            _this.url.setQuery("destination_asset_issuer", destinationAsset.getIssuer());
        } else {
            _this.url.setQuery("destination_asset_type", "native");
        }
        return _this;
    }
    _inherits(StrictReceivePathCallBuilder, _CallBuilder);
    return _createClass(StrictReceivePathCallBuilder);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/strict_send_path_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StrictSendPathCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var StrictSendPathCallBuilder = exports.StrictSendPathCallBuilder = function(_CallBuilder) {
    function StrictSendPathCallBuilder(serverUrl, sourceAsset, sourceAmount, destination) {
        var _this;
        _classCallCheck(this, StrictSendPathCallBuilder);
        _this = _callSuper(this, StrictSendPathCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("paths/strict-send");
        if (sourceAsset.isNative()) {
            _this.url.setQuery("source_asset_type", "native");
        } else {
            _this.url.setQuery("source_asset_type", sourceAsset.getAssetType());
            _this.url.setQuery("source_asset_code", sourceAsset.getCode());
            _this.url.setQuery("source_asset_issuer", sourceAsset.getIssuer());
        }
        _this.url.setQuery("source_amount", sourceAmount);
        if (typeof destination === "string") {
            _this.url.setQuery("destination_account", destination);
        } else {
            var assets = destination.map(function(asset) {
                if (asset.isNative()) {
                    return "native";
                }
                return "".concat(asset.getCode(), ":").concat(asset.getIssuer());
            }).join(",");
            _this.url.setQuery("destination_assets", assets);
        }
        return _this;
    }
    _inherits(StrictSendPathCallBuilder, _CallBuilder);
    return _createClass(StrictSendPathCallBuilder);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TradeAggregationCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
var _errors = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/index.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var allowedResolutions = [
    60000,
    300000,
    900000,
    3600000,
    86400000,
    604800000
];
var TradeAggregationCallBuilder = exports.TradeAggregationCallBuilder = function(_CallBuilder) {
    function TradeAggregationCallBuilder(serverUrl, base, counter, start_time, end_time, resolution, offset) {
        var _this;
        _classCallCheck(this, TradeAggregationCallBuilder);
        _this = _callSuper(this, TradeAggregationCallBuilder, [
            serverUrl
        ]);
        _this.url.segment("trade_aggregations");
        if (!base.isNative()) {
            _this.url.setQuery("base_asset_type", base.getAssetType());
            _this.url.setQuery("base_asset_code", base.getCode());
            _this.url.setQuery("base_asset_issuer", base.getIssuer());
        } else {
            _this.url.setQuery("base_asset_type", "native");
        }
        if (!counter.isNative()) {
            _this.url.setQuery("counter_asset_type", counter.getAssetType());
            _this.url.setQuery("counter_asset_code", counter.getCode());
            _this.url.setQuery("counter_asset_issuer", counter.getIssuer());
        } else {
            _this.url.setQuery("counter_asset_type", "native");
        }
        if (typeof start_time !== "number" || typeof end_time !== "number") {
            throw new _errors.BadRequestError("Invalid time bounds", [
                start_time,
                end_time
            ]);
        } else {
            _this.url.setQuery("start_time", start_time.toString());
            _this.url.setQuery("end_time", end_time.toString());
        }
        if (!_this.isValidResolution(resolution)) {
            throw new _errors.BadRequestError("Invalid resolution", resolution);
        } else {
            _this.url.setQuery("resolution", resolution.toString());
        }
        if (!_this.isValidOffset(offset, resolution)) {
            throw new _errors.BadRequestError("Invalid offset", offset);
        } else {
            _this.url.setQuery("offset", offset.toString());
        }
        return _this;
    }
    _inherits(TradeAggregationCallBuilder, _CallBuilder);
    return _createClass(TradeAggregationCallBuilder, [
        {
            key: "isValidResolution",
            value: function isValidResolution(resolution) {
                return allowedResolutions.some(function(allowed) {
                    return allowed === resolution;
                });
            }
        },
        {
            key: "isValidOffset",
            value: function isValidOffset(offset, resolution) {
                var hour = 3600000;
                return !(offset > resolution || offset >= 24 * hour || offset % hour !== 0);
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/trades_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TradesCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var TradesCallBuilder = exports.TradesCallBuilder = function(_CallBuilder) {
    function TradesCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, TradesCallBuilder);
        _this = _callSuper(this, TradesCallBuilder, [
            serverUrl,
            "trades"
        ]);
        _this.url.segment("trades");
        return _this;
    }
    _inherits(TradesCallBuilder, _CallBuilder);
    return _createClass(TradesCallBuilder, [
        {
            key: "forAssetPair",
            value: function forAssetPair(base, counter) {
                if (!base.isNative()) {
                    this.url.setQuery("base_asset_type", base.getAssetType());
                    this.url.setQuery("base_asset_code", base.getCode());
                    this.url.setQuery("base_asset_issuer", base.getIssuer());
                } else {
                    this.url.setQuery("base_asset_type", "native");
                }
                if (!counter.isNative()) {
                    this.url.setQuery("counter_asset_type", counter.getAssetType());
                    this.url.setQuery("counter_asset_code", counter.getCode());
                    this.url.setQuery("counter_asset_issuer", counter.getIssuer());
                } else {
                    this.url.setQuery("counter_asset_type", "native");
                }
                return this;
            }
        },
        {
            key: "forOffer",
            value: function forOffer(offerId) {
                this.url.setQuery("offer_id", offerId);
                return this;
            }
        },
        {
            key: "forType",
            value: function forType(tradeType) {
                this.url.setQuery("trade_type", tradeType);
                return this;
            }
        },
        {
            key: "forAccount",
            value: function forAccount(accountId) {
                return this.forEndpoint("accounts", accountId);
            }
        },
        {
            key: "forLiquidityPool",
            value: function forLiquidityPool(liquidityPoolId) {
                return this.forEndpoint("liquidity_pools", liquidityPoolId);
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/transaction_call_builder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TransactionCallBuilder = void 0;
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
var TransactionCallBuilder = exports.TransactionCallBuilder = function(_CallBuilder) {
    function TransactionCallBuilder(serverUrl) {
        var _this;
        _classCallCheck(this, TransactionCallBuilder);
        _this = _callSuper(this, TransactionCallBuilder, [
            serverUrl,
            "transactions"
        ]);
        _this.url.segment("transactions");
        return _this;
    }
    _inherits(TransactionCallBuilder, _CallBuilder);
    return _createClass(TransactionCallBuilder, [
        {
            key: "transaction",
            value: function transaction(transactionId) {
                var builder = new _call_builder.CallBuilder(this.url.clone());
                builder.filter.push([
                    transactionId
                ]);
                return builder;
            }
        },
        {
            key: "forAccount",
            value: function forAccount(accountId) {
                return this.forEndpoint("accounts", accountId);
            }
        },
        {
            key: "forClaimableBalance",
            value: function forClaimableBalance(claimableBalanceId) {
                return this.forEndpoint("claimable_balances", claimableBalanceId);
            }
        },
        {
            key: "forLedger",
            value: function forLedger(sequence) {
                return this.forEndpoint("ledgers", sequence.toString());
            }
        },
        {
            key: "forLiquidityPool",
            value: function forLiquidityPool(poolId) {
                return this.forEndpoint("liquidity_pools", poolId);
            }
        },
        {
            key: "includeFailed",
            value: function includeFailed(value) {
                this.url.setQuery("include_failed", value.toString());
                return this;
            }
        }
    ]);
}(_call_builder.CallBuilder);
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/server.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SUBMIT_TRANSACTION_TIMEOUT = exports.HorizonServer = void 0;
var _bignumber = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/bignumber.js/bignumber.js [app-ssr] (ecmascript)"));
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _urijs = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/urijs/src/URI.js [app-ssr] (ecmascript)"));
var _call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/call_builder.js [app-ssr] (ecmascript)");
var _config = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/config.js [app-ssr] (ecmascript)");
var _errors = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/index.js [app-ssr] (ecmascript)");
var _account_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/account_call_builder.js [app-ssr] (ecmascript)");
var _account_response = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/account_response.js [app-ssr] (ecmascript)");
var _assets_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/assets_call_builder.js [app-ssr] (ecmascript)");
var _claimable_balances_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/claimable_balances_call_builder.js [app-ssr] (ecmascript)");
var _effect_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/effect_call_builder.js [app-ssr] (ecmascript)");
var _friendbot_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/friendbot_builder.js [app-ssr] (ecmascript)");
var _ledger_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/ledger_call_builder.js [app-ssr] (ecmascript)");
var _liquidity_pool_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js [app-ssr] (ecmascript)");
var _offer_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/offer_call_builder.js [app-ssr] (ecmascript)");
var _operation_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/operation_call_builder.js [app-ssr] (ecmascript)");
var _orderbook_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/orderbook_call_builder.js [app-ssr] (ecmascript)");
var _payment_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/payment_call_builder.js [app-ssr] (ecmascript)");
var _strict_receive_path_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js [app-ssr] (ecmascript)");
var _strict_send_path_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/strict_send_path_call_builder.js [app-ssr] (ecmascript)");
var _trade_aggregation_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js [app-ssr] (ecmascript)");
var _trades_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/trades_call_builder.js [app-ssr] (ecmascript)");
var _transaction_call_builder = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/transaction_call_builder.js [app-ssr] (ecmascript)");
var _horizon_axios_client = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/horizon_axios_client.js [app-ssr] (ecmascript)"));
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var SUBMIT_TRANSACTION_TIMEOUT = exports.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1000;
var STROOPS_IN_LUMEN = 10000000;
var ACCOUNT_REQUIRES_MEMO = "MQ==";
function getAmountInLumens(amt) {
    return new _bignumber.default(amt).div(STROOPS_IN_LUMEN).toString();
}
var HorizonServer = exports.HorizonServer = function() {
    function HorizonServer(serverURL) {
        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        _classCallCheck(this, HorizonServer);
        this.serverURL = (0, _urijs.default)(serverURL);
        var allowHttp = typeof opts.allowHttp === "undefined" ? _config.Config.isAllowHttp() : opts.allowHttp;
        var customHeaders = {};
        if (opts.appName) {
            customHeaders["X-App-Name"] = opts.appName;
        }
        if (opts.appVersion) {
            customHeaders["X-App-Version"] = opts.appVersion;
        }
        if (opts.authToken) {
            customHeaders["X-Auth-Token"] = opts.authToken;
        }
        if (opts.headers) {
            Object.assign(customHeaders, opts.headers);
        }
        if (Object.keys(customHeaders).length > 0) {
            _horizon_axios_client.default.interceptors.request.use(function(config) {
                config.headers = config.headers || {};
                config.headers = Object.assign(config.headers, customHeaders);
                return config;
            });
        }
        if (this.serverURL.protocol() !== "https" && !allowHttp) {
            throw new Error("Cannot connect to insecure horizon server");
        }
    }
    return _createClass(HorizonServer, [
        {
            key: "fetchTimebounds",
            value: function() {
                var _fetchTimebounds = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(seconds) {
                    var _isRetry, currentTime, _args = arguments;
                    return _regeneratorRuntime().wrap(function _callee$(_context) {
                        while(1)switch(_context.prev = _context.next){
                            case 0:
                                _isRetry = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;
                                currentTime = (0, _horizon_axios_client.getCurrentServerTime)(this.serverURL.hostname());
                                if (!currentTime) {
                                    _context.next = 4;
                                    break;
                                }
                                return _context.abrupt("return", {
                                    minTime: 0,
                                    maxTime: currentTime + seconds
                                });
                            case 4:
                                if (!_isRetry) {
                                    _context.next = 6;
                                    break;
                                }
                                return _context.abrupt("return", {
                                    minTime: 0,
                                    maxTime: Math.floor(new Date().getTime() / 1000) + seconds
                                });
                            case 6:
                                _context.next = 8;
                                return _horizon_axios_client.default.get((0, _urijs.default)(this.serverURL).toString());
                            case 8:
                                return _context.abrupt("return", this.fetchTimebounds(seconds, true));
                            case 9:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee, this);
                }));
                function fetchTimebounds(_x) {
                    return _fetchTimebounds.apply(this, arguments);
                }
                return fetchTimebounds;
            }()
        },
        {
            key: "fetchBaseFee",
            value: function() {
                var _fetchBaseFee = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
                    var response;
                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                        while(1)switch(_context2.prev = _context2.next){
                            case 0:
                                _context2.next = 2;
                                return this.feeStats();
                            case 2:
                                response = _context2.sent;
                                return _context2.abrupt("return", parseInt(response.last_ledger_base_fee, 10) || 100);
                            case 4:
                            case "end":
                                return _context2.stop();
                        }
                    }, _callee2, this);
                }));
                function fetchBaseFee() {
                    return _fetchBaseFee.apply(this, arguments);
                }
                return fetchBaseFee;
            }()
        },
        {
            key: "feeStats",
            value: function() {
                var _feeStats = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
                    var cb;
                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                        while(1)switch(_context3.prev = _context3.next){
                            case 0:
                                cb = new _call_builder.CallBuilder((0, _urijs.default)(this.serverURL));
                                cb.filter.push([
                                    "fee_stats"
                                ]);
                                return _context3.abrupt("return", cb.call());
                            case 3:
                            case "end":
                                return _context3.stop();
                        }
                    }, _callee3, this);
                }));
                function feeStats() {
                    return _feeStats.apply(this, arguments);
                }
                return feeStats;
            }()
        },
        {
            key: "root",
            value: function() {
                var _root = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {
                    var cb;
                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                        while(1)switch(_context4.prev = _context4.next){
                            case 0:
                                cb = new _call_builder.CallBuilder((0, _urijs.default)(this.serverURL));
                                return _context4.abrupt("return", cb.call());
                            case 2:
                            case "end":
                                return _context4.stop();
                        }
                    }, _callee4, this);
                }));
                function root() {
                    return _root.apply(this, arguments);
                }
                return root;
            }()
        },
        {
            key: "submitTransaction",
            value: function() {
                var _submitTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(transaction) {
                    var opts, tx, _args5 = arguments;
                    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                        while(1)switch(_context5.prev = _context5.next){
                            case 0:
                                opts = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {
                                    skipMemoRequiredCheck: false
                                };
                                if (opts.skipMemoRequiredCheck) {
                                    _context5.next = 4;
                                    break;
                                }
                                _context5.next = 4;
                                return this.checkMemoRequired(transaction);
                            case 4:
                                tx = encodeURIComponent(transaction.toEnvelope().toXDR().toString("base64"));
                                return _context5.abrupt("return", _horizon_axios_client.default.post((0, _urijs.default)(this.serverURL).segment("transactions").toString(), "tx=".concat(tx), {
                                    timeout: SUBMIT_TRANSACTION_TIMEOUT
                                }).then(function(response) {
                                    if (!response.data.result_xdr) {
                                        return response.data;
                                    }
                                    var responseXDR = _stellarBase.xdr.TransactionResult.fromXDR(response.data.result_xdr, "base64");
                                    var results = responseXDR.result().value();
                                    var offerResults;
                                    var hasManageOffer;
                                    if (results.length) {
                                        offerResults = results.map(function(result, i) {
                                            if (result.value().switch().name !== "manageBuyOffer" && result.value().switch().name !== "manageSellOffer") {
                                                return null;
                                            }
                                            hasManageOffer = true;
                                            var amountBought = new _bignumber.default(0);
                                            var amountSold = new _bignumber.default(0);
                                            var offerSuccess = result.value().value().success();
                                            var offersClaimed = offerSuccess.offersClaimed().map(function(offerClaimedAtom) {
                                                var offerClaimed = offerClaimedAtom.value();
                                                var sellerId = "";
                                                switch(offerClaimedAtom.switch()){
                                                    case _stellarBase.xdr.ClaimAtomType.claimAtomTypeV0():
                                                        sellerId = _stellarBase.StrKey.encodeEd25519PublicKey(offerClaimed.sellerEd25519());
                                                        break;
                                                    case _stellarBase.xdr.ClaimAtomType.claimAtomTypeOrderBook():
                                                        sellerId = _stellarBase.StrKey.encodeEd25519PublicKey(offerClaimed.sellerId().ed25519());
                                                        break;
                                                    default:
                                                        throw new Error("Invalid offer result type: ".concat(offerClaimedAtom.switch()));
                                                }
                                                var claimedOfferAmountBought = new _bignumber.default(offerClaimed.amountBought().toString());
                                                var claimedOfferAmountSold = new _bignumber.default(offerClaimed.amountSold().toString());
                                                amountBought = amountBought.plus(claimedOfferAmountSold);
                                                amountSold = amountSold.plus(claimedOfferAmountBought);
                                                var sold = _stellarBase.Asset.fromOperation(offerClaimed.assetSold());
                                                var bought = _stellarBase.Asset.fromOperation(offerClaimed.assetBought());
                                                var assetSold = {
                                                    type: sold.getAssetType(),
                                                    assetCode: sold.getCode(),
                                                    issuer: sold.getIssuer()
                                                };
                                                var assetBought = {
                                                    type: bought.getAssetType(),
                                                    assetCode: bought.getCode(),
                                                    issuer: bought.getIssuer()
                                                };
                                                return {
                                                    sellerId: sellerId,
                                                    offerId: offerClaimed.offerId().toString(),
                                                    assetSold: assetSold,
                                                    amountSold: getAmountInLumens(claimedOfferAmountSold),
                                                    assetBought: assetBought,
                                                    amountBought: getAmountInLumens(claimedOfferAmountBought)
                                                };
                                            });
                                            var effect = offerSuccess.offer().switch().name;
                                            var currentOffer;
                                            if (typeof offerSuccess.offer().value === "function" && offerSuccess.offer().value()) {
                                                var offerXDR = offerSuccess.offer().value();
                                                currentOffer = {
                                                    offerId: offerXDR.offerId().toString(),
                                                    selling: {},
                                                    buying: {},
                                                    amount: getAmountInLumens(offerXDR.amount().toString()),
                                                    price: {
                                                        n: offerXDR.price().n(),
                                                        d: offerXDR.price().d()
                                                    }
                                                };
                                                var selling = _stellarBase.Asset.fromOperation(offerXDR.selling());
                                                currentOffer.selling = {
                                                    type: selling.getAssetType(),
                                                    assetCode: selling.getCode(),
                                                    issuer: selling.getIssuer()
                                                };
                                                var buying = _stellarBase.Asset.fromOperation(offerXDR.buying());
                                                currentOffer.buying = {
                                                    type: buying.getAssetType(),
                                                    assetCode: buying.getCode(),
                                                    issuer: buying.getIssuer()
                                                };
                                            }
                                            return {
                                                offersClaimed: offersClaimed,
                                                effect: effect,
                                                operationIndex: i,
                                                currentOffer: currentOffer,
                                                amountBought: getAmountInLumens(amountBought),
                                                amountSold: getAmountInLumens(amountSold),
                                                isFullyOpen: !offersClaimed.length && effect !== "manageOfferDeleted",
                                                wasPartiallyFilled: !!offersClaimed.length && effect !== "manageOfferDeleted",
                                                wasImmediatelyFilled: !!offersClaimed.length && effect === "manageOfferDeleted",
                                                wasImmediatelyDeleted: !offersClaimed.length && effect === "manageOfferDeleted"
                                            };
                                        }).filter(function(result) {
                                            return !!result;
                                        });
                                    }
                                    return _objectSpread(_objectSpread({}, response.data), {}, {
                                        offerResults: hasManageOffer ? offerResults : undefined
                                    });
                                }).catch(function(response) {
                                    if (response instanceof Error) {
                                        return Promise.reject(response);
                                    }
                                    return Promise.reject(new _errors.BadResponseError("Transaction submission failed. Server responded: ".concat(response.status, " ").concat(response.statusText), response.data));
                                }));
                            case 6:
                            case "end":
                                return _context5.stop();
                        }
                    }, _callee5, this);
                }));
                function submitTransaction(_x2) {
                    return _submitTransaction.apply(this, arguments);
                }
                return submitTransaction;
            }()
        },
        {
            key: "submitAsyncTransaction",
            value: function() {
                var _submitAsyncTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(transaction) {
                    var opts, tx, _args6 = arguments;
                    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                        while(1)switch(_context6.prev = _context6.next){
                            case 0:
                                opts = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {
                                    skipMemoRequiredCheck: false
                                };
                                if (opts.skipMemoRequiredCheck) {
                                    _context6.next = 4;
                                    break;
                                }
                                _context6.next = 4;
                                return this.checkMemoRequired(transaction);
                            case 4:
                                tx = encodeURIComponent(transaction.toEnvelope().toXDR().toString("base64"));
                                return _context6.abrupt("return", _horizon_axios_client.default.post((0, _urijs.default)(this.serverURL).segment("transactions_async").toString(), "tx=".concat(tx)).then(function(response) {
                                    return response.data;
                                }).catch(function(response) {
                                    if (response instanceof Error) {
                                        return Promise.reject(response);
                                    }
                                    return Promise.reject(new _errors.BadResponseError("Transaction submission failed. Server responded: ".concat(response.status, " ").concat(response.statusText), response.data));
                                }));
                            case 6:
                            case "end":
                                return _context6.stop();
                        }
                    }, _callee6, this);
                }));
                function submitAsyncTransaction(_x3) {
                    return _submitAsyncTransaction.apply(this, arguments);
                }
                return submitAsyncTransaction;
            }()
        },
        {
            key: "accounts",
            value: function accounts() {
                return new _account_call_builder.AccountCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "claimableBalances",
            value: function claimableBalances() {
                return new _claimable_balances_call_builder.ClaimableBalanceCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "ledgers",
            value: function ledgers() {
                return new _ledger_call_builder.LedgerCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "transactions",
            value: function transactions() {
                return new _transaction_call_builder.TransactionCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "offers",
            value: function offers() {
                return new _offer_call_builder.OfferCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "orderbook",
            value: function orderbook(selling, buying) {
                return new _orderbook_call_builder.OrderbookCallBuilder((0, _urijs.default)(this.serverURL), selling, buying);
            }
        },
        {
            key: "trades",
            value: function trades() {
                return new _trades_call_builder.TradesCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "operations",
            value: function operations() {
                return new _operation_call_builder.OperationCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "liquidityPools",
            value: function liquidityPools() {
                return new _liquidity_pool_call_builder.LiquidityPoolCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "strictReceivePaths",
            value: function strictReceivePaths(source, destinationAsset, destinationAmount) {
                return new _strict_receive_path_call_builder.StrictReceivePathCallBuilder((0, _urijs.default)(this.serverURL), source, destinationAsset, destinationAmount);
            }
        },
        {
            key: "strictSendPaths",
            value: function strictSendPaths(sourceAsset, sourceAmount, destination) {
                return new _strict_send_path_call_builder.StrictSendPathCallBuilder((0, _urijs.default)(this.serverURL), sourceAsset, sourceAmount, destination);
            }
        },
        {
            key: "payments",
            value: function payments() {
                return new _payment_call_builder.PaymentCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "effects",
            value: function effects() {
                return new _effect_call_builder.EffectCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "friendbot",
            value: function friendbot(address) {
                return new _friendbot_builder.FriendbotBuilder((0, _urijs.default)(this.serverURL), address);
            }
        },
        {
            key: "assets",
            value: function assets() {
                return new _assets_call_builder.AssetsCallBuilder((0, _urijs.default)(this.serverURL));
            }
        },
        {
            key: "loadAccount",
            value: function() {
                var _loadAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7(accountId) {
                    var res;
                    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
                        while(1)switch(_context7.prev = _context7.next){
                            case 0:
                                _context7.next = 2;
                                return this.accounts().accountId(accountId).call();
                            case 2:
                                res = _context7.sent;
                                return _context7.abrupt("return", new _account_response.AccountResponse(res));
                            case 4:
                            case "end":
                                return _context7.stop();
                        }
                    }, _callee7, this);
                }));
                function loadAccount(_x4) {
                    return _loadAccount.apply(this, arguments);
                }
                return loadAccount;
            }()
        },
        {
            key: "tradeAggregation",
            value: function tradeAggregation(base, counter, start_time, end_time, resolution, offset) {
                return new _trade_aggregation_call_builder.TradeAggregationCallBuilder((0, _urijs.default)(this.serverURL), base, counter, start_time, end_time, resolution, offset);
            }
        },
        {
            key: "checkMemoRequired",
            value: function() {
                var _checkMemoRequired = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(transaction) {
                    var destinations, i, operation, destination, account;
                    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
                        while(1)switch(_context8.prev = _context8.next){
                            case 0:
                                if (transaction instanceof _stellarBase.FeeBumpTransaction) {
                                    transaction = transaction.innerTransaction;
                                }
                                if (!(transaction.memo.type !== "none")) {
                                    _context8.next = 3;
                                    break;
                                }
                                return _context8.abrupt("return");
                            case 3:
                                destinations = new Set();
                                i = 0;
                            case 5:
                                if (!(i < transaction.operations.length)) {
                                    _context8.next = 36;
                                    break;
                                }
                                operation = transaction.operations[i];
                                _context8.t0 = operation.type;
                                _context8.next = _context8.t0 === "payment" ? 10 : _context8.t0 === "pathPaymentStrictReceive" ? 10 : _context8.t0 === "pathPaymentStrictSend" ? 10 : _context8.t0 === "accountMerge" ? 10 : 11;
                                break;
                            case 10:
                                return _context8.abrupt("break", 12);
                            case 11:
                                return _context8.abrupt("continue", 33);
                            case 12:
                                destination = operation.destination;
                                if (!destinations.has(destination)) {
                                    _context8.next = 15;
                                    break;
                                }
                                return _context8.abrupt("continue", 33);
                            case 15:
                                destinations.add(destination);
                                if (!destination.startsWith("M")) {
                                    _context8.next = 18;
                                    break;
                                }
                                return _context8.abrupt("continue", 33);
                            case 18:
                                _context8.prev = 18;
                                _context8.next = 21;
                                return this.loadAccount(destination);
                            case 21:
                                account = _context8.sent;
                                if (!(account.data_attr["config.memo_required"] === ACCOUNT_REQUIRES_MEMO)) {
                                    _context8.next = 24;
                                    break;
                                }
                                throw new _errors.AccountRequiresMemoError("account requires memo", destination, i);
                            case 24:
                                _context8.next = 33;
                                break;
                            case 26:
                                _context8.prev = 26;
                                _context8.t1 = _context8["catch"](18);
                                if (!(_context8.t1 instanceof _errors.AccountRequiresMemoError)) {
                                    _context8.next = 30;
                                    break;
                                }
                                throw _context8.t1;
                            case 30:
                                if (_context8.t1 instanceof _errors.NotFoundError) {
                                    _context8.next = 32;
                                    break;
                                }
                                throw _context8.t1;
                            case 32:
                                return _context8.abrupt("continue", 33);
                            case 33:
                                i += 1;
                                _context8.next = 5;
                                break;
                            case 36:
                            case "end":
                                return _context8.stop();
                        }
                    }, _callee8, this, [
                        [
                            18,
                            26
                        ]
                    ]);
                }));
                function checkMemoRequired(_x5) {
                    return _checkMemoRequired.apply(this, arguments);
                }
                return checkMemoRequired;
            }()
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/horizon/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    Server: true,
    AxiosClient: true,
    SERVER_TIME_MAP: true,
    getCurrentServerTime: true
};
Object.defineProperty(exports, "AxiosClient", {
    enumerable: true,
    get: function get() {
        return _horizon_axios_client.default;
    }
});
Object.defineProperty(exports, "SERVER_TIME_MAP", {
    enumerable: true,
    get: function get() {
        return _horizon_axios_client.SERVER_TIME_MAP;
    }
});
Object.defineProperty(exports, "Server", {
    enumerable: true,
    get: function get() {
        return _server.HorizonServer;
    }
});
exports.default = void 0;
Object.defineProperty(exports, "getCurrentServerTime", {
    enumerable: true,
    get: function get() {
        return _horizon_axios_client.getCurrentServerTime;
    }
});
var _horizon_api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/horizon_api.js [app-ssr] (ecmascript)");
Object.keys(_horizon_api).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _horizon_api[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _horizon_api[key];
        }
    });
});
var _server_api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/server_api.js [app-ssr] (ecmascript)");
Object.keys(_server_api).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _server_api[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _server_api[key];
        }
    });
});
var _account_response = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/account_response.js [app-ssr] (ecmascript)");
Object.keys(_account_response).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _account_response[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _account_response[key];
        }
    });
});
var _server = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/server.js [app-ssr] (ecmascript)");
var _horizon_axios_client = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/horizon_axios_client.js [app-ssr] (ecmascript)"));
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var _default = exports.default = module.exports;
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/rpc/api.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Api = void 0;
var Api;
(function(_Api) {
    var GetTransactionStatus = function(GetTransactionStatus) {
        GetTransactionStatus["SUCCESS"] = "SUCCESS";
        GetTransactionStatus["NOT_FOUND"] = "NOT_FOUND";
        GetTransactionStatus["FAILED"] = "FAILED";
        return GetTransactionStatus;
    }({});
    _Api.GetTransactionStatus = GetTransactionStatus;
    function isSimulationError(sim) {
        return 'error' in sim;
    }
    _Api.isSimulationError = isSimulationError;
    function isSimulationSuccess(sim) {
        return 'transactionData' in sim;
    }
    _Api.isSimulationSuccess = isSimulationSuccess;
    function isSimulationRestore(sim) {
        return isSimulationSuccess(sim) && 'restorePreamble' in sim && !!sim.restorePreamble.transactionData;
    }
    _Api.isSimulationRestore = isSimulationRestore;
    function isSimulationRaw(sim) {
        return !sim._parsed;
    }
    _Api.isSimulationRaw = isSimulationRaw;
})(Api || (exports.Api = Api = {}));
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/rpc/axios.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.version = exports.default = exports.AxiosClient = void 0;
var _httpClient = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/http-client/index.js [app-ssr] (ecmascript)");
var version = exports.version = "13.3.0";
var AxiosClient = exports.AxiosClient = (0, _httpClient.create)({
    headers: {
        'X-Client-Name': 'js-soroban-client',
        'X-Client-Version': version
    }
});
var _default = exports.default = AxiosClient;
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/rpc/jsonrpc.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.postObject = postObject;
var _axios = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/axios.js [app-ssr] (ecmascript)"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function hasOwnProperty(obj, prop) {
    return obj.hasOwnProperty(prop);
}
function postObject(_x, _x2) {
    return _postObject.apply(this, arguments);
}
function _postObject() {
    _postObject = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(url, method) {
        var param, response, _response$data, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
            while(1)switch(_context.prev = _context.next){
                case 0:
                    param = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;
                    _context.next = 3;
                    return _axios.default.post(url, {
                        jsonrpc: "2.0",
                        id: 1,
                        method: method,
                        params: param
                    });
                case 3:
                    response = _context.sent;
                    if (!hasOwnProperty(response.data, "error")) {
                        _context.next = 8;
                        break;
                    }
                    throw response.data.error;
                case 8:
                    return _context.abrupt("return", (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.result);
                case 9:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return _postObject.apply(this, arguments);
}
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/rpc/parsers.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parseRawEvents = parseRawEvents;
exports.parseRawLedgerEntries = parseRawLedgerEntries;
exports.parseRawSendTransaction = parseRawSendTransaction;
exports.parseRawSimulation = parseRawSimulation;
exports.parseRawTransactions = parseRawTransactions;
exports.parseTransactionInfo = parseTransactionInfo;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/api.js [app-ssr] (ecmascript)");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function parseRawSendTransaction(raw) {
    var errorResultXdr = raw.errorResultXdr, diagnosticEventsXdr = raw.diagnosticEventsXdr;
    delete raw.errorResultXdr;
    delete raw.diagnosticEventsXdr;
    if (errorResultXdr) {
        return _objectSpread(_objectSpread(_objectSpread({}, raw), diagnosticEventsXdr !== undefined && diagnosticEventsXdr.length > 0 && {
            diagnosticEvents: diagnosticEventsXdr.map(function(evt) {
                return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, 'base64');
            })
        }), {}, {
            errorResult: _stellarBase.xdr.TransactionResult.fromXDR(errorResultXdr, 'base64')
        });
    }
    return _objectSpread({}, raw);
}
function parseTransactionInfo(raw) {
    var meta = _stellarBase.xdr.TransactionMeta.fromXDR(raw.resultMetaXdr, 'base64');
    var info = {
        ledger: raw.ledger,
        createdAt: raw.createdAt,
        applicationOrder: raw.applicationOrder,
        feeBump: raw.feeBump,
        envelopeXdr: _stellarBase.xdr.TransactionEnvelope.fromXDR(raw.envelopeXdr, 'base64'),
        resultXdr: _stellarBase.xdr.TransactionResult.fromXDR(raw.resultXdr, 'base64'),
        resultMetaXdr: meta
    };
    if (meta.switch() === 3 && meta.v3().sorobanMeta() !== null) {
        var _meta$v3$sorobanMeta;
        info.returnValue = (_meta$v3$sorobanMeta = meta.v3().sorobanMeta()) === null || _meta$v3$sorobanMeta === void 0 ? void 0 : _meta$v3$sorobanMeta.returnValue();
    }
    if ('diagnosticEventsXdr' in raw && raw.diagnosticEventsXdr) {
        info.diagnosticEventsXdr = raw.diagnosticEventsXdr.map(function(diagnosticEvent) {
            return _stellarBase.xdr.DiagnosticEvent.fromXDR(diagnosticEvent, 'base64');
        });
    }
    return info;
}
function parseRawTransactions(r) {
    return _objectSpread({
        status: r.status,
        txHash: r.txHash
    }, parseTransactionInfo(r));
}
function parseRawEvents(raw) {
    var _raw$events;
    return {
        latestLedger: raw.latestLedger,
        cursor: raw.cursor,
        events: ((_raw$events = raw.events) !== null && _raw$events !== void 0 ? _raw$events : []).map(function(evt) {
            var clone = _objectSpread({}, evt);
            delete clone.contractId;
            return _objectSpread(_objectSpread(_objectSpread({}, clone), evt.contractId !== '' && {
                contractId: new _stellarBase.Contract(evt.contractId)
            }), {}, {
                topic: evt.topic.map(function(topic) {
                    return _stellarBase.xdr.ScVal.fromXDR(topic, 'base64');
                }),
                value: _stellarBase.xdr.ScVal.fromXDR(evt.value, 'base64')
            });
        })
    };
}
function parseRawLedgerEntries(raw) {
    var _raw$entries;
    return {
        latestLedger: raw.latestLedger,
        entries: ((_raw$entries = raw.entries) !== null && _raw$entries !== void 0 ? _raw$entries : []).map(function(rawEntry) {
            if (!rawEntry.key || !rawEntry.xdr) {
                throw new TypeError("invalid ledger entry: ".concat(JSON.stringify(rawEntry)));
            }
            return _objectSpread({
                lastModifiedLedgerSeq: rawEntry.lastModifiedLedgerSeq,
                key: _stellarBase.xdr.LedgerKey.fromXDR(rawEntry.key, 'base64'),
                val: _stellarBase.xdr.LedgerEntryData.fromXDR(rawEntry.xdr, 'base64')
            }, rawEntry.liveUntilLedgerSeq !== undefined && {
                liveUntilLedgerSeq: rawEntry.liveUntilLedgerSeq
            });
        })
    };
}
function parseSuccessful(sim, partial) {
    var _sim$results$length, _sim$results, _sim$stateChanges$len, _sim$stateChanges, _sim$stateChanges2;
    var success = _objectSpread(_objectSpread(_objectSpread({}, partial), {}, {
        transactionData: new _stellarBase.SorobanDataBuilder(sim.transactionData),
        minResourceFee: sim.minResourceFee
    }, ((_sim$results$length = (_sim$results = sim.results) === null || _sim$results === void 0 ? void 0 : _sim$results.length) !== null && _sim$results$length !== void 0 ? _sim$results$length : 0 > 0) && {
        result: sim.results.map(function(row) {
            var _row$auth;
            return {
                auth: ((_row$auth = row.auth) !== null && _row$auth !== void 0 ? _row$auth : []).map(function(entry) {
                    return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(entry, 'base64');
                }),
                retval: row.xdr ? _stellarBase.xdr.ScVal.fromXDR(row.xdr, 'base64') : _stellarBase.xdr.ScVal.scvVoid()
            };
        })[0]
    }), ((_sim$stateChanges$len = (_sim$stateChanges = sim.stateChanges) === null || _sim$stateChanges === void 0 ? void 0 : _sim$stateChanges.length) !== null && _sim$stateChanges$len !== void 0 ? _sim$stateChanges$len : 0 > 0) && {
        stateChanges: (_sim$stateChanges2 = sim.stateChanges) === null || _sim$stateChanges2 === void 0 ? void 0 : _sim$stateChanges2.map(function(entryChange) {
            return {
                type: entryChange.type,
                key: _stellarBase.xdr.LedgerKey.fromXDR(entryChange.key, 'base64'),
                before: entryChange.before ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.before, 'base64') : null,
                after: entryChange.after ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.after, 'base64') : null
            };
        })
    });
    if (!sim.restorePreamble || sim.restorePreamble.transactionData === '') {
        return success;
    }
    return _objectSpread(_objectSpread({}, success), {}, {
        restorePreamble: {
            minResourceFee: sim.restorePreamble.minResourceFee,
            transactionData: new _stellarBase.SorobanDataBuilder(sim.restorePreamble.transactionData)
        }
    });
}
function parseRawSimulation(sim) {
    var _sim$events$map, _sim$events;
    var looksRaw = _api.Api.isSimulationRaw(sim);
    if (!looksRaw) {
        return sim;
    }
    var base = {
        _parsed: true,
        id: sim.id,
        latestLedger: sim.latestLedger,
        events: (_sim$events$map = (_sim$events = sim.events) === null || _sim$events === void 0 ? void 0 : _sim$events.map(function(evt) {
            return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, 'base64');
        })) !== null && _sim$events$map !== void 0 ? _sim$events$map : []
    };
    if (typeof sim.error === 'string') {
        return _objectSpread(_objectSpread({}, base), {}, {
            error: sim.error
        });
    }
    return parseSuccessful(sim, base);
}
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/rpc/transaction.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.assembleTransaction = assembleTransaction;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/api.js [app-ssr] (ecmascript)");
var _parsers = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/parsers.js [app-ssr] (ecmascript)");
function isSorobanTransaction(tx) {
    if (tx.operations.length !== 1) {
        return false;
    }
    switch(tx.operations[0].type){
        case 'invokeHostFunction':
        case 'extendFootprintTtl':
        case 'restoreFootprint':
            return true;
        default:
            return false;
    }
}
function assembleTransaction(raw, simulation) {
    if ('innerTransaction' in raw) {
        return assembleTransaction(raw.innerTransaction, simulation);
    }
    if (!isSorobanTransaction(raw)) {
        throw new TypeError('unsupported transaction: must contain exactly one ' + 'invokeHostFunction, extendFootprintTtl, or restoreFootprint ' + 'operation');
    }
    var success = (0, _parsers.parseRawSimulation)(simulation);
    if (!_api.Api.isSimulationSuccess(success)) {
        throw new Error("simulation incorrect: ".concat(JSON.stringify(success)));
    }
    var classicFeeNum = parseInt(raw.fee) || 0;
    var minResourceFeeNum = parseInt(success.minResourceFee) || 0;
    var txnBuilder = _stellarBase.TransactionBuilder.cloneFrom(raw, {
        fee: (classicFeeNum + minResourceFeeNum).toString(),
        sorobanData: success.transactionData.build(),
        networkPassphrase: raw.networkPassphrase
    });
    if (raw.operations[0].type === 'invokeHostFunction') {
        var _invokeOp$auth;
        txnBuilder.clearOperations();
        var invokeOp = raw.operations[0];
        var existingAuth = (_invokeOp$auth = invokeOp.auth) !== null && _invokeOp$auth !== void 0 ? _invokeOp$auth : [];
        txnBuilder.addOperation(_stellarBase.Operation.invokeHostFunction({
            source: invokeOp.source,
            func: invokeOp.func,
            auth: existingAuth.length > 0 ? existingAuth : success.result.auth
        }));
    }
    return txnBuilder;
}
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/rpc/server.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SUBMIT_TRANSACTION_TIMEOUT = exports.RpcServer = exports.LinearSleepStrategy = exports.Durability = exports.BasicSleepStrategy = void 0;
var _urijs = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/urijs/src/URI.js [app-ssr] (ecmascript)"));
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _axios = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/axios.js [app-ssr] (ecmascript)"));
var jsonrpc = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/jsonrpc.js [app-ssr] (ecmascript)"));
var _api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/api.js [app-ssr] (ecmascript)");
var _transaction = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/transaction.js [app-ssr] (ecmascript)");
var _parsers = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/parsers.js [app-ssr] (ecmascript)");
var _utils = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/utils.js [app-ssr] (ecmascript)");
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var SUBMIT_TRANSACTION_TIMEOUT = exports.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1000;
var Durability = exports.Durability = function(Durability) {
    Durability["Temporary"] = "temporary";
    Durability["Persistent"] = "persistent";
    return Durability;
}({});
var DEFAULT_GET_TRANSACTION_TIMEOUT = 30;
var BasicSleepStrategy = exports.BasicSleepStrategy = function BasicSleepStrategy(_iter) {
    return 1000;
};
var LinearSleepStrategy = exports.LinearSleepStrategy = function LinearSleepStrategy(iter) {
    return 1000 * iter;
};
function findCreatedAccountSequenceInTransactionMeta(meta) {
    var _operations$flatMap$f;
    var operations = [];
    switch(meta.switch()){
        case 0:
            operations = meta.operations();
            break;
        case 1:
        case 2:
        case 3:
            operations = meta.value().operations();
            break;
        default:
            throw new Error('Unexpected transaction meta switch value');
    }
    var sequenceNumber = (_operations$flatMap$f = operations.flatMap(function(op) {
        return op.changes();
    }).find(function(c) {
        return c.switch() === _stellarBase.xdr.LedgerEntryChangeType.ledgerEntryCreated() && c.created().data().switch() === _stellarBase.xdr.LedgerEntryType.account();
    })) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.created()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.data()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.account()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.seqNum()) === null || _operations$flatMap$f === void 0 ? void 0 : _operations$flatMap$f.toString();
    if (sequenceNumber) {
        return sequenceNumber;
    }
    throw new Error('No account created in transaction');
}
var RpcServer = exports.RpcServer = function() {
    function RpcServer(serverURL) {
        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        _classCallCheck(this, RpcServer);
        this.serverURL = (0, _urijs.default)(serverURL);
        if (opts.headers && Object.keys(opts.headers).length !== 0) {
            _axios.default.interceptors.request.use(function(config) {
                config.headers = Object.assign(config.headers, opts.headers);
                return config;
            });
        }
        if (this.serverURL.protocol() !== 'https' && !opts.allowHttp) {
            throw new Error("Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set");
        }
    }
    return _createClass(RpcServer, [
        {
            key: "getAccount",
            value: function() {
                var _getAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(address) {
                    var ledgerKey, resp, accountEntry;
                    return _regeneratorRuntime().wrap(function _callee$(_context) {
                        while(1)switch(_context.prev = _context.next){
                            case 0:
                                ledgerKey = _stellarBase.xdr.LedgerKey.account(new _stellarBase.xdr.LedgerKeyAccount({
                                    accountId: _stellarBase.Keypair.fromPublicKey(address).xdrPublicKey()
                                }));
                                _context.next = 3;
                                return this.getLedgerEntries(ledgerKey);
                            case 3:
                                resp = _context.sent;
                                if (!(resp.entries.length === 0)) {
                                    _context.next = 6;
                                    break;
                                }
                                return _context.abrupt("return", Promise.reject({
                                    code: 404,
                                    message: "Account not found: ".concat(address)
                                }));
                            case 6:
                                accountEntry = resp.entries[0].val.account();
                                return _context.abrupt("return", new _stellarBase.Account(address, accountEntry.seqNum().toString()));
                            case 8:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee, this);
                }));
                function getAccount(_x) {
                    return _getAccount.apply(this, arguments);
                }
                return getAccount;
            }()
        },
        {
            key: "getHealth",
            value: function() {
                var _getHealth = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                        while(1)switch(_context2.prev = _context2.next){
                            case 0:
                                return _context2.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getHealth'));
                            case 1:
                            case "end":
                                return _context2.stop();
                        }
                    }, _callee2, this);
                }));
                function getHealth() {
                    return _getHealth.apply(this, arguments);
                }
                return getHealth;
            }()
        },
        {
            key: "getContractData",
            value: function() {
                var _getContractData = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(contract, key) {
                    var durability, scAddress, xdrDurability, contractKey, _args3 = arguments;
                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                        while(1)switch(_context3.prev = _context3.next){
                            case 0:
                                durability = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : Durability.Persistent;
                                if (!(typeof contract === 'string')) {
                                    _context3.next = 5;
                                    break;
                                }
                                scAddress = new _stellarBase.Contract(contract).address().toScAddress();
                                _context3.next = 14;
                                break;
                            case 5:
                                if (!(contract instanceof _stellarBase.Address)) {
                                    _context3.next = 9;
                                    break;
                                }
                                scAddress = contract.toScAddress();
                                _context3.next = 14;
                                break;
                            case 9:
                                if (!(contract instanceof _stellarBase.Contract)) {
                                    _context3.next = 13;
                                    break;
                                }
                                scAddress = contract.address().toScAddress();
                                _context3.next = 14;
                                break;
                            case 13:
                                throw new TypeError("unknown contract type: ".concat(contract));
                            case 14:
                                _context3.t0 = durability;
                                _context3.next = _context3.t0 === Durability.Temporary ? 17 : _context3.t0 === Durability.Persistent ? 19 : 21;
                                break;
                            case 17:
                                xdrDurability = _stellarBase.xdr.ContractDataDurability.temporary();
                                return _context3.abrupt("break", 22);
                            case 19:
                                xdrDurability = _stellarBase.xdr.ContractDataDurability.persistent();
                                return _context3.abrupt("break", 22);
                            case 21:
                                throw new TypeError("invalid durability: ".concat(durability));
                            case 22:
                                contractKey = _stellarBase.xdr.LedgerKey.contractData(new _stellarBase.xdr.LedgerKeyContractData({
                                    key: key,
                                    contract: scAddress,
                                    durability: xdrDurability
                                }));
                                return _context3.abrupt("return", this.getLedgerEntries(contractKey).then(function(r) {
                                    if (r.entries.length === 0) {
                                        return Promise.reject({
                                            code: 404,
                                            message: "Contract data not found. Contract: ".concat(_stellarBase.Address.fromScAddress(scAddress).toString(), ", Key: ").concat(key.toXDR('base64'), ", Durability: ").concat(durability)
                                        });
                                    }
                                    return r.entries[0];
                                }));
                            case 24:
                            case "end":
                                return _context3.stop();
                        }
                    }, _callee3, this);
                }));
                function getContractData(_x2, _x3) {
                    return _getContractData.apply(this, arguments);
                }
                return getContractData;
            }()
        },
        {
            key: "getContractWasmByContractId",
            value: function() {
                var _getContractWasmByContractId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(contractId) {
                    var _response$entries$;
                    var contractLedgerKey, response, wasmHash;
                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                        while(1)switch(_context4.prev = _context4.next){
                            case 0:
                                contractLedgerKey = new _stellarBase.Contract(contractId).getFootprint();
                                _context4.next = 3;
                                return this.getLedgerEntries(contractLedgerKey);
                            case 3:
                                response = _context4.sent;
                                if (!(!response.entries.length || !((_response$entries$ = response.entries[0]) !== null && _response$entries$ !== void 0 && _response$entries$.val))) {
                                    _context4.next = 6;
                                    break;
                                }
                                return _context4.abrupt("return", Promise.reject({
                                    code: 404,
                                    message: "Could not obtain contract hash from server"
                                }));
                            case 6:
                                wasmHash = response.entries[0].val.contractData().val().instance().executable().wasmHash();
                                return _context4.abrupt("return", this.getContractWasmByHash(wasmHash));
                            case 8:
                            case "end":
                                return _context4.stop();
                        }
                    }, _callee4, this);
                }));
                function getContractWasmByContractId(_x4) {
                    return _getContractWasmByContractId.apply(this, arguments);
                }
                return getContractWasmByContractId;
            }()
        },
        {
            key: "getContractWasmByHash",
            value: function() {
                var _getContractWasmByHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(wasmHash) {
                    var _responseWasm$entries;
                    var format, wasmHashBuffer, ledgerKeyWasmHash, responseWasm, wasmBuffer, _args5 = arguments;
                    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                        while(1)switch(_context5.prev = _context5.next){
                            case 0:
                                format = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : undefined;
                                wasmHashBuffer = typeof wasmHash === "string" ? Buffer.from(wasmHash, format) : wasmHash;
                                ledgerKeyWasmHash = _stellarBase.xdr.LedgerKey.contractCode(new _stellarBase.xdr.LedgerKeyContractCode({
                                    hash: wasmHashBuffer
                                }));
                                _context5.next = 5;
                                return this.getLedgerEntries(ledgerKeyWasmHash);
                            case 5:
                                responseWasm = _context5.sent;
                                if (!(!responseWasm.entries.length || !((_responseWasm$entries = responseWasm.entries[0]) !== null && _responseWasm$entries !== void 0 && _responseWasm$entries.val))) {
                                    _context5.next = 8;
                                    break;
                                }
                                return _context5.abrupt("return", Promise.reject({
                                    code: 404,
                                    message: "Could not obtain contract wasm from server"
                                }));
                            case 8:
                                wasmBuffer = responseWasm.entries[0].val.contractCode().code();
                                return _context5.abrupt("return", wasmBuffer);
                            case 10:
                            case "end":
                                return _context5.stop();
                        }
                    }, _callee5, this);
                }));
                function getContractWasmByHash(_x5) {
                    return _getContractWasmByHash.apply(this, arguments);
                }
                return getContractWasmByHash;
            }()
        },
        {
            key: "getLedgerEntries",
            value: function() {
                var _getLedgerEntries2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {
                    var _args6 = arguments;
                    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                        while(1)switch(_context6.prev = _context6.next){
                            case 0:
                                return _context6.abrupt("return", this._getLedgerEntries.apply(this, _args6).then(_parsers.parseRawLedgerEntries));
                            case 1:
                            case "end":
                                return _context6.stop();
                        }
                    }, _callee6, this);
                }));
                function getLedgerEntries() {
                    return _getLedgerEntries2.apply(this, arguments);
                }
                return getLedgerEntries;
            }()
        },
        {
            key: "_getLedgerEntries",
            value: function() {
                var _getLedgerEntries3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {
                    var _len, keys, _key, _args7 = arguments;
                    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
                        while(1)switch(_context7.prev = _context7.next){
                            case 0:
                                for(_len = _args7.length, keys = new Array(_len), _key = 0; _key < _len; _key++){
                                    keys[_key] = _args7[_key];
                                }
                                return _context7.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getLedgerEntries', {
                                    keys: keys.map(function(k) {
                                        return k.toXDR('base64');
                                    })
                                }));
                            case 2:
                            case "end":
                                return _context7.stop();
                        }
                    }, _callee7, this);
                }));
                function _getLedgerEntries() {
                    return _getLedgerEntries3.apply(this, arguments);
                }
                return _getLedgerEntries;
            }()
        },
        {
            key: "pollTransaction",
            value: function() {
                var _pollTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(hash, opts) {
                    var _opts$attempts, _opts$attempts2;
                    var maxAttempts, foundInfo, attempt, _opts$sleepStrategy;
                    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
                        while(1)switch(_context8.prev = _context8.next){
                            case 0:
                                maxAttempts = ((_opts$attempts = opts === null || opts === void 0 ? void 0 : opts.attempts) !== null && _opts$attempts !== void 0 ? _opts$attempts : 0) < 1 ? DEFAULT_GET_TRANSACTION_TIMEOUT : (_opts$attempts2 = opts === null || opts === void 0 ? void 0 : opts.attempts) !== null && _opts$attempts2 !== void 0 ? _opts$attempts2 : DEFAULT_GET_TRANSACTION_TIMEOUT;
                                attempt = 1;
                            case 2:
                                if (!(attempt < maxAttempts)) {
                                    _context8.next = 13;
                                    break;
                                }
                                _context8.next = 5;
                                return this.getTransaction(hash);
                            case 5:
                                foundInfo = _context8.sent;
                                if (!(foundInfo.status !== _api.Api.GetTransactionStatus.NOT_FOUND)) {
                                    _context8.next = 8;
                                    break;
                                }
                                return _context8.abrupt("return", foundInfo);
                            case 8:
                                _context8.next = 10;
                                return _utils.Utils.sleep(((_opts$sleepStrategy = opts === null || opts === void 0 ? void 0 : opts.sleepStrategy) !== null && _opts$sleepStrategy !== void 0 ? _opts$sleepStrategy : BasicSleepStrategy)(attempt));
                            case 10:
                                attempt++;
                                _context8.next = 2;
                                break;
                            case 13:
                                return _context8.abrupt("return", foundInfo);
                            case 14:
                            case "end":
                                return _context8.stop();
                        }
                    }, _callee8, this);
                }));
                function pollTransaction(_x6, _x7) {
                    return _pollTransaction.apply(this, arguments);
                }
                return pollTransaction;
            }()
        },
        {
            key: "getTransaction",
            value: function() {
                var _getTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(hash) {
                    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
                        while(1)switch(_context9.prev = _context9.next){
                            case 0:
                                return _context9.abrupt("return", this._getTransaction(hash).then(function(raw) {
                                    var foundInfo = {};
                                    if (raw.status !== _api.Api.GetTransactionStatus.NOT_FOUND) {
                                        Object.assign(foundInfo, (0, _parsers.parseTransactionInfo)(raw));
                                    }
                                    var result = _objectSpread({
                                        status: raw.status,
                                        txHash: hash,
                                        latestLedger: raw.latestLedger,
                                        latestLedgerCloseTime: raw.latestLedgerCloseTime,
                                        oldestLedger: raw.oldestLedger,
                                        oldestLedgerCloseTime: raw.oldestLedgerCloseTime
                                    }, foundInfo);
                                    return result;
                                }));
                            case 1:
                            case "end":
                                return _context9.stop();
                        }
                    }, _callee9, this);
                }));
                function getTransaction(_x8) {
                    return _getTransaction2.apply(this, arguments);
                }
                return getTransaction;
            }()
        },
        {
            key: "_getTransaction",
            value: function() {
                var _getTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(hash) {
                    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
                        while(1)switch(_context10.prev = _context10.next){
                            case 0:
                                return _context10.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getTransaction', {
                                    hash: hash
                                }));
                            case 1:
                            case "end":
                                return _context10.stop();
                        }
                    }, _callee10, this);
                }));
                function _getTransaction(_x9) {
                    return _getTransaction3.apply(this, arguments);
                }
                return _getTransaction;
            }()
        },
        {
            key: "getTransactions",
            value: function() {
                var _getTransactions2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee11(request) {
                    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
                        while(1)switch(_context11.prev = _context11.next){
                            case 0:
                                return _context11.abrupt("return", this._getTransactions(request).then(function(raw) {
                                    var result = {
                                        transactions: (raw.transactions || []).map(_parsers.parseRawTransactions),
                                        latestLedger: raw.latestLedger,
                                        latestLedgerCloseTimestamp: raw.latestLedgerCloseTimestamp,
                                        oldestLedger: raw.oldestLedger,
                                        oldestLedgerCloseTimestamp: raw.oldestLedgerCloseTimestamp,
                                        cursor: raw.cursor
                                    };
                                    return result;
                                }));
                            case 1:
                            case "end":
                                return _context11.stop();
                        }
                    }, _callee11, this);
                }));
                function getTransactions(_x10) {
                    return _getTransactions2.apply(this, arguments);
                }
                return getTransactions;
            }()
        },
        {
            key: "_getTransactions",
            value: function() {
                var _getTransactions3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee12(request) {
                    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
                        while(1)switch(_context12.prev = _context12.next){
                            case 0:
                                return _context12.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getTransactions', request));
                            case 1:
                            case "end":
                                return _context12.stop();
                        }
                    }, _callee12, this);
                }));
                function _getTransactions(_x11) {
                    return _getTransactions3.apply(this, arguments);
                }
                return _getTransactions;
            }()
        },
        {
            key: "getEvents",
            value: function() {
                var _getEvents2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee13(request) {
                    return _regeneratorRuntime().wrap(function _callee13$(_context13) {
                        while(1)switch(_context13.prev = _context13.next){
                            case 0:
                                return _context13.abrupt("return", this._getEvents(request).then(_parsers.parseRawEvents));
                            case 1:
                            case "end":
                                return _context13.stop();
                        }
                    }, _callee13, this);
                }));
                function getEvents(_x12) {
                    return _getEvents2.apply(this, arguments);
                }
                return getEvents;
            }()
        },
        {
            key: "_getEvents",
            value: function() {
                var _getEvents3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee14(request) {
                    var _request$filters;
                    return _regeneratorRuntime().wrap(function _callee14$(_context14) {
                        while(1)switch(_context14.prev = _context14.next){
                            case 0:
                                return _context14.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getEvents', _objectSpread(_objectSpread({
                                    filters: (_request$filters = request.filters) !== null && _request$filters !== void 0 ? _request$filters : [],
                                    pagination: _objectSpread(_objectSpread({}, request.cursor && {
                                        cursor: request.cursor
                                    }), request.limit && {
                                        limit: request.limit
                                    })
                                }, request.startLedger && {
                                    startLedger: request.startLedger
                                }), request.endLedger && {
                                    endLedger: request.endLedger
                                })));
                            case 1:
                            case "end":
                                return _context14.stop();
                        }
                    }, _callee14, this);
                }));
                function _getEvents(_x13) {
                    return _getEvents3.apply(this, arguments);
                }
                return _getEvents;
            }()
        },
        {
            key: "getNetwork",
            value: function() {
                var _getNetwork = _asyncToGenerator(_regeneratorRuntime().mark(function _callee15() {
                    return _regeneratorRuntime().wrap(function _callee15$(_context15) {
                        while(1)switch(_context15.prev = _context15.next){
                            case 0:
                                return _context15.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getNetwork'));
                            case 1:
                            case "end":
                                return _context15.stop();
                        }
                    }, _callee15, this);
                }));
                function getNetwork() {
                    return _getNetwork.apply(this, arguments);
                }
                return getNetwork;
            }()
        },
        {
            key: "getLatestLedger",
            value: function() {
                var _getLatestLedger = _asyncToGenerator(_regeneratorRuntime().mark(function _callee16() {
                    return _regeneratorRuntime().wrap(function _callee16$(_context16) {
                        while(1)switch(_context16.prev = _context16.next){
                            case 0:
                                return _context16.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getLatestLedger'));
                            case 1:
                            case "end":
                                return _context16.stop();
                        }
                    }, _callee16, this);
                }));
                function getLatestLedger() {
                    return _getLatestLedger.apply(this, arguments);
                }
                return getLatestLedger;
            }()
        },
        {
            key: "simulateTransaction",
            value: function() {
                var _simulateTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee17(tx, addlResources) {
                    return _regeneratorRuntime().wrap(function _callee17$(_context17) {
                        while(1)switch(_context17.prev = _context17.next){
                            case 0:
                                return _context17.abrupt("return", this._simulateTransaction(tx, addlResources).then(_parsers.parseRawSimulation));
                            case 1:
                            case "end":
                                return _context17.stop();
                        }
                    }, _callee17, this);
                }));
                function simulateTransaction(_x14, _x15) {
                    return _simulateTransaction2.apply(this, arguments);
                }
                return simulateTransaction;
            }()
        },
        {
            key: "_simulateTransaction",
            value: function() {
                var _simulateTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee18(transaction, addlResources) {
                    return _regeneratorRuntime().wrap(function _callee18$(_context18) {
                        while(1)switch(_context18.prev = _context18.next){
                            case 0:
                                return _context18.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'simulateTransaction', _objectSpread({
                                    transaction: transaction.toXDR()
                                }, addlResources !== undefined && {
                                    resourceConfig: {
                                        instructionLeeway: addlResources.cpuInstructions
                                    }
                                })));
                            case 1:
                            case "end":
                                return _context18.stop();
                        }
                    }, _callee18, this);
                }));
                function _simulateTransaction(_x16, _x17) {
                    return _simulateTransaction3.apply(this, arguments);
                }
                return _simulateTransaction;
            }()
        },
        {
            key: "prepareTransaction",
            value: function() {
                var _prepareTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee19(tx) {
                    var simResponse;
                    return _regeneratorRuntime().wrap(function _callee19$(_context19) {
                        while(1)switch(_context19.prev = _context19.next){
                            case 0:
                                _context19.next = 2;
                                return this.simulateTransaction(tx);
                            case 2:
                                simResponse = _context19.sent;
                                if (!_api.Api.isSimulationError(simResponse)) {
                                    _context19.next = 5;
                                    break;
                                }
                                throw new Error(simResponse.error);
                            case 5:
                                return _context19.abrupt("return", (0, _transaction.assembleTransaction)(tx, simResponse).build());
                            case 6:
                            case "end":
                                return _context19.stop();
                        }
                    }, _callee19, this);
                }));
                function prepareTransaction(_x18) {
                    return _prepareTransaction.apply(this, arguments);
                }
                return prepareTransaction;
            }()
        },
        {
            key: "sendTransaction",
            value: function() {
                var _sendTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee20(transaction) {
                    return _regeneratorRuntime().wrap(function _callee20$(_context20) {
                        while(1)switch(_context20.prev = _context20.next){
                            case 0:
                                return _context20.abrupt("return", this._sendTransaction(transaction).then(_parsers.parseRawSendTransaction));
                            case 1:
                            case "end":
                                return _context20.stop();
                        }
                    }, _callee20, this);
                }));
                function sendTransaction(_x19) {
                    return _sendTransaction2.apply(this, arguments);
                }
                return sendTransaction;
            }()
        },
        {
            key: "_sendTransaction",
            value: function() {
                var _sendTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee21(transaction) {
                    return _regeneratorRuntime().wrap(function _callee21$(_context21) {
                        while(1)switch(_context21.prev = _context21.next){
                            case 0:
                                return _context21.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'sendTransaction', {
                                    transaction: transaction.toXDR()
                                }));
                            case 1:
                            case "end":
                                return _context21.stop();
                        }
                    }, _callee21, this);
                }));
                function _sendTransaction(_x20) {
                    return _sendTransaction3.apply(this, arguments);
                }
                return _sendTransaction;
            }()
        },
        {
            key: "requestAirdrop",
            value: function() {
                var _requestAirdrop = _asyncToGenerator(_regeneratorRuntime().mark(function _callee22(address, friendbotUrl) {
                    var account, response, meta, txMeta, sequence, _error$response, _error$response$detai;
                    return _regeneratorRuntime().wrap(function _callee22$(_context22) {
                        while(1)switch(_context22.prev = _context22.next){
                            case 0:
                                account = typeof address === 'string' ? address : address.accountId();
                                _context22.t0 = friendbotUrl;
                                if (_context22.t0) {
                                    _context22.next = 6;
                                    break;
                                }
                                _context22.next = 5;
                                return this.getNetwork();
                            case 5:
                                _context22.t0 = _context22.sent.friendbotUrl;
                            case 6:
                                friendbotUrl = _context22.t0;
                                if (friendbotUrl) {
                                    _context22.next = 9;
                                    break;
                                }
                                throw new Error('No friendbot URL configured for current network');
                            case 9:
                                _context22.prev = 9;
                                _context22.next = 12;
                                return _axios.default.post("".concat(friendbotUrl, "?addr=").concat(encodeURIComponent(account)));
                            case 12:
                                response = _context22.sent;
                                if (response.data.result_meta_xdr) {
                                    _context22.next = 22;
                                    break;
                                }
                                _context22.next = 16;
                                return this.getTransaction(response.data.hash);
                            case 16:
                                txMeta = _context22.sent;
                                if (!(txMeta.status !== _api.Api.GetTransactionStatus.SUCCESS)) {
                                    _context22.next = 19;
                                    break;
                                }
                                throw new Error("Funding account ".concat(address, " failed"));
                            case 19:
                                meta = txMeta.resultMetaXdr;
                                _context22.next = 23;
                                break;
                            case 22:
                                meta = _stellarBase.xdr.TransactionMeta.fromXDR(response.data.result_meta_xdr, 'base64');
                            case 23:
                                sequence = findCreatedAccountSequenceInTransactionMeta(meta);
                                return _context22.abrupt("return", new _stellarBase.Account(account, sequence));
                            case 27:
                                _context22.prev = 27;
                                _context22.t1 = _context22["catch"](9);
                                if (!(((_error$response = _context22.t1.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400)) {
                                    _context22.next = 32;
                                    break;
                                }
                                if (!((_error$response$detai = _context22.t1.response.detail) !== null && _error$response$detai !== void 0 && _error$response$detai.includes('createAccountAlreadyExist'))) {
                                    _context22.next = 32;
                                    break;
                                }
                                return _context22.abrupt("return", this.getAccount(account));
                            case 32:
                                throw _context22.t1;
                            case 33:
                            case "end":
                                return _context22.stop();
                        }
                    }, _callee22, this, [
                        [
                            9,
                            27
                        ]
                    ]);
                }));
                function requestAirdrop(_x21, _x22) {
                    return _requestAirdrop.apply(this, arguments);
                }
                return requestAirdrop;
            }()
        },
        {
            key: "getFeeStats",
            value: function() {
                var _getFeeStats = _asyncToGenerator(_regeneratorRuntime().mark(function _callee23() {
                    return _regeneratorRuntime().wrap(function _callee23$(_context23) {
                        while(1)switch(_context23.prev = _context23.next){
                            case 0:
                                return _context23.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getFeeStats'));
                            case 1:
                            case "end":
                                return _context23.stop();
                        }
                    }, _callee23, this);
                }));
                function getFeeStats() {
                    return _getFeeStats.apply(this, arguments);
                }
                return getFeeStats;
            }()
        },
        {
            key: "getVersionInfo",
            value: function() {
                var _getVersionInfo = _asyncToGenerator(_regeneratorRuntime().mark(function _callee24() {
                    return _regeneratorRuntime().wrap(function _callee24$(_context24) {
                        while(1)switch(_context24.prev = _context24.next){
                            case 0:
                                return _context24.abrupt("return", jsonrpc.postObject(this.serverURL.toString(), 'getVersionInfo'));
                            case 1:
                            case "end":
                                return _context24.stop();
                        }
                    }, _callee24, this);
                }));
                function getVersionInfo() {
                    return _getVersionInfo.apply(this, arguments);
                }
                return getVersionInfo;
            }()
        },
        {
            key: "getSACBalance",
            value: function() {
                var _getSACBalance = _asyncToGenerator(_regeneratorRuntime().mark(function _callee25(contractId, sac, networkPassphrase) {
                    var passphrase, sacId, key, ledgerKey, response, _response$entries$2, lastModifiedLedgerSeq, liveUntilLedgerSeq, val, entry;
                    return _regeneratorRuntime().wrap(function _callee25$(_context25) {
                        while(1)switch(_context25.prev = _context25.next){
                            case 0:
                                if (_stellarBase.StrKey.isValidContract(contractId)) {
                                    _context25.next = 2;
                                    break;
                                }
                                throw new TypeError("expected contract ID, got ".concat(contractId));
                            case 2:
                                if (!(networkPassphrase !== null && networkPassphrase !== void 0)) {
                                    _context25.next = 6;
                                    break;
                                }
                                _context25.t0 = networkPassphrase;
                                _context25.next = 9;
                                break;
                            case 6:
                                _context25.next = 8;
                                return this.getNetwork().then(function(n) {
                                    return n.passphrase;
                                });
                            case 8:
                                _context25.t0 = _context25.sent;
                            case 9:
                                passphrase = _context25.t0;
                                sacId = sac.contractId(passphrase);
                                key = _stellarBase.xdr.ScVal.scvVec([
                                    (0, _stellarBase.nativeToScVal)("Balance", {
                                        type: "symbol"
                                    }),
                                    (0, _stellarBase.nativeToScVal)(contractId, {
                                        type: "address"
                                    })
                                ]);
                                ledgerKey = _stellarBase.xdr.LedgerKey.contractData(new _stellarBase.xdr.LedgerKeyContractData({
                                    contract: new _stellarBase.Address(sacId).toScAddress(),
                                    durability: _stellarBase.xdr.ContractDataDurability.persistent(),
                                    key: key
                                }));
                                _context25.next = 15;
                                return this.getLedgerEntries(ledgerKey);
                            case 15:
                                response = _context25.sent;
                                if (!(response.entries.length === 0)) {
                                    _context25.next = 18;
                                    break;
                                }
                                return _context25.abrupt("return", {
                                    latestLedger: response.latestLedger
                                });
                            case 18:
                                _response$entries$2 = response.entries[0], lastModifiedLedgerSeq = _response$entries$2.lastModifiedLedgerSeq, liveUntilLedgerSeq = _response$entries$2.liveUntilLedgerSeq, val = _response$entries$2.val;
                                if (!(val.switch().value !== _stellarBase.xdr.LedgerEntryType.contractData().value)) {
                                    _context25.next = 21;
                                    break;
                                }
                                return _context25.abrupt("return", {
                                    latestLedger: response.latestLedger
                                });
                            case 21:
                                entry = (0, _stellarBase.scValToNative)(val.contractData().val());
                                return _context25.abrupt("return", {
                                    latestLedger: response.latestLedger,
                                    balanceEntry: {
                                        liveUntilLedgerSeq: liveUntilLedgerSeq,
                                        lastModifiedLedgerSeq: lastModifiedLedgerSeq,
                                        amount: entry.amount.toString(),
                                        authorized: entry.authorized,
                                        clawback: entry.clawback
                                    }
                                });
                            case 23:
                            case "end":
                                return _context25.stop();
                        }
                    }, _callee25, this);
                }));
                function getSACBalance(_x23, _x24, _x25) {
                    return _getSACBalance.apply(this, arguments);
                }
                return getSACBalance;
            }()
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/rpc/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    Server: true,
    BasicSleepStrategy: true,
    LinearSleepStrategy: true,
    Durability: true,
    AxiosClient: true,
    parseRawSimulation: true,
    parseRawEvents: true
};
Object.defineProperty(exports, "AxiosClient", {
    enumerable: true,
    get: function get() {
        return _axios.default;
    }
});
Object.defineProperty(exports, "BasicSleepStrategy", {
    enumerable: true,
    get: function get() {
        return _server.BasicSleepStrategy;
    }
});
Object.defineProperty(exports, "Durability", {
    enumerable: true,
    get: function get() {
        return _server.Durability;
    }
});
Object.defineProperty(exports, "LinearSleepStrategy", {
    enumerable: true,
    get: function get() {
        return _server.LinearSleepStrategy;
    }
});
Object.defineProperty(exports, "Server", {
    enumerable: true,
    get: function get() {
        return _server.RpcServer;
    }
});
exports.default = void 0;
Object.defineProperty(exports, "parseRawEvents", {
    enumerable: true,
    get: function get() {
        return _parsers.parseRawEvents;
    }
});
Object.defineProperty(exports, "parseRawSimulation", {
    enumerable: true,
    get: function get() {
        return _parsers.parseRawSimulation;
    }
});
var _api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/api.js [app-ssr] (ecmascript)");
Object.keys(_api).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _api[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _api[key];
        }
    });
});
var _server = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/server.js [app-ssr] (ecmascript)");
var _axios = _interopRequireDefault(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/axios.js [app-ssr] (ecmascript)"));
var _parsers = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/parsers.js [app-ssr] (ecmascript)");
var _transaction = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/transaction.js [app-ssr] (ecmascript)");
Object.keys(_transaction).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _transaction[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _transaction[key];
        }
    });
});
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var _default = exports.default = module.exports;
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/rust_result.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Ok = exports.Err = void 0;
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var Ok = exports.Ok = function() {
    function Ok(value) {
        _classCallCheck(this, Ok);
        this.value = value;
    }
    return _createClass(Ok, [
        {
            key: "unwrapErr",
            value: function unwrapErr() {
                throw new Error("No error");
            }
        },
        {
            key: "unwrap",
            value: function unwrap() {
                return this.value;
            }
        },
        {
            key: "isOk",
            value: function isOk() {
                return true;
            }
        },
        {
            key: "isErr",
            value: function isErr() {
                return false;
            }
        }
    ]);
}();
var Err = exports.Err = function() {
    function Err(error) {
        _classCallCheck(this, Err);
        this.error = error;
    }
    return _createClass(Err, [
        {
            key: "unwrapErr",
            value: function unwrapErr() {
                return this.error;
            }
        },
        {
            key: "unwrap",
            value: function unwrap() {
                throw new Error(this.error.message);
            }
        },
        {
            key: "isOk",
            value: function isOk() {
                return false;
            }
        },
        {
            key: "isErr",
            value: function isErr() {
                return true;
            }
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/types.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NULL_ACCOUNT = exports.DEFAULT_TIMEOUT = void 0;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var DEFAULT_TIMEOUT = exports.DEFAULT_TIMEOUT = 5 * 60;
var NULL_ACCOUNT = exports.NULL_ACCOUNT = "GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF";
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/utils.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.contractErrorPattern = void 0;
exports.getAccount = getAccount;
exports.implementsToString = implementsToString;
exports.processSpecEntryStream = processSpecEntryStream;
exports.withExponentialBackoff = withExponentialBackoff;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _types = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/types.js [app-ssr] (ecmascript)");
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function withExponentialBackoff(_x, _x2, _x3) {
    return _withExponentialBackoff.apply(this, arguments);
}
function _withExponentialBackoff() {
    _withExponentialBackoff = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(fn, keepWaitingIf, timeoutInSeconds) {
        var exponentialFactor, verbose, attempts, count, waitUntil, waitTime, totalWaitTime, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
            while(1)switch(_context.prev = _context.next){
                case 0:
                    exponentialFactor = _args.length > 3 && _args[3] !== undefined ? _args[3] : 1.5;
                    verbose = _args.length > 4 && _args[4] !== undefined ? _args[4] : false;
                    attempts = [];
                    count = 0;
                    _context.t0 = attempts;
                    _context.next = 7;
                    return fn();
                case 7:
                    _context.t1 = _context.sent;
                    _context.t0.push.call(_context.t0, _context.t1);
                    if (keepWaitingIf(attempts[attempts.length - 1])) {
                        _context.next = 11;
                        break;
                    }
                    return _context.abrupt("return", attempts);
                case 11:
                    waitUntil = new Date(Date.now() + timeoutInSeconds * 1000).valueOf();
                    waitTime = 1000;
                    totalWaitTime = waitTime;
                case 14:
                    if (!(Date.now() < waitUntil && keepWaitingIf(attempts[attempts.length - 1]))) {
                        _context.next = 30;
                        break;
                    }
                    count += 1;
                    if (verbose) {
                        console.info("Waiting ".concat(waitTime, "ms before trying again (bringing the total wait time to ").concat(totalWaitTime, "ms so far, of total ").concat(timeoutInSeconds * 1000, "ms)"));
                    }
                    _context.next = 19;
                    return new Promise(function(res) {
                        return setTimeout(res, waitTime);
                    });
                case 19:
                    waitTime *= exponentialFactor;
                    if (new Date(Date.now() + waitTime).valueOf() > waitUntil) {
                        waitTime = waitUntil - Date.now();
                        if (verbose) {
                            console.info("was gonna wait too long; new waitTime: ".concat(waitTime, "ms"));
                        }
                    }
                    totalWaitTime = waitTime + totalWaitTime;
                    _context.t2 = attempts;
                    _context.next = 25;
                    return fn(attempts[attempts.length - 1]);
                case 25:
                    _context.t3 = _context.sent;
                    _context.t2.push.call(_context.t2, _context.t3);
                    if (verbose && keepWaitingIf(attempts[attempts.length - 1])) {
                        console.info("".concat(count, ". Called ").concat(fn, "; ").concat(attempts.length, " prev attempts. Most recent: ").concat(JSON.stringify(attempts[attempts.length - 1], null, 2)));
                    }
                    _context.next = 14;
                    break;
                case 30:
                    return _context.abrupt("return", attempts);
                case 31:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return _withExponentialBackoff.apply(this, arguments);
}
var contractErrorPattern = exports.contractErrorPattern = /Error\(Contract, #(\d+)\)/;
function implementsToString(obj) {
    return _typeof(obj) === "object" && obj !== null && "toString" in obj;
}
function processSpecEntryStream(buffer) {
    var reader = new _stellarBase.cereal.XdrReader(buffer);
    var res = [];
    while(!reader.eof){
        res.push(_stellarBase.xdr.ScSpecEntry.read(reader));
    }
    return res;
}
function getAccount(_x4, _x5) {
    return _getAccount.apply(this, arguments);
}
function _getAccount() {
    _getAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(options, server) {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while(1)switch(_context2.prev = _context2.next){
                case 0:
                    return _context2.abrupt("return", options.publicKey ? server.getAccount(options.publicKey) : new _stellarBase.Account(_types.NULL_ACCOUNT, "0"));
                case 1:
                case "end":
                    return _context2.stop();
            }
        }, _callee2);
    }));
    return _getAccount.apply(this, arguments);
}
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/sent_transaction.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SentTransaction = void 0;
var _rpc = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/index.js [app-ssr] (ecmascript)");
var _api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/api.js [app-ssr] (ecmascript)");
var _utils = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/utils.js [app-ssr] (ecmascript)");
var _types = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/types.js [app-ssr] (ecmascript)");
var _SentTransaction;
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _wrapNativeSuper(t) {
    var r = "function" == typeof Map ? new Map() : void 0;
    return _wrapNativeSuper = function _wrapNativeSuper(t) {
        if (null === t || !_isNativeFunction(t)) return t;
        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r) {
            if (r.has(t)) return r.get(t);
            r.set(t, Wrapper);
        }
        function Wrapper() {
            return _construct(t, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), _setPrototypeOf(Wrapper, t);
    }, _wrapNativeSuper(t);
}
function _construct(t, e, r) {
    if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
    var o = [
        null
    ];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o))();
    return r && _setPrototypeOf(p, r.prototype), p;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _isNativeFunction(t) {
    try {
        return -1 !== Function.toString.call(t).indexOf("[native code]");
    } catch (n) {
        return "function" == typeof t;
    }
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var SentTransaction = exports.SentTransaction = function() {
    function SentTransaction(assembled) {
        var _this = this, _this$assembled$optio2;
        _classCallCheck(this, SentTransaction);
        _defineProperty(this, "send", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
            var _this$assembled$optio;
            var hash, timeoutInSeconds;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
                while(1)switch(_context.prev = _context.next){
                    case 0:
                        _context.next = 2;
                        return _this.server.sendTransaction(_this.assembled.signed);
                    case 2:
                        _this.sendTransactionResponse = _context.sent;
                        if (!(_this.sendTransactionResponse.status !== "PENDING")) {
                            _context.next = 5;
                            break;
                        }
                        throw new SentTransaction.Errors.SendFailed("Sending the transaction to the network failed!\n".concat(JSON.stringify(_this.sendTransactionResponse, null, 2)));
                    case 5:
                        hash = _this.sendTransactionResponse.hash;
                        timeoutInSeconds = (_this$assembled$optio = _this.assembled.options.timeoutInSeconds) !== null && _this$assembled$optio !== void 0 ? _this$assembled$optio : _types.DEFAULT_TIMEOUT;
                        _context.next = 9;
                        return (0, _utils.withExponentialBackoff)(function() {
                            return _this.server.getTransaction(hash);
                        }, function(resp) {
                            return resp.status === _api.Api.GetTransactionStatus.NOT_FOUND;
                        }, timeoutInSeconds);
                    case 9:
                        _this.getTransactionResponseAll = _context.sent;
                        _this.getTransactionResponse = _this.getTransactionResponseAll[_this.getTransactionResponseAll.length - 1];
                        if (!(_this.getTransactionResponse.status === _api.Api.GetTransactionStatus.NOT_FOUND)) {
                            _context.next = 13;
                            break;
                        }
                        throw new SentTransaction.Errors.TransactionStillPending("Waited ".concat(timeoutInSeconds, " seconds for transaction to complete, but it did not. ") + "Returning anyway. Check the transaction status manually. " + "Sent transaction: ".concat(JSON.stringify(_this.sendTransactionResponse, null, 2), "\n") + "All attempts to get the result: ".concat(JSON.stringify(_this.getTransactionResponseAll, null, 2)));
                    case 13:
                        return _context.abrupt("return", _this);
                    case 14:
                    case "end":
                        return _context.stop();
                }
            }, _callee);
        })));
        this.assembled = assembled;
        this.server = new _rpc.Server(this.assembled.options.rpcUrl, {
            allowHttp: (_this$assembled$optio2 = this.assembled.options.allowHttp) !== null && _this$assembled$optio2 !== void 0 ? _this$assembled$optio2 : false
        });
    }
    return _createClass(SentTransaction, [
        {
            key: "result",
            get: function get() {
                if ("getTransactionResponse" in this && this.getTransactionResponse) {
                    if ("returnValue" in this.getTransactionResponse) {
                        return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);
                    }
                    throw new Error("Transaction failed! Cannot parse result.");
                }
                if (this.sendTransactionResponse) {
                    var _this$sendTransaction;
                    var errorResult = (_this$sendTransaction = this.sendTransactionResponse.errorResult) === null || _this$sendTransaction === void 0 ? void 0 : _this$sendTransaction.result();
                    if (errorResult) {
                        throw new SentTransaction.Errors.SendFailed("Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: ".concat(errorResult));
                    }
                    throw new SentTransaction.Errors.SendResultOnly("Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`");
                }
                throw new Error("Sending transaction failed: ".concat(JSON.stringify(this.assembled.signed)));
            }
        }
    ]);
}();
_SentTransaction = SentTransaction;
_defineProperty(SentTransaction, "Errors", {
    SendFailed: function(_Error) {
        function SendFailedError() {
            _classCallCheck(this, SendFailedError);
            return _callSuper(this, SendFailedError, arguments);
        }
        _inherits(SendFailedError, _Error);
        return _createClass(SendFailedError);
    }(_wrapNativeSuper(Error)),
    SendResultOnly: function(_Error2) {
        function SendResultOnlyError() {
            _classCallCheck(this, SendResultOnlyError);
            return _callSuper(this, SendResultOnlyError, arguments);
        }
        _inherits(SendResultOnlyError, _Error2);
        return _createClass(SendResultOnlyError);
    }(_wrapNativeSuper(Error)),
    TransactionStillPending: function(_Error3) {
        function TransactionStillPendingError() {
            _classCallCheck(this, TransactionStillPendingError);
            return _callSuper(this, TransactionStillPendingError, arguments);
        }
        _inherits(TransactionStillPendingError, _Error3);
        return _createClass(TransactionStillPendingError);
    }(_wrapNativeSuper(Error))
});
_defineProperty(SentTransaction, "init", function() {
    var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(assembled) {
        var tx, sent;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while(1)switch(_context2.prev = _context2.next){
                case 0:
                    tx = new _SentTransaction(assembled);
                    _context2.next = 3;
                    return tx.send();
                case 3:
                    sent = _context2.sent;
                    return _context2.abrupt("return", sent);
                case 5:
                case "end":
                    return _context2.stop();
            }
        }, _callee2);
    }));
    return function(_x) {
        return _ref2.apply(this, arguments);
    };
}());
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/assembled_transaction.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AssembledTransaction = void 0;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _rpc = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/index.js [app-ssr] (ecmascript)");
var _api = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/api.js [app-ssr] (ecmascript)");
var _transaction = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/transaction.js [app-ssr] (ecmascript)");
var _rust_result = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/rust_result.js [app-ssr] (ecmascript)");
var _utils = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/utils.js [app-ssr] (ecmascript)");
var _types = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/types.js [app-ssr] (ecmascript)");
var _sent_transaction = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/sent_transaction.js [app-ssr] (ecmascript)");
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(t);
}
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && _setPrototypeOf(t, e);
}
function _wrapNativeSuper(t) {
    var r = "function" == typeof Map ? new Map() : void 0;
    return _wrapNativeSuper = function _wrapNativeSuper(t) {
        if (null === t || !_isNativeFunction(t)) return t;
        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r) {
            if (r.has(t)) return r.get(t);
            r.set(t, Wrapper);
        }
        function Wrapper() {
            return _construct(t, arguments, _getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), _setPrototypeOf(Wrapper, t);
    }, _wrapNativeSuper(t);
}
function _construct(t, e, r) {
    if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
    var o = [
        null
    ];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o))();
    return r && _setPrototypeOf(p, r.prototype), p;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _isNativeFunction(t) {
    try {
        return -1 !== Function.toString.call(t).indexOf("[native code]");
    } catch (n) {
        return "function" == typeof t;
    }
}
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}
function _getPrototypeOf(t) {
    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, _getPrototypeOf(t);
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _slicedToArray(r, e) {
    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
function _createForOfIteratorHelper(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
            t && (r = t);
            var _n = 0, F = function F() {};
            return {
                s: F,
                n: function n() {
                    return _n >= r.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: r[_n++]
                    };
                },
                e: function e(r) {
                    throw r;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = !0, u = !1;
    return {
        s: function s() {
            t = t.call(r);
        },
        n: function n() {
            var r = t.next();
            return a = r.done, r;
        },
        e: function e(r) {
            u = !0, o = r;
        },
        f: function f() {
            try {
                a || null == t.return || t.return();
            } finally{
                if (u) throw o;
            }
        }
    };
}
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function _toConsumableArray(r) {
    return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _iterableToArray(r) {
    if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles(r) {
    if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var AssembledTransaction = exports.AssembledTransaction = function() {
    function AssembledTransaction(options) {
        var _this = this, _this$options$simulat, _this$options$allowHt;
        _classCallCheck(this, AssembledTransaction);
        _defineProperty(this, "simulate", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
            var _ref2, restore, account, result, _this$options$fee, _this$options$args, _this$options$timeout, contract, _args = arguments;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
                while(1)switch(_context.prev = _context.next){
                    case 0:
                        _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, restore = _ref2.restore;
                        if (_this.built) {
                            _context.next = 5;
                            break;
                        }
                        if (_this.raw) {
                            _context.next = 4;
                            break;
                        }
                        throw new Error("Transaction has not yet been assembled; " + "call `AssembledTransaction.build` first.");
                    case 4:
                        _this.built = _this.raw.build();
                    case 5:
                        restore = restore !== null && restore !== void 0 ? restore : _this.options.restore;
                        delete _this.simulationResult;
                        delete _this.simulationTransactionData;
                        _context.next = 10;
                        return _this.server.simulateTransaction(_this.built);
                    case 10:
                        _this.simulation = _context.sent;
                        if (!(restore && _api.Api.isSimulationRestore(_this.simulation))) {
                            _context.next = 25;
                            break;
                        }
                        _context.next = 14;
                        return (0, _utils.getAccount)(_this.options, _this.server);
                    case 14:
                        account = _context.sent;
                        _context.next = 17;
                        return _this.restoreFootprint(_this.simulation.restorePreamble, account);
                    case 17:
                        result = _context.sent;
                        if (!(result.status === _api.Api.GetTransactionStatus.SUCCESS)) {
                            _context.next = 24;
                            break;
                        }
                        contract = new _stellarBase.Contract(_this.options.contractId);
                        _this.raw = new _stellarBase.TransactionBuilder(account, {
                            fee: (_this$options$fee = _this.options.fee) !== null && _this$options$fee !== void 0 ? _this$options$fee : _stellarBase.BASE_FEE,
                            networkPassphrase: _this.options.networkPassphrase
                        }).addOperation(contract.call.apply(contract, [
                            _this.options.method
                        ].concat(_toConsumableArray((_this$options$args = _this.options.args) !== null && _this$options$args !== void 0 ? _this$options$args : [])))).setTimeout((_this$options$timeout = _this.options.timeoutInSeconds) !== null && _this$options$timeout !== void 0 ? _this$options$timeout : _types.DEFAULT_TIMEOUT);
                        _context.next = 23;
                        return _this.simulate();
                    case 23:
                        return _context.abrupt("return", _this);
                    case 24:
                        throw new AssembledTransaction.Errors.RestorationFailure("Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:\n".concat(JSON.stringify(result)));
                    case 25:
                        if (_api.Api.isSimulationSuccess(_this.simulation)) {
                            _this.built = (0, _transaction.assembleTransaction)(_this.built, _this.simulation).build();
                        }
                        return _context.abrupt("return", _this);
                    case 27:
                    case "end":
                        return _context.stop();
                }
            }, _callee);
        })));
        _defineProperty(this, "sign", _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
            var _this$options$timeout2;
            var _ref4, _ref4$force, force, _ref4$signTransaction, signTransaction, sigsNeeded, timeoutInSeconds, signOpts, _yield$signTransactio, signature, error, _args2 = arguments;
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                while(1)switch(_context2.prev = _context2.next){
                    case 0:
                        _ref4 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, _ref4$force = _ref4.force, force = _ref4$force === void 0 ? false : _ref4$force, _ref4$signTransaction = _ref4.signTransaction, signTransaction = _ref4$signTransaction === void 0 ? _this.options.signTransaction : _ref4$signTransaction;
                        if (_this.built) {
                            _context2.next = 3;
                            break;
                        }
                        throw new Error("Transaction has not yet been simulated");
                    case 3:
                        if (!(!force && _this.isReadCall)) {
                            _context2.next = 5;
                            break;
                        }
                        throw new AssembledTransaction.Errors.NoSignatureNeeded("This is a read call. It requires no signature or sending. " + "Use `force: true` to sign and send anyway.");
                    case 5:
                        if (signTransaction) {
                            _context2.next = 7;
                            break;
                        }
                        throw new AssembledTransaction.Errors.NoSigner("You must provide a signTransaction function, either when calling " + "`signAndSend` or when initializing your Client");
                    case 7:
                        sigsNeeded = _this.needsNonInvokerSigningBy().filter(function(id) {
                            return !id.startsWith('C');
                        });
                        if (!sigsNeeded.length) {
                            _context2.next = 10;
                            break;
                        }
                        throw new AssembledTransaction.Errors.NeedsMoreSignatures("Transaction requires signatures from ".concat(sigsNeeded, ". ") + "See `needsNonInvokerSigningBy` for details.");
                    case 10:
                        timeoutInSeconds = (_this$options$timeout2 = _this.options.timeoutInSeconds) !== null && _this$options$timeout2 !== void 0 ? _this$options$timeout2 : _types.DEFAULT_TIMEOUT;
                        _this.built = _stellarBase.TransactionBuilder.cloneFrom(_this.built, {
                            fee: _this.built.fee,
                            timebounds: undefined,
                            sorobanData: _this.simulationData.transactionData
                        }).setTimeout(timeoutInSeconds).build();
                        signOpts = {
                            networkPassphrase: _this.options.networkPassphrase
                        };
                        if (_this.options.address) signOpts.address = _this.options.address;
                        if (_this.options.submit !== undefined) signOpts.submit = _this.options.submit;
                        if (_this.options.submitUrl) signOpts.submitUrl = _this.options.submitUrl;
                        _context2.next = 18;
                        return signTransaction(_this.built.toXDR(), signOpts);
                    case 18:
                        _yield$signTransactio = _context2.sent;
                        signature = _yield$signTransactio.signedTxXdr;
                        error = _yield$signTransactio.error;
                        _this.handleWalletError(error);
                        _this.signed = _stellarBase.TransactionBuilder.fromXDR(signature, _this.options.networkPassphrase);
                    case 23:
                    case "end":
                        return _context2.stop();
                }
            }, _callee2);
        })));
        _defineProperty(this, "signAndSend", _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
            var _ref6, _ref6$force, force, _ref6$signTransaction, signTransaction, originalSubmit, _args3 = arguments;
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                while(1)switch(_context3.prev = _context3.next){
                    case 0:
                        _ref6 = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {}, _ref6$force = _ref6.force, force = _ref6$force === void 0 ? false : _ref6$force, _ref6$signTransaction = _ref6.signTransaction, signTransaction = _ref6$signTransaction === void 0 ? _this.options.signTransaction : _ref6$signTransaction;
                        if (_this.signed) {
                            _context3.next = 10;
                            break;
                        }
                        originalSubmit = _this.options.submit;
                        if (_this.options.submit) {
                            _this.options.submit = false;
                        }
                        _context3.prev = 4;
                        _context3.next = 7;
                        return _this.sign({
                            force: force,
                            signTransaction: signTransaction
                        });
                    case 7:
                        _context3.prev = 7;
                        _this.options.submit = originalSubmit;
                        return _context3.finish(7);
                    case 10:
                        return _context3.abrupt("return", _this.send());
                    case 11:
                    case "end":
                        return _context3.stop();
                }
            }, _callee3, null, [
                [
                    4,
                    ,
                    7,
                    10
                ]
            ]);
        })));
        _defineProperty(this, "needsNonInvokerSigningBy", function() {
            var _rawInvokeHostFunctio;
            var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _ref7$includeAlreadyS = _ref7.includeAlreadySigned, includeAlreadySigned = _ref7$includeAlreadyS === void 0 ? false : _ref7$includeAlreadyS;
            if (!_this.built) {
                throw new Error("Transaction has not yet been simulated");
            }
            if (!("operations" in _this.built)) {
                throw new Error("Unexpected Transaction type; no operations: ".concat(JSON.stringify(_this.built)));
            }
            var rawInvokeHostFunctionOp = _this.built.operations[0];
            return _toConsumableArray(new Set(((_rawInvokeHostFunctio = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio !== void 0 ? _rawInvokeHostFunctio : []).filter(function(entry) {
                return entry.credentials().switch() === _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (includeAlreadySigned || entry.credentials().address().signature().switch().name === "scvVoid");
            }).map(function(entry) {
                return _stellarBase.Address.fromScAddress(entry.credentials().address().address()).toString();
            })));
        });
        _defineProperty(this, "signAuthEntries", _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {
            var _rawInvokeHostFunctio2;
            var _ref9, _ref9$expiration, expiration, _ref9$signAuthEntry, signAuthEntry, _ref9$address, address, _ref9$authorizeEntry, authorizeEntry, needsNonInvokerSigningBy, rawInvokeHostFunctionOp, authEntries, _iterator, _step, _loop, _ret, _args7 = arguments;
            return _regeneratorRuntime().wrap(function _callee6$(_context7) {
                while(1)switch(_context7.prev = _context7.next){
                    case 0:
                        _ref9 = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {}, _ref9$expiration = _ref9.expiration, expiration = _ref9$expiration === void 0 ? _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {
                            return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                                while(1)switch(_context4.prev = _context4.next){
                                    case 0:
                                        _context4.next = 2;
                                        return _this.server.getLatestLedger();
                                    case 2:
                                        _context4.t0 = _context4.sent.sequence;
                                        return _context4.abrupt("return", _context4.t0 + 100);
                                    case 4:
                                    case "end":
                                        return _context4.stop();
                                }
                            }, _callee4);
                        }))() : _ref9$expiration, _ref9$signAuthEntry = _ref9.signAuthEntry, signAuthEntry = _ref9$signAuthEntry === void 0 ? _this.options.signAuthEntry : _ref9$signAuthEntry, _ref9$address = _ref9.address, address = _ref9$address === void 0 ? _this.options.publicKey : _ref9$address, _ref9$authorizeEntry = _ref9.authorizeEntry, authorizeEntry = _ref9$authorizeEntry === void 0 ? _stellarBase.authorizeEntry : _ref9$authorizeEntry;
                        if (_this.built) {
                            _context7.next = 3;
                            break;
                        }
                        throw new Error("Transaction has not yet been assembled or simulated");
                    case 3:
                        if (!(authorizeEntry === _stellarBase.authorizeEntry)) {
                            _context7.next = 11;
                            break;
                        }
                        needsNonInvokerSigningBy = _this.needsNonInvokerSigningBy();
                        if (!(needsNonInvokerSigningBy.length === 0)) {
                            _context7.next = 7;
                            break;
                        }
                        throw new AssembledTransaction.Errors.NoUnsignedNonInvokerAuthEntries("No unsigned non-invoker auth entries; maybe you already signed?");
                    case 7:
                        if (!(needsNonInvokerSigningBy.indexOf(address !== null && address !== void 0 ? address : "") === -1)) {
                            _context7.next = 9;
                            break;
                        }
                        throw new AssembledTransaction.Errors.NoSignatureNeeded("No auth entries for public key \"".concat(address, "\""));
                    case 9:
                        if (signAuthEntry) {
                            _context7.next = 11;
                            break;
                        }
                        throw new AssembledTransaction.Errors.NoSigner("You must provide `signAuthEntry` or a custom `authorizeEntry`");
                    case 11:
                        rawInvokeHostFunctionOp = _this.built.operations[0];
                        authEntries = (_rawInvokeHostFunctio2 = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio2 !== void 0 ? _rawInvokeHostFunctio2 : [];
                        _iterator = _createForOfIteratorHelper(authEntries.entries());
                        _context7.prev = 14;
                        _loop = _regeneratorRuntime().mark(function _loop() {
                            var _step$value, i, entry, credentials, authEntryAddress, sign;
                            return _regeneratorRuntime().wrap(function _loop$(_context6) {
                                while(1)switch(_context6.prev = _context6.next){
                                    case 0:
                                        _step$value = _slicedToArray(_step.value, 2), i = _step$value[0], entry = _step$value[1];
                                        credentials = _stellarBase.xdr.SorobanCredentials.fromXDR(entry.credentials().toXDR());
                                        if (!(credentials.switch() !== _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress())) {
                                            _context6.next = 4;
                                            break;
                                        }
                                        return _context6.abrupt("return", 0);
                                    case 4:
                                        authEntryAddress = _stellarBase.Address.fromScAddress(credentials.address().address()).toString();
                                        if (!(authEntryAddress !== address)) {
                                            _context6.next = 7;
                                            break;
                                        }
                                        return _context6.abrupt("return", 0);
                                    case 7:
                                        sign = signAuthEntry !== null && signAuthEntry !== void 0 ? signAuthEntry : Promise.resolve;
                                        _context6.t0 = authorizeEntry;
                                        _context6.t1 = entry;
                                        _context6.t2 = function() {
                                            var _ref11 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(preimage) {
                                                var _yield$sign, signedAuthEntry, error;
                                                return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                                                    while(1)switch(_context5.prev = _context5.next){
                                                        case 0:
                                                            _context5.next = 2;
                                                            return sign(preimage.toXDR("base64"), {
                                                                address: address
                                                            });
                                                        case 2:
                                                            _yield$sign = _context5.sent;
                                                            signedAuthEntry = _yield$sign.signedAuthEntry;
                                                            error = _yield$sign.error;
                                                            _this.handleWalletError(error);
                                                            return _context5.abrupt("return", Buffer.from(signedAuthEntry, "base64"));
                                                        case 7:
                                                        case "end":
                                                            return _context5.stop();
                                                    }
                                                }, _callee5);
                                            }));
                                            return function(_x) {
                                                return _ref11.apply(this, arguments);
                                            };
                                        }();
                                        _context6.next = 13;
                                        return expiration;
                                    case 13:
                                        _context6.t3 = _context6.sent;
                                        _context6.t4 = _this.options.networkPassphrase;
                                        _context6.next = 17;
                                        return (0, _context6.t0)(_context6.t1, _context6.t2, _context6.t3, _context6.t4);
                                    case 17:
                                        authEntries[i] = _context6.sent;
                                    case 18:
                                    case "end":
                                        return _context6.stop();
                                }
                            }, _loop);
                        });
                        _iterator.s();
                    case 17:
                        if ((_step = _iterator.n()).done) {
                            _context7.next = 24;
                            break;
                        }
                        return _context7.delegateYield(_loop(), "t0", 19);
                    case 19:
                        _ret = _context7.t0;
                        if (!(_ret === 0)) {
                            _context7.next = 22;
                            break;
                        }
                        return _context7.abrupt("continue", 22);
                    case 22:
                        _context7.next = 17;
                        break;
                    case 24:
                        _context7.next = 29;
                        break;
                    case 26:
                        _context7.prev = 26;
                        _context7.t1 = _context7["catch"](14);
                        _iterator.e(_context7.t1);
                    case 29:
                        _context7.prev = 29;
                        _iterator.f();
                        return _context7.finish(29);
                    case 32:
                    case "end":
                        return _context7.stop();
                }
            }, _callee6, null, [
                [
                    14,
                    26,
                    29,
                    32
                ]
            ]);
        })));
        this.options = options;
        this.options.simulate = (_this$options$simulat = this.options.simulate) !== null && _this$options$simulat !== void 0 ? _this$options$simulat : true;
        this.server = new _rpc.Server(this.options.rpcUrl, {
            allowHttp: (_this$options$allowHt = this.options.allowHttp) !== null && _this$options$allowHt !== void 0 ? _this$options$allowHt : false
        });
    }
    return _createClass(AssembledTransaction, [
        {
            key: "toJSON",
            value: function toJSON() {
                var _this$built;
                return JSON.stringify({
                    method: this.options.method,
                    tx: (_this$built = this.built) === null || _this$built === void 0 ? void 0 : _this$built.toXDR(),
                    simulationResult: {
                        auth: this.simulationData.result.auth.map(function(a) {
                            return a.toXDR("base64");
                        }),
                        retval: this.simulationData.result.retval.toXDR("base64")
                    },
                    simulationTransactionData: this.simulationData.transactionData.toXDR("base64")
                });
            }
        },
        {
            key: "toXDR",
            value: function toXDR() {
                var _this$built2;
                if (!this.built) throw new Error("Transaction has not yet been simulated; " + "call `AssembledTransaction.simulate` first.");
                return (_this$built2 = this.built) === null || _this$built2 === void 0 ? void 0 : _this$built2.toEnvelope().toXDR('base64');
            }
        },
        {
            key: "handleWalletError",
            value: function handleWalletError(error) {
                if (!error) return;
                var message = error.message, code = error.code;
                var fullMessage = "".concat(message).concat(error.ext ? " (".concat(error.ext.join(', '), ")") : '');
                switch(code){
                    case -1:
                        throw new AssembledTransaction.Errors.InternalWalletError(fullMessage);
                    case -2:
                        throw new AssembledTransaction.Errors.ExternalServiceError(fullMessage);
                    case -3:
                        throw new AssembledTransaction.Errors.InvalidClientRequest(fullMessage);
                    case -4:
                        throw new AssembledTransaction.Errors.UserRejected(fullMessage);
                    default:
                        throw new Error("Unhandled error: ".concat(fullMessage));
                }
            }
        },
        {
            key: "simulationData",
            get: function get() {
                var _simulation$result;
                if (this.simulationResult && this.simulationTransactionData) {
                    return {
                        result: this.simulationResult,
                        transactionData: this.simulationTransactionData
                    };
                }
                var simulation = this.simulation;
                if (!simulation) {
                    throw new AssembledTransaction.Errors.NotYetSimulated("Transaction has not yet been simulated");
                }
                if (_api.Api.isSimulationError(simulation)) {
                    throw new AssembledTransaction.Errors.SimulationFailed("Transaction simulation failed: \"".concat(simulation.error, "\""));
                }
                if (_api.Api.isSimulationRestore(simulation)) {
                    throw new AssembledTransaction.Errors.ExpiredState("You need to restore some contract state before you can invoke this method.\n" + 'You can set `restore` to true in the method options in order to ' + 'automatically restore the contract state when needed.');
                }
                this.simulationResult = (_simulation$result = simulation.result) !== null && _simulation$result !== void 0 ? _simulation$result : {
                    auth: [],
                    retval: _stellarBase.xdr.ScVal.scvVoid()
                };
                this.simulationTransactionData = simulation.transactionData.build();
                return {
                    result: this.simulationResult,
                    transactionData: this.simulationTransactionData
                };
            }
        },
        {
            key: "result",
            get: function get() {
                try {
                    if (!this.simulationData.result) {
                        throw new Error("No simulation result!");
                    }
                    return this.options.parseResultXdr(this.simulationData.result.retval);
                } catch (e) {
                    if (!(0, _utils.implementsToString)(e)) throw e;
                    var err = this.parseError(e.toString());
                    if (err) return err;
                    throw e;
                }
            }
        },
        {
            key: "parseError",
            value: function parseError(errorMessage) {
                if (!this.options.errorTypes) return undefined;
                var match = errorMessage.match(_utils.contractErrorPattern);
                if (!match) return undefined;
                var i = parseInt(match[1], 10);
                var err = this.options.errorTypes[i];
                if (!err) return undefined;
                return new _rust_result.Err(err);
            }
        },
        {
            key: "send",
            value: function() {
                var _send = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {
                    var sent;
                    return _regeneratorRuntime().wrap(function _callee7$(_context8) {
                        while(1)switch(_context8.prev = _context8.next){
                            case 0:
                                if (this.signed) {
                                    _context8.next = 2;
                                    break;
                                }
                                throw new Error("The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.");
                            case 2:
                                _context8.next = 4;
                                return _sent_transaction.SentTransaction.init(this);
                            case 4:
                                sent = _context8.sent;
                                return _context8.abrupt("return", sent);
                            case 6:
                            case "end":
                                return _context8.stop();
                        }
                    }, _callee7, this);
                }));
                function send() {
                    return _send.apply(this, arguments);
                }
                return send;
            }()
        },
        {
            key: "isReadCall",
            get: function get() {
                var authsCount = this.simulationData.result.auth.length;
                var writeLength = this.simulationData.transactionData.resources().footprint().readWrite().length;
                return authsCount === 0 && writeLength === 0;
            }
        },
        {
            key: "restoreFootprint",
            value: function() {
                var _restoreFootprint = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(restorePreamble, account) {
                    var restoreTx, sentTransaction;
                    return _regeneratorRuntime().wrap(function _callee8$(_context9) {
                        while(1)switch(_context9.prev = _context9.next){
                            case 0:
                                if (this.options.signTransaction) {
                                    _context9.next = 2;
                                    break;
                                }
                                throw new Error("For automatic restore to work you must provide a signTransaction function when initializing your Client");
                            case 2:
                                if (!(account !== null && account !== void 0)) {
                                    _context9.next = 6;
                                    break;
                                }
                                _context9.t0 = account;
                                _context9.next = 9;
                                break;
                            case 6:
                                _context9.next = 8;
                                return (0, _utils.getAccount)(this.options, this.server);
                            case 8:
                                _context9.t0 = _context9.sent;
                            case 9:
                                account = _context9.t0;
                                _context9.next = 12;
                                return AssembledTransaction.buildFootprintRestoreTransaction(_objectSpread({}, this.options), restorePreamble.transactionData, account, restorePreamble.minResourceFee);
                            case 12:
                                restoreTx = _context9.sent;
                                _context9.next = 15;
                                return restoreTx.signAndSend();
                            case 15:
                                sentTransaction = _context9.sent;
                                if (sentTransaction.getTransactionResponse) {
                                    _context9.next = 18;
                                    break;
                                }
                                throw new AssembledTransaction.Errors.RestorationFailure("The attempt at automatic restore failed. \n".concat(JSON.stringify(sentTransaction)));
                            case 18:
                                return _context9.abrupt("return", sentTransaction.getTransactionResponse);
                            case 19:
                            case "end":
                                return _context9.stop();
                        }
                    }, _callee8, this);
                }));
                function restoreFootprint(_x2, _x3) {
                    return _restoreFootprint.apply(this, arguments);
                }
                return restoreFootprint;
            }()
        }
    ], [
        {
            key: "fromJSON",
            value: function fromJSON(options, _ref12) {
                var tx = _ref12.tx, simulationResult = _ref12.simulationResult, simulationTransactionData = _ref12.simulationTransactionData;
                var txn = new AssembledTransaction(options);
                txn.built = _stellarBase.TransactionBuilder.fromXDR(tx, options.networkPassphrase);
                txn.simulationResult = {
                    auth: simulationResult.auth.map(function(a) {
                        return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(a, "base64");
                    }),
                    retval: _stellarBase.xdr.ScVal.fromXDR(simulationResult.retval, "base64")
                };
                txn.simulationTransactionData = _stellarBase.xdr.SorobanTransactionData.fromXDR(simulationTransactionData, "base64");
                return txn;
            }
        },
        {
            key: "fromXDR",
            value: function fromXDR(options, encodedXDR, spec) {
                var _operation$func;
                var envelope = _stellarBase.xdr.TransactionEnvelope.fromXDR(encodedXDR, "base64");
                var built = _stellarBase.TransactionBuilder.fromXDR(envelope, options.networkPassphrase);
                var operation = built.operations[0];
                if (!(operation !== null && operation !== void 0 && (_operation$func = operation.func) !== null && _operation$func !== void 0 && _operation$func.value) || typeof operation.func.value !== 'function') {
                    throw new Error("Could not extract the method from the transaction envelope.");
                }
                var invokeContractArgs = operation.func.value();
                if (!(invokeContractArgs !== null && invokeContractArgs !== void 0 && invokeContractArgs.functionName)) {
                    throw new Error("Could not extract the method name from the transaction envelope.");
                }
                var method = invokeContractArgs.functionName().toString('utf-8');
                var txn = new AssembledTransaction(_objectSpread(_objectSpread({}, options), {}, {
                    method: method,
                    parseResultXdr: function parseResultXdr(result) {
                        return spec.funcResToNative(method, result);
                    }
                }));
                txn.built = built;
                return txn;
            }
        },
        {
            key: "build",
            value: function build(options) {
                var _options$args;
                var contract = new _stellarBase.Contract(options.contractId);
                return AssembledTransaction.buildWithOp(contract.call.apply(contract, [
                    options.method
                ].concat(_toConsumableArray((_options$args = options.args) !== null && _options$args !== void 0 ? _options$args : []))), options);
            }
        },
        {
            key: "buildWithOp",
            value: function() {
                var _buildWithOp = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(operation, options) {
                    var _options$fee, _options$timeoutInSec;
                    var tx, account;
                    return _regeneratorRuntime().wrap(function _callee9$(_context10) {
                        while(1)switch(_context10.prev = _context10.next){
                            case 0:
                                tx = new AssembledTransaction(options);
                                _context10.next = 3;
                                return (0, _utils.getAccount)(options, tx.server);
                            case 3:
                                account = _context10.sent;
                                tx.raw = new _stellarBase.TransactionBuilder(account, {
                                    fee: (_options$fee = options.fee) !== null && _options$fee !== void 0 ? _options$fee : _stellarBase.BASE_FEE,
                                    networkPassphrase: options.networkPassphrase
                                }).setTimeout((_options$timeoutInSec = options.timeoutInSeconds) !== null && _options$timeoutInSec !== void 0 ? _options$timeoutInSec : _types.DEFAULT_TIMEOUT).addOperation(operation);
                                if (!options.simulate) {
                                    _context10.next = 8;
                                    break;
                                }
                                _context10.next = 8;
                                return tx.simulate();
                            case 8:
                                return _context10.abrupt("return", tx);
                            case 9:
                            case "end":
                                return _context10.stop();
                        }
                    }, _callee9);
                }));
                function buildWithOp(_x4, _x5) {
                    return _buildWithOp.apply(this, arguments);
                }
                return buildWithOp;
            }()
        },
        {
            key: "buildFootprintRestoreTransaction",
            value: function() {
                var _buildFootprintRestoreTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(options, sorobanData, account, fee) {
                    var _options$timeoutInSec2;
                    var tx;
                    return _regeneratorRuntime().wrap(function _callee10$(_context11) {
                        while(1)switch(_context11.prev = _context11.next){
                            case 0:
                                tx = new AssembledTransaction(options);
                                tx.raw = new _stellarBase.TransactionBuilder(account, {
                                    fee: fee,
                                    networkPassphrase: options.networkPassphrase
                                }).setSorobanData(sorobanData instanceof _stellarBase.SorobanDataBuilder ? sorobanData.build() : sorobanData).addOperation(_stellarBase.Operation.restoreFootprint({})).setTimeout((_options$timeoutInSec2 = options.timeoutInSeconds) !== null && _options$timeoutInSec2 !== void 0 ? _options$timeoutInSec2 : _types.DEFAULT_TIMEOUT);
                                _context11.next = 4;
                                return tx.simulate({
                                    restore: false
                                });
                            case 4:
                                return _context11.abrupt("return", tx);
                            case 5:
                            case "end":
                                return _context11.stop();
                        }
                    }, _callee10);
                }));
                function buildFootprintRestoreTransaction(_x6, _x7, _x8, _x9) {
                    return _buildFootprintRestoreTransaction.apply(this, arguments);
                }
                return buildFootprintRestoreTransaction;
            }()
        }
    ]);
}();
_defineProperty(AssembledTransaction, "Errors", {
    ExpiredState: function(_Error) {
        function ExpiredStateError() {
            _classCallCheck(this, ExpiredStateError);
            return _callSuper(this, ExpiredStateError, arguments);
        }
        _inherits(ExpiredStateError, _Error);
        return _createClass(ExpiredStateError);
    }(_wrapNativeSuper(Error)),
    RestorationFailure: function(_Error2) {
        function RestoreFailureError() {
            _classCallCheck(this, RestoreFailureError);
            return _callSuper(this, RestoreFailureError, arguments);
        }
        _inherits(RestoreFailureError, _Error2);
        return _createClass(RestoreFailureError);
    }(_wrapNativeSuper(Error)),
    NeedsMoreSignatures: function(_Error3) {
        function NeedsMoreSignaturesError() {
            _classCallCheck(this, NeedsMoreSignaturesError);
            return _callSuper(this, NeedsMoreSignaturesError, arguments);
        }
        _inherits(NeedsMoreSignaturesError, _Error3);
        return _createClass(NeedsMoreSignaturesError);
    }(_wrapNativeSuper(Error)),
    NoSignatureNeeded: function(_Error4) {
        function NoSignatureNeededError() {
            _classCallCheck(this, NoSignatureNeededError);
            return _callSuper(this, NoSignatureNeededError, arguments);
        }
        _inherits(NoSignatureNeededError, _Error4);
        return _createClass(NoSignatureNeededError);
    }(_wrapNativeSuper(Error)),
    NoUnsignedNonInvokerAuthEntries: function(_Error5) {
        function NoUnsignedNonInvokerAuthEntriesError() {
            _classCallCheck(this, NoUnsignedNonInvokerAuthEntriesError);
            return _callSuper(this, NoUnsignedNonInvokerAuthEntriesError, arguments);
        }
        _inherits(NoUnsignedNonInvokerAuthEntriesError, _Error5);
        return _createClass(NoUnsignedNonInvokerAuthEntriesError);
    }(_wrapNativeSuper(Error)),
    NoSigner: function(_Error6) {
        function NoSignerError() {
            _classCallCheck(this, NoSignerError);
            return _callSuper(this, NoSignerError, arguments);
        }
        _inherits(NoSignerError, _Error6);
        return _createClass(NoSignerError);
    }(_wrapNativeSuper(Error)),
    NotYetSimulated: function(_Error7) {
        function NotYetSimulatedError() {
            _classCallCheck(this, NotYetSimulatedError);
            return _callSuper(this, NotYetSimulatedError, arguments);
        }
        _inherits(NotYetSimulatedError, _Error7);
        return _createClass(NotYetSimulatedError);
    }(_wrapNativeSuper(Error)),
    FakeAccount: function(_Error8) {
        function FakeAccountError() {
            _classCallCheck(this, FakeAccountError);
            return _callSuper(this, FakeAccountError, arguments);
        }
        _inherits(FakeAccountError, _Error8);
        return _createClass(FakeAccountError);
    }(_wrapNativeSuper(Error)),
    SimulationFailed: function(_Error9) {
        function SimulationFailedError() {
            _classCallCheck(this, SimulationFailedError);
            return _callSuper(this, SimulationFailedError, arguments);
        }
        _inherits(SimulationFailedError, _Error9);
        return _createClass(SimulationFailedError);
    }(_wrapNativeSuper(Error)),
    InternalWalletError: function(_Error10) {
        function InternalWalletError() {
            _classCallCheck(this, InternalWalletError);
            return _callSuper(this, InternalWalletError, arguments);
        }
        _inherits(InternalWalletError, _Error10);
        return _createClass(InternalWalletError);
    }(_wrapNativeSuper(Error)),
    ExternalServiceError: function(_Error11) {
        function ExternalServiceError() {
            _classCallCheck(this, ExternalServiceError);
            return _callSuper(this, ExternalServiceError, arguments);
        }
        _inherits(ExternalServiceError, _Error11);
        return _createClass(ExternalServiceError);
    }(_wrapNativeSuper(Error)),
    InvalidClientRequest: function(_Error12) {
        function InvalidClientRequestError() {
            _classCallCheck(this, InvalidClientRequestError);
            return _callSuper(this, InvalidClientRequestError, arguments);
        }
        _inherits(InvalidClientRequestError, _Error12);
        return _createClass(InvalidClientRequestError);
    }(_wrapNativeSuper(Error)),
    UserRejected: function(_Error13) {
        function UserRejectedError() {
            _classCallCheck(this, UserRejectedError);
            return _callSuper(this, UserRejectedError, arguments);
        }
        _inherits(UserRejectedError, _Error13);
        return _createClass(UserRejectedError);
    }(_wrapNativeSuper(Error))
});
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/basic_node_signer.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.basicNodeSigner = void 0;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
var basicNodeSigner = exports.basicNodeSigner = function basicNodeSigner(keypair, networkPassphrase) {
    return {
        signTransaction: function() {
            var _signTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(xdr, opts) {
                var t;
                return _regeneratorRuntime().wrap(function _callee$(_context) {
                    while(1)switch(_context.prev = _context.next){
                        case 0:
                            t = _stellarBase.TransactionBuilder.fromXDR(xdr, (opts === null || opts === void 0 ? void 0 : opts.networkPassphrase) || networkPassphrase);
                            t.sign(keypair);
                            return _context.abrupt("return", {
                                signedTxXdr: t.toXDR(),
                                signerAddress: keypair.publicKey()
                            });
                        case 3:
                        case "end":
                            return _context.stop();
                    }
                }, _callee);
            }));
            function signTransaction(_x, _x2) {
                return _signTransaction.apply(this, arguments);
            }
            return signTransaction;
        }(),
        signAuthEntry: function() {
            var _signAuthEntry = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(authEntry) {
                var signedAuthEntry;
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                    while(1)switch(_context2.prev = _context2.next){
                        case 0:
                            signedAuthEntry = keypair.sign((0, _stellarBase.hash)(Buffer.from(authEntry, "base64"))).toString("base64");
                            return _context2.abrupt("return", {
                                signedAuthEntry: signedAuthEntry,
                                signerAddress: keypair.publicKey()
                            });
                        case 2:
                        case "end":
                            return _context2.stop();
                    }
                }, _callee2);
            }));
            function signAuthEntry(_x3) {
                return _signAuthEntry.apply(this, arguments);
            }
            return signAuthEntry;
        }()
    };
};
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/spec.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Spec = void 0;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _rust_result = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/rust_result.js [app-ssr] (ecmascript)");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _slicedToArray(r, e) {
    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
function enumToJsonSchema(udt) {
    var description = udt.doc().toString();
    var cases = udt.cases();
    var oneOf = [];
    cases.forEach(function(aCase) {
        var title = aCase.name().toString();
        var desc = aCase.doc().toString();
        oneOf.push({
            description: desc,
            title: title,
            enum: [
                aCase.value()
            ],
            type: "number"
        });
    });
    var res = {
        oneOf: oneOf
    };
    if (description.length > 0) {
        res.description = description;
    }
    return res;
}
function isNumeric(field) {
    return /^\d+$/.test(field.name().toString());
}
function readObj(args, input) {
    var inputName = input.name().toString();
    var entry = Object.entries(args).find(function(_ref) {
        var _ref2 = _slicedToArray(_ref, 1), name = _ref2[0];
        return name === inputName;
    });
    if (!entry) {
        throw new Error("Missing field ".concat(inputName));
    }
    return entry[1];
}
function findCase(name) {
    return function matches(entry) {
        switch(entry.switch().value){
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:
                {
                    var tuple = entry.tupleCase();
                    return tuple.name().toString() === name;
                }
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:
                {
                    var voidCase = entry.voidCase();
                    return voidCase.name().toString() === name;
                }
            default:
                return false;
        }
    };
}
function stringToScVal(str, ty) {
    switch(ty.value){
        case _stellarBase.xdr.ScSpecType.scSpecTypeString().value:
            return _stellarBase.xdr.ScVal.scvString(str);
        case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value:
            return _stellarBase.xdr.ScVal.scvSymbol(str);
        case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value:
            return _stellarBase.Address.fromString(str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:
            return new _stellarBase.XdrLargeInt("u64", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:
            return new _stellarBase.XdrLargeInt("i64", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:
            return new _stellarBase.XdrLargeInt("u128", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:
            return new _stellarBase.XdrLargeInt("i128", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:
            return new _stellarBase.XdrLargeInt("u256", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:
            return new _stellarBase.XdrLargeInt("i256", str).toScVal();
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:
            return _stellarBase.xdr.ScVal.scvBytes(Buffer.from(str, "base64"));
        default:
            throw new TypeError("invalid type ".concat(ty.name, " specified for string value"));
    }
}
var PRIMITIVE_DEFINITONS = {
    U32: {
        type: "integer",
        minimum: 0,
        maximum: 4294967295
    },
    I32: {
        type: "integer",
        minimum: -2147483648,
        maximum: 2147483647
    },
    U64: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 20
    },
    I64: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 21
    },
    U128: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 39
    },
    I128: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 40
    },
    U256: {
        type: "string",
        pattern: "^([1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 78
    },
    I256: {
        type: "string",
        pattern: "^(-?[1-9][0-9]*|0)$",
        minLength: 1,
        maxLength: 79
    },
    Address: {
        type: "string",
        format: "address",
        description: "Address can be a public key or contract id"
    },
    ScString: {
        type: "string",
        description: "ScString is a string"
    },
    ScSymbol: {
        type: "string",
        description: "ScSymbol is a string"
    },
    DataUrl: {
        type: "string",
        pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
    }
};
function typeRef(typeDef) {
    var t = typeDef.switch();
    var value = t.value;
    var ref;
    switch(value){
        case _stellarBase.xdr.ScSpecType.scSpecTypeVal().value:
            {
                ref = "Val";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBool().value:
            {
                return {
                    type: "boolean"
                };
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:
            {
                return {
                    type: "null"
                };
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeError().value:
            {
                ref = "Error";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value:
            {
                ref = "U32";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value:
            {
                ref = "I32";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:
            {
                ref = "U64";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:
            {
                ref = "I64";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeTimepoint().value:
            {
                throw new Error("Timepoint type not supported");
                ref = "Timepoint";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeDuration().value:
            {
                throw new Error("Duration not supported");
                ref = "Duration";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:
            {
                ref = "U128";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:
            {
                ref = "I128";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:
            {
                ref = "U256";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:
            {
                ref = "I256";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:
            {
                ref = "DataUrl";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeString().value:
            {
                ref = "ScString";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value:
            {
                ref = "ScSymbol";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value:
            {
                ref = "Address";
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value:
            {
                var opt = typeDef.option();
                return typeRef(opt.valueType());
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeResult().value:
            {
                break;
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value:
            {
                var arr = typeDef.vec();
                var reference = typeRef(arr.elementType());
                return {
                    type: "array",
                    items: reference
                };
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value:
            {
                var map = typeDef.map();
                var items = [
                    typeRef(map.keyType()),
                    typeRef(map.valueType())
                ];
                return {
                    type: "array",
                    items: {
                        type: "array",
                        items: items,
                        minItems: 2,
                        maxItems: 2
                    }
                };
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value:
            {
                var tuple = typeDef.tuple();
                var minItems = tuple.valueTypes().length;
                var maxItems = minItems;
                var _items = tuple.valueTypes().map(typeRef);
                return {
                    type: "array",
                    items: _items,
                    minItems: minItems,
                    maxItems: maxItems
                };
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:
            {
                var _arr = typeDef.bytesN();
                return {
                    $ref: "#/definitions/DataUrl",
                    maxLength: _arr.n()
                };
            }
        case _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value:
            {
                var udt = typeDef.udt();
                ref = udt.name().toString();
                break;
            }
    }
    return {
        $ref: "#/definitions/".concat(ref)
    };
}
function isRequired(typeDef) {
    return typeDef.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeOption().value;
}
function argsAndRequired(input) {
    var properties = {};
    var required = [];
    input.forEach(function(arg) {
        var aType = arg.type();
        var name = arg.name().toString();
        properties[name] = typeRef(aType);
        if (isRequired(aType)) {
            required.push(name);
        }
    });
    var res = {
        properties: properties
    };
    if (required.length > 0) {
        res.required = required;
    }
    return res;
}
function structToJsonSchema(udt) {
    var fields = udt.fields();
    if (fields.some(isNumeric)) {
        if (!fields.every(isNumeric)) {
            throw new Error("mixed numeric and non-numeric field names are not allowed");
        }
        var items = fields.map(function(_, i) {
            return typeRef(fields[i].type());
        });
        return {
            type: "array",
            items: items,
            minItems: fields.length,
            maxItems: fields.length
        };
    }
    var description = udt.doc().toString();
    var _argsAndRequired = argsAndRequired(fields), properties = _argsAndRequired.properties, required = _argsAndRequired.required;
    properties.additionalProperties = false;
    return {
        description: description,
        properties: properties,
        required: required,
        type: "object"
    };
}
function functionToJsonSchema(func) {
    var _argsAndRequired2 = argsAndRequired(func.inputs()), properties = _argsAndRequired2.properties, required = _argsAndRequired2.required;
    var args = {
        additionalProperties: false,
        properties: properties,
        type: "object"
    };
    if ((required === null || required === void 0 ? void 0 : required.length) > 0) {
        args.required = required;
    }
    var input = {
        properties: {
            args: args
        }
    };
    var outputs = func.outputs();
    var output = outputs.length > 0 ? typeRef(outputs[0]) : typeRef(_stellarBase.xdr.ScSpecTypeDef.scSpecTypeVoid());
    var description = func.doc().toString();
    if (description.length > 0) {
        input.description = description;
    }
    input.additionalProperties = false;
    output.additionalProperties = false;
    return {
        input: input,
        output: output
    };
}
function unionToJsonSchema(udt) {
    var description = udt.doc().toString();
    var cases = udt.cases();
    var oneOf = [];
    cases.forEach(function(aCase) {
        switch(aCase.switch().value){
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:
                {
                    var c = aCase.voidCase();
                    var title = c.name().toString();
                    oneOf.push({
                        type: "object",
                        title: title,
                        properties: {
                            tag: title
                        },
                        additionalProperties: false,
                        required: [
                            "tag"
                        ]
                    });
                    break;
                }
            case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:
                {
                    var _c = aCase.tupleCase();
                    var _title = _c.name().toString();
                    oneOf.push({
                        type: "object",
                        title: _title,
                        properties: {
                            tag: _title,
                            values: {
                                type: "array",
                                items: _c.type().map(typeRef)
                            }
                        },
                        required: [
                            "tag",
                            "values"
                        ],
                        additionalProperties: false
                    });
                }
        }
    });
    var res = {
        oneOf: oneOf
    };
    if (description.length > 0) {
        res.description = description;
    }
    return res;
}
var Spec = exports.Spec = function() {
    function Spec(entries) {
        _classCallCheck(this, Spec);
        _defineProperty(this, "entries", []);
        if (entries.length === 0) {
            throw new Error("Contract spec must have at least one entry");
        }
        var entry = entries[0];
        if (typeof entry === "string") {
            this.entries = entries.map(function(s) {
                return _stellarBase.xdr.ScSpecEntry.fromXDR(s, "base64");
            });
        } else {
            this.entries = entries;
        }
    }
    return _createClass(Spec, [
        {
            key: "funcs",
            value: function funcs() {
                return this.entries.filter(function(entry) {
                    return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;
                }).map(function(entry) {
                    return entry.functionV0();
                });
            }
        },
        {
            key: "getFunc",
            value: function getFunc(name) {
                var entry = this.findEntry(name);
                if (entry.switch().value !== _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) {
                    throw new Error("".concat(name, " is not a function"));
                }
                return entry.functionV0();
            }
        },
        {
            key: "funcArgsToScVals",
            value: function funcArgsToScVals(name, args) {
                var _this = this;
                var fn = this.getFunc(name);
                return fn.inputs().map(function(input) {
                    return _this.nativeToScVal(readObj(args, input), input.type());
                });
            }
        },
        {
            key: "funcResToNative",
            value: function funcResToNative(name, val_or_base64) {
                var val = typeof val_or_base64 === "string" ? _stellarBase.xdr.ScVal.fromXDR(val_or_base64, "base64") : val_or_base64;
                var func = this.getFunc(name);
                var outputs = func.outputs();
                if (outputs.length === 0) {
                    var type = val.switch();
                    if (type.value !== _stellarBase.xdr.ScValType.scvVoid().value) {
                        throw new Error("Expected void, got ".concat(type.name));
                    }
                    return null;
                }
                if (outputs.length > 1) {
                    throw new Error("Multiple outputs not supported");
                }
                var output = outputs[0];
                if (output.switch().value === _stellarBase.xdr.ScSpecType.scSpecTypeResult().value) {
                    return new _rust_result.Ok(this.scValToNative(val, output.result().okType()));
                }
                return this.scValToNative(val, output);
            }
        },
        {
            key: "findEntry",
            value: function findEntry(name) {
                var entry = this.entries.find(function(e) {
                    return e.value().name().toString() === name;
                });
                if (!entry) {
                    throw new Error("no such entry: ".concat(name));
                }
                return entry;
            }
        },
        {
            key: "nativeToScVal",
            value: function nativeToScVal(val, ty) {
                var _this2 = this;
                var t = ty.switch();
                var value = t.value;
                if (t.value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {
                    var udt = ty.udt();
                    return this.nativeToUdt(val, udt.name().toString());
                }
                if (value === _stellarBase.xdr.ScSpecType.scSpecTypeOption().value) {
                    var opt = ty.option();
                    if (val === undefined) {
                        return _stellarBase.xdr.ScVal.scvVoid();
                    }
                    return this.nativeToScVal(val, opt.valueType());
                }
                switch(_typeof(val)){
                    case "object":
                        {
                            var _val$constructor$name, _val$constructor;
                            if (val === null) {
                                switch(value){
                                    case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:
                                        return _stellarBase.xdr.ScVal.scvVoid();
                                    default:
                                        throw new TypeError("Type ".concat(ty, " was not void, but value was null"));
                                }
                            }
                            if (val instanceof _stellarBase.xdr.ScVal) {
                                return val;
                            }
                            if (val instanceof _stellarBase.Address) {
                                if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {
                                    throw new TypeError("Type ".concat(ty, " was not address, but value was Address"));
                                }
                                return val.toScVal();
                            }
                            if (val instanceof _stellarBase.Contract) {
                                if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {
                                    throw new TypeError("Type ".concat(ty, " was not address, but value was Address"));
                                }
                                return val.address().toScVal();
                            }
                            if (val instanceof Uint8Array || Buffer.isBuffer(val)) {
                                var copy = Uint8Array.from(val);
                                switch(value){
                                    case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:
                                        {
                                            var bytesN = ty.bytesN();
                                            if (copy.length !== bytesN.n()) {
                                                throw new TypeError("expected ".concat(bytesN.n(), " bytes, but got ").concat(copy.length));
                                            }
                                            return _stellarBase.xdr.ScVal.scvBytes(copy);
                                        }
                                    case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:
                                        return _stellarBase.xdr.ScVal.scvBytes(copy);
                                    default:
                                        throw new TypeError("invalid type (".concat(ty, ") specified for Bytes and BytesN"));
                                }
                            }
                            if (Array.isArray(val)) {
                                switch(value){
                                    case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value:
                                        {
                                            var vec = ty.vec();
                                            var elementType = vec.elementType();
                                            return _stellarBase.xdr.ScVal.scvVec(val.map(function(v) {
                                                return _this2.nativeToScVal(v, elementType);
                                            }));
                                        }
                                    case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value:
                                        {
                                            var tup = ty.tuple();
                                            var valTypes = tup.valueTypes();
                                            if (val.length !== valTypes.length) {
                                                throw new TypeError("Tuple expects ".concat(valTypes.length, " values, but ").concat(val.length, " were provided"));
                                            }
                                            return _stellarBase.xdr.ScVal.scvVec(val.map(function(v, i) {
                                                return _this2.nativeToScVal(v, valTypes[i]);
                                            }));
                                        }
                                    case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value:
                                        {
                                            var map = ty.map();
                                            var keyType = map.keyType();
                                            var valueType = map.valueType();
                                            return _stellarBase.xdr.ScVal.scvMap(val.map(function(entry) {
                                                var key = _this2.nativeToScVal(entry[0], keyType);
                                                var mapVal = _this2.nativeToScVal(entry[1], valueType);
                                                return new _stellarBase.xdr.ScMapEntry({
                                                    key: key,
                                                    val: mapVal
                                                });
                                            }));
                                        }
                                    default:
                                        throw new TypeError("Type ".concat(ty, " was not vec, but value was Array"));
                                }
                            }
                            if (val.constructor === Map) {
                                if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {
                                    throw new TypeError("Type ".concat(ty, " was not map, but value was Map"));
                                }
                                var scMap = ty.map();
                                var _map = val;
                                var entries = [];
                                var values = _map.entries();
                                var res = values.next();
                                while(!res.done){
                                    var _res$value = _slicedToArray(res.value, 2), k = _res$value[0], v = _res$value[1];
                                    var key = this.nativeToScVal(k, scMap.keyType());
                                    var mapval = this.nativeToScVal(v, scMap.valueType());
                                    entries.push(new _stellarBase.xdr.ScMapEntry({
                                        key: key,
                                        val: mapval
                                    }));
                                    res = values.next();
                                }
                                return _stellarBase.xdr.ScVal.scvMap(entries);
                            }
                            if (((_val$constructor$name = (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) !== null && _val$constructor$name !== void 0 ? _val$constructor$name : "") !== "Object") {
                                var _val$constructor2;
                                throw new TypeError("cannot interpret ".concat((_val$constructor2 = val.constructor) === null || _val$constructor2 === void 0 ? void 0 : _val$constructor2.name, " value as ScVal (").concat(JSON.stringify(val), ")"));
                            }
                            throw new TypeError("Received object ".concat(val, "  did not match the provided type ").concat(ty));
                        }
                    case "number":
                    case "bigint":
                        {
                            switch(value){
                                case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value:
                                    return _stellarBase.xdr.ScVal.scvU32(val);
                                case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value:
                                    return _stellarBase.xdr.ScVal.scvI32(val);
                                case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:
                                case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:
                                case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:
                                case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:
                                case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:
                                case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:
                                    {
                                        var intType = t.name.substring(10).toLowerCase();
                                        return new _stellarBase.XdrLargeInt(intType, val).toScVal();
                                    }
                                default:
                                    throw new TypeError("invalid type (".concat(ty, ") specified for integer"));
                            }
                        }
                    case "string":
                        return stringToScVal(val, t);
                    case "boolean":
                        {
                            if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeBool().value) {
                                throw TypeError("Type ".concat(ty, " was not bool, but value was bool"));
                            }
                            return _stellarBase.xdr.ScVal.scvBool(val);
                        }
                    case "undefined":
                        {
                            if (!ty) {
                                return _stellarBase.xdr.ScVal.scvVoid();
                            }
                            switch(value){
                                case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:
                                case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value:
                                    return _stellarBase.xdr.ScVal.scvVoid();
                                default:
                                    throw new TypeError("Type ".concat(ty, " was not void, but value was undefined"));
                            }
                        }
                    case "function":
                        return this.nativeToScVal(val(), ty);
                    default:
                        throw new TypeError("failed to convert typeof ".concat(_typeof(val), " (").concat(val, ")"));
                }
            }
        },
        {
            key: "nativeToUdt",
            value: function nativeToUdt(val, name) {
                var entry = this.findEntry(name);
                switch(entry.switch()){
                    case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
                        if (typeof val !== "number") {
                            throw new TypeError("expected number for enum ".concat(name, ", but got ").concat(_typeof(val)));
                        }
                        return this.nativeToEnum(val, entry.udtEnumV0());
                    case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
                        return this.nativeToStruct(val, entry.udtStructV0());
                    case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
                        return this.nativeToUnion(val, entry.udtUnionV0());
                    default:
                        throw new Error("failed to parse udt ".concat(name));
                }
            }
        },
        {
            key: "nativeToUnion",
            value: function nativeToUnion(val, union_) {
                var _this3 = this;
                var entryName = val.tag;
                var caseFound = union_.cases().find(function(entry) {
                    var caseN = entry.value().name().toString();
                    return caseN === entryName;
                });
                if (!caseFound) {
                    throw new TypeError("no such enum entry: ".concat(entryName, " in ").concat(union_));
                }
                var key = _stellarBase.xdr.ScVal.scvSymbol(entryName);
                switch(caseFound.switch()){
                    case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():
                        {
                            return _stellarBase.xdr.ScVal.scvVec([
                                key
                            ]);
                        }
                    case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0():
                        {
                            var types = caseFound.tupleCase().type();
                            if (Array.isArray(val.values)) {
                                if (val.values.length !== types.length) {
                                    throw new TypeError("union ".concat(union_, " expects ").concat(types.length, " values, but got ").concat(val.values.length));
                                }
                                var scvals = val.values.map(function(v, i) {
                                    return _this3.nativeToScVal(v, types[i]);
                                });
                                scvals.unshift(key);
                                return _stellarBase.xdr.ScVal.scvVec(scvals);
                            }
                            throw new Error("failed to parse union case ".concat(caseFound, " with ").concat(val));
                        }
                    default:
                        throw new Error("failed to parse union ".concat(union_, " with ").concat(val));
                }
            }
        },
        {
            key: "nativeToStruct",
            value: function nativeToStruct(val, struct) {
                var _this4 = this;
                var fields = struct.fields();
                if (fields.some(isNumeric)) {
                    if (!fields.every(isNumeric)) {
                        throw new Error("mixed numeric and non-numeric field names are not allowed");
                    }
                    return _stellarBase.xdr.ScVal.scvVec(fields.map(function(_, i) {
                        return _this4.nativeToScVal(val[i], fields[i].type());
                    }));
                }
                return _stellarBase.xdr.ScVal.scvMap(fields.map(function(field) {
                    var name = field.name().toString();
                    return new _stellarBase.xdr.ScMapEntry({
                        key: _this4.nativeToScVal(name, _stellarBase.xdr.ScSpecTypeDef.scSpecTypeSymbol()),
                        val: _this4.nativeToScVal(val[name], field.type())
                    });
                }));
            }
        },
        {
            key: "nativeToEnum",
            value: function nativeToEnum(val, enum_) {
                if (enum_.cases().some(function(entry) {
                    return entry.value() === val;
                })) {
                    return _stellarBase.xdr.ScVal.scvU32(val);
                }
                throw new TypeError("no such enum entry: ".concat(val, " in ").concat(enum_));
            }
        },
        {
            key: "scValStrToNative",
            value: function scValStrToNative(scv, typeDef) {
                return this.scValToNative(_stellarBase.xdr.ScVal.fromXDR(scv, "base64"), typeDef);
            }
        },
        {
            key: "scValToNative",
            value: function scValToNative(scv, typeDef) {
                var _this5 = this;
                var t = typeDef.switch();
                var value = t.value;
                if (value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {
                    return this.scValUdtToNative(scv, typeDef.udt());
                }
                switch(scv.switch().value){
                    case _stellarBase.xdr.ScValType.scvVoid().value:
                        return undefined;
                    case _stellarBase.xdr.ScValType.scvU64().value:
                    case _stellarBase.xdr.ScValType.scvI64().value:
                    case _stellarBase.xdr.ScValType.scvU128().value:
                    case _stellarBase.xdr.ScValType.scvI128().value:
                    case _stellarBase.xdr.ScValType.scvU256().value:
                    case _stellarBase.xdr.ScValType.scvI256().value:
                        return (0, _stellarBase.scValToBigInt)(scv);
                    case _stellarBase.xdr.ScValType.scvVec().value:
                        {
                            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeVec().value) {
                                var _scv$vec;
                                var vec = typeDef.vec();
                                return ((_scv$vec = scv.vec()) !== null && _scv$vec !== void 0 ? _scv$vec : []).map(function(elm) {
                                    return _this5.scValToNative(elm, vec.elementType());
                                });
                            }
                            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value) {
                                var _scv$vec2;
                                var tuple = typeDef.tuple();
                                var valTypes = tuple.valueTypes();
                                return ((_scv$vec2 = scv.vec()) !== null && _scv$vec2 !== void 0 ? _scv$vec2 : []).map(function(elm, i) {
                                    return _this5.scValToNative(elm, valTypes[i]);
                                });
                            }
                            throw new TypeError("Type ".concat(typeDef, " was not vec, but ").concat(scv, " is"));
                        }
                    case _stellarBase.xdr.ScValType.scvAddress().value:
                        return _stellarBase.Address.fromScVal(scv).toString();
                    case _stellarBase.xdr.ScValType.scvMap().value:
                        {
                            var _scv$map;
                            var map = (_scv$map = scv.map()) !== null && _scv$map !== void 0 ? _scv$map : [];
                            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {
                                var typed = typeDef.map();
                                var keyType = typed.keyType();
                                var valueType = typed.valueType();
                                var res = map.map(function(entry) {
                                    return [
                                        _this5.scValToNative(entry.key(), keyType),
                                        _this5.scValToNative(entry.val(), valueType)
                                    ];
                                });
                                return res;
                            }
                            throw new TypeError("ScSpecType ".concat(t.name, " was not map, but ").concat(JSON.stringify(scv, null, 2), " is"));
                        }
                    case _stellarBase.xdr.ScValType.scvBool().value:
                    case _stellarBase.xdr.ScValType.scvU32().value:
                    case _stellarBase.xdr.ScValType.scvI32().value:
                    case _stellarBase.xdr.ScValType.scvBytes().value:
                        return scv.value();
                    case _stellarBase.xdr.ScValType.scvString().value:
                    case _stellarBase.xdr.ScValType.scvSymbol().value:
                        {
                            var _scv$value;
                            if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeString().value && value !== _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value) {
                                throw new Error("ScSpecType ".concat(t.name, " was not string or symbol, but ").concat(JSON.stringify(scv, null, 2), " is"));
                            }
                            return (_scv$value = scv.value()) === null || _scv$value === void 0 ? void 0 : _scv$value.toString();
                        }
                    case _stellarBase.xdr.ScValType.scvTimepoint().value:
                    case _stellarBase.xdr.ScValType.scvDuration().value:
                        return (0, _stellarBase.scValToBigInt)(_stellarBase.xdr.ScVal.scvU64(scv.u64()));
                    default:
                        throw new TypeError("failed to convert ".concat(JSON.stringify(scv, null, 2), " to native type from type ").concat(t.name));
                }
            }
        },
        {
            key: "scValUdtToNative",
            value: function scValUdtToNative(scv, udt) {
                var entry = this.findEntry(udt.name().toString());
                switch(entry.switch()){
                    case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
                        return this.enumToNative(scv);
                    case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
                        return this.structToNative(scv, entry.udtStructV0());
                    case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
                        return this.unionToNative(scv, entry.udtUnionV0());
                    default:
                        throw new Error("failed to parse udt ".concat(udt.name().toString(), ": ").concat(entry));
                }
            }
        },
        {
            key: "unionToNative",
            value: function unionToNative(val, udt) {
                var _this6 = this;
                var vec = val.vec();
                if (!vec) {
                    throw new Error("".concat(JSON.stringify(val, null, 2), " is not a vec"));
                }
                if (vec.length === 0 && udt.cases.length !== 0) {
                    throw new Error("".concat(val, " has length 0, but the there are at least one case in the union"));
                }
                var name = vec[0].sym().toString();
                if (vec[0].switch().value !== _stellarBase.xdr.ScValType.scvSymbol().value) {
                    throw new Error("{vec[0]} is not a symbol");
                }
                var entry = udt.cases().find(findCase(name));
                if (!entry) {
                    throw new Error("failed to find entry ".concat(name, " in union {udt.name().toString()}"));
                }
                var res = {
                    tag: name
                };
                if (entry.switch().value === _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {
                    var tuple = entry.tupleCase();
                    var ty = tuple.type();
                    var values = ty.map(function(e, i) {
                        return _this6.scValToNative(vec[i + 1], e);
                    });
                    res.values = values;
                }
                return res;
            }
        },
        {
            key: "structToNative",
            value: function structToNative(val, udt) {
                var _this7 = this, _val$map;
                var res = {};
                var fields = udt.fields();
                if (fields.some(isNumeric)) {
                    var _val$vec;
                    var r = (_val$vec = val.vec()) === null || _val$vec === void 0 ? void 0 : _val$vec.map(function(entry, i) {
                        return _this7.scValToNative(entry, fields[i].type());
                    });
                    return r;
                }
                (_val$map = val.map()) === null || _val$map === void 0 || _val$map.forEach(function(entry, i) {
                    var field = fields[i];
                    res[field.name().toString()] = _this7.scValToNative(entry.val(), field.type());
                });
                return res;
            }
        },
        {
            key: "enumToNative",
            value: function enumToNative(scv) {
                if (scv.switch().value !== _stellarBase.xdr.ScValType.scvU32().value) {
                    throw new Error("Enum must have a u32 value");
                }
                var num = scv.u32();
                return num;
            }
        },
        {
            key: "errorCases",
            value: function errorCases() {
                return this.entries.filter(function(entry) {
                    return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;
                }).flatMap(function(entry) {
                    return entry.value().cases();
                });
            }
        },
        {
            key: "jsonSchema",
            value: function jsonSchema(funcName) {
                var definitions = {};
                this.entries.forEach(function(entry) {
                    switch(entry.switch().value){
                        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value:
                            {
                                var udt = entry.udtEnumV0();
                                definitions[udt.name().toString()] = enumToJsonSchema(udt);
                                break;
                            }
                        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value:
                            {
                                var _udt = entry.udtStructV0();
                                definitions[_udt.name().toString()] = structToJsonSchema(_udt);
                                break;
                            }
                        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:
                            {
                                var _udt2 = entry.udtUnionV0();
                                definitions[_udt2.name().toString()] = unionToJsonSchema(_udt2);
                                break;
                            }
                        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value:
                            {
                                var fn = entry.functionV0();
                                var fnName = fn.name().toString();
                                var _functionToJsonSchema = functionToJsonSchema(fn), input = _functionToJsonSchema.input;
                                definitions[fnName] = input;
                                break;
                            }
                        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:
                            {}
                    }
                });
                var res = {
                    $schema: "http://json-schema.org/draft-07/schema#",
                    definitions: _objectSpread(_objectSpread({}, PRIMITIVE_DEFINITONS), definitions)
                };
                if (funcName) {
                    res.$ref = "#/definitions/".concat(funcName);
                }
                return res;
            }
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/client.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Client = void 0;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
var _spec = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/spec.js [app-ssr] (ecmascript)");
var _rpc = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/index.js [app-ssr] (ecmascript)");
var _assembled_transaction = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/assembled_transaction.js [app-ssr] (ecmascript)");
var _utils = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/utils.js [app-ssr] (ecmascript)");
var _excluded = [
    "method"
], _excluded2 = [
    "wasmHash",
    "salt",
    "format",
    "fee",
    "timeoutInSeconds",
    "simulate"
];
function _regeneratorRuntime() {
    "use strict";
    _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    };
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        catch: function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _objectWithoutProperties(e, t) {
    if (null == e) return {};
    var o, r, i = _objectWithoutPropertiesLoose(e, t);
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e);
        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
    }
    return i;
}
function _objectWithoutPropertiesLoose(r, e) {
    if (null == r) return {};
    var t = {};
    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {
        if (-1 !== e.indexOf(n)) continue;
        t[n] = r[n];
    }
    return t;
}
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _toConsumableArray(r) {
    return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _iterableToArray(r) {
    if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles(r) {
    if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
var CONSTRUCTOR_FUNC = "__constructor";
function specFromWasm(_x) {
    return _specFromWasm.apply(this, arguments);
}
function _specFromWasm() {
    _specFromWasm = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(wasm) {
        var xdrSections, wasmModule, customData, bufferSection, specEntryArray, spec;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
            while(1)switch(_context5.prev = _context5.next){
                case 0:
                    _context5.prev = 0;
                    _context5.next = 3;
                    return WebAssembly.compile(wasm);
                case 3:
                    wasmModule = _context5.sent;
                    xdrSections = WebAssembly.Module.customSections(wasmModule, "contractspecv0");
                    _context5.next = 11;
                    break;
                case 7:
                    _context5.prev = 7;
                    _context5.t0 = _context5["catch"](0);
                    customData = parseWasmCustomSections(wasm);
                    xdrSections = customData.get('contractspecv0');
                case 11:
                    if (!(!xdrSections || xdrSections.length === 0)) {
                        _context5.next = 13;
                        break;
                    }
                    throw new Error("Could not obtain contract spec from wasm");
                case 13:
                    bufferSection = Buffer.from(xdrSections[0]);
                    specEntryArray = (0, _utils.processSpecEntryStream)(bufferSection);
                    spec = new _spec.Spec(specEntryArray);
                    return _context5.abrupt("return", spec);
                case 17:
                case "end":
                    return _context5.stop();
            }
        }, _callee5, null, [
            [
                0,
                7
            ]
        ]);
    }));
    return _specFromWasm.apply(this, arguments);
}
function parseWasmCustomSections(buffer) {
    var sections = new Map();
    var arrayBuffer = buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength);
    var offset = 0;
    var read = function read(length) {
        if (offset + length > buffer.byteLength) throw new Error('Buffer overflow');
        var bytes = new Uint8Array(arrayBuffer, offset, length);
        offset += length;
        return bytes;
    };
    if (_toConsumableArray(read(4)).join() !== '0,97,115,109') throw new Error('Invalid WASM magic');
    if (_toConsumableArray(read(4)).join() !== '1,0,0,0') throw new Error('Invalid WASM version');
    while(offset < buffer.byteLength){
        var sectionId = read(1)[0];
        var sectionLength = readVarUint32();
        var start = offset;
        if (sectionId === 0) {
            var nameLen = readVarUint32();
            if (nameLen === 0 || offset + nameLen > start + sectionLength) continue;
            var nameBytes = read(nameLen);
            var payload = read(sectionLength - (offset - start));
            try {
                var name = new TextDecoder('utf-8', {
                    fatal: true
                }).decode(nameBytes);
                if (payload.length > 0) {
                    sections.set(name, (sections.get(name) || []).concat(payload));
                }
            } catch (_unused) {}
        } else {
            offset += sectionLength;
        }
    }
    function readVarUint32() {
        var value = 0, shift = 0;
        while(true){
            var byte = read(1)[0];
            value |= (byte & 0x7F) << shift;
            if ((byte & 0x80) === 0) break;
            if ((shift += 7) >= 32) throw new Error('Invalid WASM value');
        }
        return value >>> 0;
    }
    return sections;
}
function specFromWasmHash(_x2, _x3) {
    return _specFromWasmHash.apply(this, arguments);
}
function _specFromWasmHash() {
    _specFromWasmHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(wasmHash, options) {
        var format, rpcUrl, allowHttp, serverOpts, server, wasm, _args6 = arguments;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
            while(1)switch(_context6.prev = _context6.next){
                case 0:
                    format = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : "hex";
                    if (!(!options || !options.rpcUrl)) {
                        _context6.next = 3;
                        break;
                    }
                    throw new TypeError("options must contain rpcUrl");
                case 3:
                    rpcUrl = options.rpcUrl, allowHttp = options.allowHttp;
                    serverOpts = {
                        allowHttp: allowHttp
                    };
                    server = new _rpc.Server(rpcUrl, serverOpts);
                    _context6.next = 8;
                    return server.getContractWasmByHash(wasmHash, format);
                case 8:
                    wasm = _context6.sent;
                    return _context6.abrupt("return", specFromWasm(wasm));
                case 10:
                case "end":
                    return _context6.stop();
            }
        }, _callee6);
    }));
    return _specFromWasmHash.apply(this, arguments);
}
var Client = exports.Client = function() {
    function Client(spec, options) {
        var _this = this;
        _classCallCheck(this, Client);
        _defineProperty(this, "txFromJSON", function(json) {
            var _JSON$parse = JSON.parse(json), method = _JSON$parse.method, tx = _objectWithoutProperties(_JSON$parse, _excluded);
            return _assembled_transaction.AssembledTransaction.fromJSON(_objectSpread(_objectSpread({}, _this.options), {}, {
                method: method,
                parseResultXdr: function parseResultXdr(result) {
                    return _this.spec.funcResToNative(method, result);
                }
            }), tx);
        });
        _defineProperty(this, "txFromXDR", function(xdrBase64) {
            return _assembled_transaction.AssembledTransaction.fromXDR(_this.options, xdrBase64, _this.spec);
        });
        this.spec = spec;
        this.options = options;
        this.spec.funcs().forEach(function(xdrFn) {
            var method = xdrFn.name().toString();
            if (method === CONSTRUCTOR_FUNC) {
                return;
            }
            var assembleTransaction = function assembleTransaction(args, methodOptions) {
                return _assembled_transaction.AssembledTransaction.build(_objectSpread(_objectSpread(_objectSpread({
                    method: method,
                    args: args && spec.funcArgsToScVals(method, args)
                }, options), methodOptions), {}, {
                    errorTypes: spec.errorCases().reduce(function(acc, curr) {
                        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, curr.value(), {
                            message: curr.doc().toString()
                        }));
                    }, {}),
                    parseResultXdr: function parseResultXdr(result) {
                        return spec.funcResToNative(method, result);
                    }
                }));
            };
            _this[method] = spec.getFunc(method).inputs().length === 0 ? function(opts) {
                return assembleTransaction(undefined, opts);
            } : assembleTransaction;
        });
    }
    return _createClass(Client, null, [
        {
            key: "deploy",
            value: function() {
                var _deploy = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(args, options) {
                    var wasmHash, salt, format, fee, timeoutInSeconds, simulate, clientOptions, spec, operation;
                    return _regeneratorRuntime().wrap(function _callee$(_context) {
                        while(1)switch(_context.prev = _context.next){
                            case 0:
                                wasmHash = options.wasmHash, salt = options.salt, format = options.format, fee = options.fee, timeoutInSeconds = options.timeoutInSeconds, simulate = options.simulate, clientOptions = _objectWithoutProperties(options, _excluded2);
                                _context.next = 3;
                                return specFromWasmHash(wasmHash, clientOptions, format);
                            case 3:
                                spec = _context.sent;
                                operation = _stellarBase.Operation.createCustomContract({
                                    address: new _stellarBase.Address(options.address || options.publicKey),
                                    wasmHash: typeof wasmHash === "string" ? Buffer.from(wasmHash, format !== null && format !== void 0 ? format : "hex") : wasmHash,
                                    salt: salt,
                                    constructorArgs: args ? spec.funcArgsToScVals(CONSTRUCTOR_FUNC, args) : []
                                });
                                return _context.abrupt("return", _assembled_transaction.AssembledTransaction.buildWithOp(operation, _objectSpread(_objectSpread({
                                    fee: fee,
                                    timeoutInSeconds: timeoutInSeconds,
                                    simulate: simulate
                                }, clientOptions), {}, {
                                    contractId: "ignored",
                                    method: CONSTRUCTOR_FUNC,
                                    parseResultXdr: function parseResultXdr(result) {
                                        return new Client(spec, _objectSpread(_objectSpread({}, clientOptions), {}, {
                                            contractId: _stellarBase.Address.fromScVal(result).toString()
                                        }));
                                    }
                                })));
                            case 6:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee);
                }));
                function deploy(_x4, _x5) {
                    return _deploy.apply(this, arguments);
                }
                return deploy;
            }()
        },
        {
            key: "fromWasmHash",
            value: function() {
                var _fromWasmHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(wasmHash, options) {
                    var format, rpcUrl, allowHttp, serverOpts, server, wasm, _args2 = arguments;
                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                        while(1)switch(_context2.prev = _context2.next){
                            case 0:
                                format = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : "hex";
                                if (!(!options || !options.rpcUrl)) {
                                    _context2.next = 3;
                                    break;
                                }
                                throw new TypeError('options must contain rpcUrl');
                            case 3:
                                rpcUrl = options.rpcUrl, allowHttp = options.allowHttp;
                                serverOpts = {
                                    allowHttp: allowHttp
                                };
                                server = new _rpc.Server(rpcUrl, serverOpts);
                                _context2.next = 8;
                                return server.getContractWasmByHash(wasmHash, format);
                            case 8:
                                wasm = _context2.sent;
                                return _context2.abrupt("return", Client.fromWasm(wasm, options));
                            case 10:
                            case "end":
                                return _context2.stop();
                        }
                    }, _callee2);
                }));
                function fromWasmHash(_x6, _x7) {
                    return _fromWasmHash.apply(this, arguments);
                }
                return fromWasmHash;
            }()
        },
        {
            key: "fromWasm",
            value: function() {
                var _fromWasm = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(wasm, options) {
                    var spec;
                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                        while(1)switch(_context3.prev = _context3.next){
                            case 0:
                                _context3.next = 2;
                                return specFromWasm(wasm);
                            case 2:
                                spec = _context3.sent;
                                return _context3.abrupt("return", new Client(spec, options));
                            case 4:
                            case "end":
                                return _context3.stop();
                        }
                    }, _callee3);
                }));
                function fromWasm(_x8, _x9) {
                    return _fromWasm.apply(this, arguments);
                }
                return fromWasm;
            }()
        },
        {
            key: "from",
            value: function() {
                var _from = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(options) {
                    var rpcUrl, contractId, allowHttp, serverOpts, server, wasm;
                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                        while(1)switch(_context4.prev = _context4.next){
                            case 0:
                                if (!(!options || !options.rpcUrl || !options.contractId)) {
                                    _context4.next = 2;
                                    break;
                                }
                                throw new TypeError('options must contain rpcUrl and contractId');
                            case 2:
                                rpcUrl = options.rpcUrl, contractId = options.contractId, allowHttp = options.allowHttp;
                                serverOpts = {
                                    allowHttp: allowHttp
                                };
                                server = new _rpc.Server(rpcUrl, serverOpts);
                                _context4.next = 7;
                                return server.getContractWasmByContractId(contractId);
                            case 7:
                                wasm = _context4.sent;
                                return _context4.abrupt("return", Client.fromWasm(wasm, options));
                            case 9:
                            case "end":
                                return _context4.stop();
                        }
                    }, _callee4);
                }));
                function from(_x10) {
                    return _from.apply(this, arguments);
                }
                return from;
            }()
        }
    ]);
}();
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/contract/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _assembled_transaction = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/assembled_transaction.js [app-ssr] (ecmascript)");
Object.keys(_assembled_transaction).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _assembled_transaction[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _assembled_transaction[key];
        }
    });
});
var _basic_node_signer = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/basic_node_signer.js [app-ssr] (ecmascript)");
Object.keys(_basic_node_signer).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _basic_node_signer[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _basic_node_signer[key];
        }
    });
});
var _client = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/client.js [app-ssr] (ecmascript)");
Object.keys(_client).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _client[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _client[key];
        }
    });
});
var _rust_result = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/rust_result.js [app-ssr] (ecmascript)");
Object.keys(_rust_result).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _rust_result[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _rust_result[key];
        }
    });
});
var _sent_transaction = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/sent_transaction.js [app-ssr] (ecmascript)");
Object.keys(_sent_transaction).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _sent_transaction[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _sent_transaction[key];
        }
    });
});
var _spec = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/spec.js [app-ssr] (ecmascript)");
Object.keys(_spec).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _spec[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _spec[key];
        }
    });
});
var _types = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/types.js [app-ssr] (ecmascript)");
Object.keys(_types).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _types[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _types[key];
        }
    });
});
}}),
"[project]/node_modules/@stellar/stellar-sdk/lib/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _exportNames = {
    Config: true,
    Utils: true,
    StellarToml: true,
    Federation: true,
    WebAuth: true,
    Friendbot: true,
    Horizon: true,
    rpc: true,
    contract: true
};
Object.defineProperty(exports, "Config", {
    enumerable: true,
    get: function get() {
        return _config.Config;
    }
});
exports.StellarToml = exports.Horizon = exports.Friendbot = exports.Federation = void 0;
Object.defineProperty(exports, "Utils", {
    enumerable: true,
    get: function get() {
        return _utils.Utils;
    }
});
exports.rpc = exports.default = exports.contract = exports.WebAuth = void 0;
var _errors = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/errors/index.js [app-ssr] (ecmascript)");
Object.keys(_errors).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _errors[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _errors[key];
        }
    });
});
var _config = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/config.js [app-ssr] (ecmascript)");
var _utils = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/utils.js [app-ssr] (ecmascript)");
var _StellarToml = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/stellartoml/index.js [app-ssr] (ecmascript)"));
exports.StellarToml = _StellarToml;
var _Federation = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/federation/index.js [app-ssr] (ecmascript)"));
exports.Federation = _Federation;
var _WebAuth = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/webauth/index.js [app-ssr] (ecmascript)"));
exports.WebAuth = _WebAuth;
var _Friendbot = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/friendbot/index.js [app-ssr] (ecmascript)"));
exports.Friendbot = _Friendbot;
var _Horizon = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/horizon/index.js [app-ssr] (ecmascript)"));
exports.Horizon = _Horizon;
var _rpc = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/rpc/index.js [app-ssr] (ecmascript)"));
exports.rpc = _rpc;
var _contract = _interopRequireWildcard(__turbopack_context__.r("[project]/node_modules/@stellar/stellar-sdk/lib/contract/index.js [app-ssr] (ecmascript)"));
exports.contract = _contract;
var _stellarBase = __turbopack_context__.r("[project]/node_modules/@stellar/stellar-base/lib/index.js [app-ssr] (ecmascript)");
Object.keys(_stellarBase).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _stellarBase[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
            return _stellarBase[key];
        }
    });
});
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var _default = exports.default = module.exports;
if (typeof global.__USE_AXIOS__ === 'undefined') {
    global.__USE_AXIOS__ = true;
}
if (typeof global.__USE_EVENTSOURCE__ === 'undefined') {
    global.__USE_EVENTSOURCE__ = false;
}
}}),

};

//# sourceMappingURL=node_modules_%40stellar_stellar-sdk_lib_df3aac3b._.js.map